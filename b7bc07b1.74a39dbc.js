/*! For license information please see b7bc07b1.74a39dbc.js.LICENSE.txt */
(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{110:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return r})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return d}));var o=n(1),a=n(6),i=(n(119),n(118)),r={id:"intermediate-tutorial",title:"\uc911\uae09 \ud29c\ud1a0\ub9ac\uc5bc",sidebar_label:"\uc911\uae09 \ud29c\ud1a0\ub9ac\uc5bc",hide_title:!0},c={id:"tutorials/intermediate-tutorial",title:"\uc911\uae09 \ud29c\ud1a0\ub9ac\uc5bc",description:"# \uc911\uae09 \ud29c\ud1a0\ub9ac\uc5bc: Redux Toolkit in Action",source:"@site/../docs/tutorials/intermediate-tutorial.md",permalink:"/redux-toolkit/tutorials/intermediate-tutorial",sidebar_label:"\uc911\uae09 \ud29c\ud1a0\ub9ac\uc5bc",sidebar:"docs",previous:{title:"\uae30\ubcf8 \ud29c\ud1a0\ub9ac\uc5bc",permalink:"/redux-toolkit/tutorials/basic-tutorial"},next:{title:"Advanced Tutorial",permalink:"/redux-toolkit/tutorials/advanced-tutorial"}},l=[{value:"Redux Todos \uc608\uc81c \ub9ac\ubdf0",id:"redux-todos-\uc608\uc81c-\ub9ac\ubdf0",children:[]},{value:"\ucd08\uae30 \ub2e8\uacc4",id:"\ucd08\uae30-\ub2e8\uacc4",children:[{value:"Project\uc5d0 Redux Toolkit \ucd94\uac00\ud558\uae30",id:"project\uc5d0-redux-toolkit-\ucd94\uac00\ud558\uae30",children:[]},{value:"Store\uc5d0\uc11c <code>configureStore</code>\ub97c \uc0ac\uc6a9\ud558\ub3c4\ub85d \uc218\uc815",id:"store\uc5d0\uc11c-configurestore\ub97c-\uc0ac\uc6a9\ud558\ub3c4\ub85d-\uc218\uc815",children:[]}]},{value:"Todo Slice\ub9cc\ub4e4\uae30",id:"todo-slice\ub9cc\ub4e4\uae30",children:[{value:"Slices \uc774\ud574\ud558\uae30",id:"slices-\uc774\ud574\ud558\uae30",children:[]},{value:"\uae30\uc874\uc758 Todos Reducer",id:"\uae30\uc874\uc758-todos-reducer",children:[]},{value:"Slice Reducer\uc791\uc131",id:"slice-reducer\uc791\uc131",children:[]},{value:"Updating the Todos Tests",id:"updating-the-todos-tests",children:[]},{value:"Implementing Todo IDs",id:"implementing-todo-ids",children:[]}]},{value:"Using the New Todos Slice",id:"using-the-new-todos-slice",children:[{value:"Updating the Root Reducer",id:"updating-the-root-reducer",children:[]},{value:"Updating the Add Todo Component",id:"updating-the-add-todo-component",children:[]},{value:"Updating the Todo List",id:"updating-the-todo-list",children:[]}]},{value:"Creating and Using the Filters Slice",id:"creating-and-using-the-filters-slice",children:[{value:"Writing the Filters Slice",id:"writing-the-filters-slice",children:[]},{value:"Using the Filters Slice",id:"using-the-filters-slice",children:[]}]},{value:"Optimizing Todo Filtering",id:"optimizing-todo-filtering",children:[]},{value:"Cleanup",id:"cleanup",children:[]},{value:"Summary",id:"summary",children:[]}],s={rightToc:l};function d(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(o.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h1",{id:"\uc911\uae09-\ud29c\ud1a0\ub9ac\uc5bc-redux-toolkit-in-action"},"\uc911\uae09 \ud29c\ud1a0\ub9ac\uc5bc: Redux Toolkit in Action"),Object(i.b)("p",null,Object(i.b)("a",Object(o.a)({parentName:"p"},{href:"/redux-toolkit/tutorials/basic-tutorial"}),"\uae30\ubcf8 \ud29c\ud1a0\ub9ac\uc5bc"),"\uc5d0\uc11c\ub294 Redux Toolkit\uc5d0 \ud3ec\ud568 \ub41c \uc8fc\uc694 API\uc758 \uae30\ub2a5\uacfc \uac04\ub2e8\ud55c \uc608\uc81c\ub97c \ub2e4\ub904\ubcf4\uc558\uace0, React, NPM, Webpack\ub4f1\uc758 \ube4c\ub4dc \ub3c4\uad6c\ub97c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uace0 HTML \ud398\uc774\uc9c0\uc758 \uc77c\ubc18 JS \uc2a4\ud06c\ub9bd\ud2b8 \ud0dc\uadf8\uc5d0\uc11c Redux \ubc0f RTK(Redux Toolkit)\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4\ub294 \uac83\uc744 \uc54c\uac8c \ub418\uc5c8\uc2b5\ub2c8\ub2e4."),Object(i.b)("p",null,"\uc774\ubc88 \ud29c\ud1a0\ub9ac\uc5bc\uc5d0\uc11c\ub294 RTK\ub97c React \uc571\uc5d0\uc11c \uc5b4\ub5bb\uac8c \uc0ac\uc6a9\ud574\ubcf4\ub294\uc9c0 \uc18c\uac1c\ud569\ub2c8\ub2e4. \uad6c\uccb4\uc801\uc73c\ub85c, ",Object(i.b)("a",Object(o.a)({parentName:"p"},{href:"https://redux.js.org/introduction/examples#todos"}),'Redux "todos" \uc608\uc81c'),"\ub97c RTK\ub85c \uad6c\ud604\ud574\ubcfc \uac83\uc785\ub2c8\ub2e4."),Object(i.b)("p",null,"\uc774\ubc88 \ud29c\ud1a0\ub9ac\uc5bc\uc5d0\uc11c \ub2e4\ub8e8\uac8c \ub420 \uac1c\ub150\ub4e4 \uc785\ub2c8\ub2e4:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},'"Redux"\ucf54\ub4dc\ub97c \uc5b4\ub5bb\uac8c RTK\ub85c \ubc14\uafb8\ub294\uc9c0'),Object(i.b)("li",{parentName:"ul"},"RTK\ub97c React+Redux \uc571\uc5d0\uc11c \uc5b4\ub5bb\uac8c \uc0ac\uc6a9\ud558\ub294\uc9c0"),Object(i.b)("li",{parentName:"ul"},"RTK\uc758 \uac15\ub825\ud55c \uae30\ub2a5 \uc911 \ud558\ub098\uc778 'Redux \ucf54\ub4dc\ub97c \uc5b4\ub5bb\uac8c \uac04\uacb0\ud558\uac8c \ub9cc\ub4dc\ub294 \ubc29\ubc95'")),Object(i.b)("p",null,"\ub610\ud55c, RTK\uc5d0 \uad6d\ud55c\ub41c \uac83\uc740 \uc544\ub2c8\uc9c0\ub9cc React-Redux \ucf54\ub4dc\ub97c \uac1c\uc120\ud560 \uc218 \uc788\ub294 \uba87 \uac00\uc9c0 \ubc29\ubc95\uc744 \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4."),Object(i.b)("p",null,"\uc774 \ud29c\ud1a0\ub9ac\uc5bc\uc5d0\uc11c \ub2e4\ub8e8\ub294 \ubaa8\ub4e0 \ucf54\ub4dc\ub294 ",Object(i.b)("a",Object(o.a)({parentName:"p"},{href:"https://github.com/reduxjs/rtk-convert-todos-example"}),"github.com/reduxjs/rtk-convert-todos-example"),"\uc5d0\uc11c \ud655\uc778\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n\ud29c\ud1a0\ub9ac\uc5bc\uc740 \uc774 \uc800\uc7a5\uc18c\uc758 \ucee4\ubc0b \ud788\uc2a4\ud1a0\ub9ac\ub97c \ub530\ub77c\uac00\uba70 \uc9c4\ud589\ub418\uace0, \uac1c\ubcc4 \ucee4\ubc0b\uc5d0 \ub300\ud55c \ub9c1\ud06c\ub294 \ub2e4\uc74c\uacfc \uac19\uc774 \ube14\ub85d\uc73c\ub85c \uac15\uc870 \ud45c\uc2dc \ub429\ub2c8\ub2e4."),Object(i.b)("blockquote",null,Object(i.b)("ul",{parentName:"blockquote"},Object(i.b)("li",{parentName:"ul"},"Commit message here"))),Object(i.b)("h2",{id:"redux-todos-\uc608\uc81c-\ub9ac\ubdf0"},"Redux Todos \uc608\uc81c \ub9ac\ubdf0"),Object(i.b)("p",null,Object(i.b)("a",Object(o.a)({parentName:"p"},{href:"https://github.com/reduxjs/redux/tree/9c9a4d2a1c62c9dbddcbb05488f8bd77d24c81de/examples/todos/src"}),'\ud604\uc7ac "todos" \uc608\uc81c \ucf54\ub4dc'),"\ub97c \uc0b4\ud3b4\ubcf4\uba74 \uba87 \uac00\uc9c0 \uc0ac\ud56d\uc744 \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(o.a)({parentName:"li"},{href:"https://github.com/reduxjs/redux/blob/9c9a4d2a1c62c9dbddcbb05488f8bd77d24c81de/examples/todos/src/reducers/todos.js"}),Object(i.b)("inlineCode",{parentName:"a"},"todos")," reducer \ud568\uc218"),'\ub294 \uc911\ucca9\ub41c JS \uac1d\uccb4\uc640 \ubc30\uc5f4\uc744 "\uc218\ub3d9\uc73c\ub85c" \ubcf5\uc0ac\ud558\uba70 \ubd88\ubcc0\uc131\uc744 \uad00\ub9ac\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4.'),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(o.a)({parentName:"li"},{href:"https://github.com/reduxjs/redux/blob/9c9a4d2a1c62c9dbddcbb05488f8bd77d24c81de/examples/todos/src/actions/index.js"}),Object(i.b)("inlineCode",{parentName:"a"},"actions")," \ud30c\uc77c"),"\uc5d0\ub294 \uc9c1\uc811 \uc791\uc131\ud55c \uc561\uc158 \uc0dd\uc131\uc790 \ud568\uc218\uac00 \uc788\uc73c\uba70 reducer\ud30c\uc77c\uacfc action\ud30c\uc77c\uc5d0\uc11c \uc911\ubcf5\uc73c\ub85c \uc0ac\uc6a9\ub418\ub294 \uc561\uc158 type\ubb38\uc790\uc5f4\uc774 \uc788\uc2b5\ub2c8\ub2e4."),Object(i.b)("li",{parentName:"ul"},"\uc608\uc81c\uc758 \ucf54\ub4dc\ub294 ",Object(i.b)("inlineCode",{parentName:"li"},"actions")," \uc640 ",Object(i.b)("inlineCode",{parentName:"li"},"reducers"),"\ub97c \uac01\uac01 \ubcc4\ub3c4\uc758 \ud30c\uc77c\ub85c \uac00\uc9c0\uace0 \uc788\uc73c\uba70, \uc774\ub97c ",Object(i.b)("a",Object(o.a)({parentName:"li"},{href:"https://redux.js.org/faq/code-structure#what-should-my-file-structure-look-like-how-should-i-group-my-action-creators-and-reducers-in-my-project-where-should-my-selectors-go"}),'"\ud3f4\ub354 \ubcc4"\ub85c \ubd84\ub9ac\ud558\uc5ec'),"\uad00\ub9ac \ud569\ub2c8\ub2e4."),Object(i.b)("li",{parentName:"ul"},"React\ucef4\ud3ec\ub10c\ud2b8\ub294 ",Object(i.b)("a",Object(o.a)({parentName:"li"},{href:"https://medium.com/@dan_abramov/smart-and-dumb-components-7ca2f9a7c7d0"}),'"container/presentational" \ud328\ud134'),'\uc73c\ub85c \uc791\uc131\ub418\uba70, \uc5ec\uae30\uc11c "presentational"\ucef4\ud3ec\ub10c\ud2b8\ub294\uc640 ',Object(i.b)("a",Object(o.a)({parentName:"li"},{href:"https://github.com/reduxjs/redux/tree/9c9a4d2a1c62c9dbddcbb05488f8bd77d24c81de/examples/todos/src/containers"}),'Redux "container" \uc5f0\uacb0\uc5d0 \ub300\ud55c \uc815\uc758\ub294 \ub2e4\ub978 \ud3f4\ub354\uc5d0 \uc788\uc2b5\ub2c8\ub2e4.')),Object(i.b)("li",{parentName:"ul"},'\uc77c\ubd80 \ucf54\ub4dc\ub294 Redux "best practice"\ub97c \ub530\ub974\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc774 \ud29c\ud1a0\ub9ac\uc5bc\uc744 \uc9c4\ud589\ud558\uba74\uc11c \uba87 \uac00\uc9c0 \uad6c\uccb4\uc801\uc778 \uc608\uc2dc\ub97c \uc0b4\ud3b4 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4.')),Object(i.b)("p",null,'\uc774 \uc608\uc81c\ub294 \uc791\uc740 \uc571\uc785\ub2c8\ub2e4. \uc774\ub294 \uc2e4\uc81c\ub85c React\uc640 Redux\ub97c \uc5b4\ub5bb\uac8c \ud568\uaed8 \uc4f8 \uc218 \uc788\ub294 \uc9c0\uc5d0 \ub300\ud55c \uae30\ubcf8\uc0ac\ud56d\uc744 \uc124\uba85\ud558\uae30 \uc704\ud55c \uac83\uc774\uba70, \uc2e4\uc81c \ud504\ub85c\ub355\uc158 \uc571\uc5d0 \uc801\uc6a9\uc2dc \uc774 \ud29c\ud1a0\ub9ac\uc5bc\uc758 \ubc29\uc2dd\uc73c "\ub9de\ub294 \ubc29\ubc95"\uc73c\ub85c \uc0ac\uc6a9\ud560 \ud544\uc694\ub294 \uc5c6\uc2b5\ub2c8\ub2e4. \ub300\ubd80\ubd84\uc758 \uac1c\ubc1c\uc790\uac00 \ubb38\uc11c\uc640 \uc608\uc81c\uc5d0\uc11c \ubcfc \uc218 \uc788\ub294 \ud328\ud134\uc744 \uc0ac\uc6a9\ud558\ub294\ub370, \uc774\ub294 \uac1c\uc120\uc758 \uc5ec\uc9c0\uac00 \uc788\uc2b5\ub2c8\ub2e4.'),Object(i.b)("h2",{id:"\ucd08\uae30-\ub2e8\uacc4"},"\ucd08\uae30 \ub2e8\uacc4"),Object(i.b)("h3",{id:"project\uc5d0-redux-toolkit-\ucd94\uac00\ud558\uae30"},"Project\uc5d0 Redux Toolkit \ucd94\uac00\ud558\uae30"),Object(i.b)("p",null,'todos\uc608\uc81c\ub294 Redux\uc800\uc7a5\uc18c\uc5d0 \uc788\uae30 \ub54c\ubb38\uc5d0 Redux "todos" \uc18c\uc2a4 \ucf54\ub4dc\ub97c \uc0c8\ub85c\uc6b4 Create-React-App \ud504\ub85c\uc81d\ud2b8\uc5d0 \ubcf5\uc0ac\ud558\uace0 Prettier\ub97c \ucd94\uac00\ud558\uc5ec \ucf54\ub4dc\uc758 \ud615\uc2dd\uc774 \uc77c\uad00\ub418\uac8c \uc720\uc9c0\ud558\ub3c4\ub85d \ud569\ub2c8\ub2e4. ',Object(i.b)("inlineCode",{parentName:"p"},"/src"),'\ud3f4\ub354\uc5d0\uc11c \uc2dc\uc791\ud558\ub294 "\uc808\ub300\uacbd\ub85c import"\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub3c4\ub85d \ud558\ub294 ',Object(i.b)("a",Object(o.a)({parentName:"p"},{href:"https://code.visualstudio.com/docs/languages/jsconfig"}),"jsconfig.json"),"\ud30c\uc77c\ub3c4 \uc788\uc2b5\ub2c8\ub2e4."),Object(i.b)("blockquote",null,Object(i.b)("ul",{parentName:"blockquote"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(o.a)({parentName:"li"},{href:"https://github.com/reduxjs/rtk-convert-todos-example/commit/a8e0a9a9d77b9dcd9e881079e7cca449084ca7b1"}),"Initial commit"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(o.a)({parentName:"li"},{href:"https://github.com/reduxjs/rtk-convert-todos-example/commit/b866e205b9ebece84367f11d2faabc557bd08e23"}),"Add jsconfig.json to support absolute imports")))),Object(i.b)("p",null,"\uae30\ubcf8 \ud29c\ud1a0\ub9ac\uc5bc\uc5d0\uc11c\ub294 Redux Toolkit\uc744 \uac1c\ubcc4 \uc2a4\ud06c\ub9bd\ud2b8\ub85c \uc5f0\uacb0\ud588\uc2b5\ub2c8\ub2e4. \uadf8\ub7ec\ub098 \uc77c\ubc18\uc801\uc778 \uc571\uc5d0\uc11c\ub294 RTK\ub97c package dependency\ub85c \ucd94\uac00\ud574\uc57c \ud569\ub2c8\ub2e4. \uc774\ub294 NPM \ub610\ub294 Yarn\ud328\ud0a4\uc9c0 \uad00\ub9ac\uc790\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc218\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4:"),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-bash"}),"# NPM\uc744 \uc0ac\uc6a9\ud560 \uacbd\uc6b0:\nnpm install @reduxjs/toolkit\n\n# Yarn\uc744 \uc0ac\uc6a9\ud560 \uacbd\uc6b0:\nyarn add @reduxjs/toolkit\n")),Object(i.b)("p",null,"\uc124\uce58\uac00 \uc644\ub8cc\ub418\uba74, ",Object(i.b)("inlineCode",{parentName:"p"},"package.json"),' \ud30c\uc77c\uacfc "lock file"\uc744 \ud328\ud0a4\uc9c0 \uad00\ub9ac\uc790\uc5d0 \ucd94\uac00\ud558\uace0 \ucee4\ubc0b\ud574\uc57c \ud569\ub2c8\ub2e4.(NPM: ',Object(i.b)("inlineCode",{parentName:"p"},"package-lock.json"),", YARN: ",Object(i.b)("inlineCode",{parentName:"p"},"yarn.lock"),")."),Object(i.b)("blockquote",null,Object(i.b)("ul",{parentName:"blockquote"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(o.a)({parentName:"li"},{href:"https://github.com/reduxjs/rtk-convert-todos-example/commit/c3f47aeaecf855561e4db9d452b928f1b8b6c016"}),"Add Redux Toolkit")))),Object(i.b)("p",null,"\uc774 \uc791\uc5c5\uc774 \uc644\ub8cc\ub418\uba74, \uc774\uc81c \ucf54\ub4dc\ub97c \uc791\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),Object(i.b)("h3",{id:"store\uc5d0\uc11c-configurestore\ub97c-\uc0ac\uc6a9\ud558\ub3c4\ub85d-\uc218\uc815"},"Store\uc5d0\uc11c ",Object(i.b)("inlineCode",{parentName:"h3"},"configureStore"),"\ub97c \uc0ac\uc6a9\ud558\ub3c4\ub85d \uc218\uc815"),Object(i.b)("p",null,'"\uce74\uc6b4\ud130"\uc608\uc81c\uc640 \ub9c8\ucc2c\uac00\uc9c0\ub85c \uc77c\ubc18 Redux ',Object(i.b)("inlineCode",{parentName:"p"},"createStore"),"\uae30\ub2a5\uc744 RTK\uc758 ",Object(i.b)("inlineCode",{parentName:"p"},"configureStore"),"\ub85c \ubcc0\uacbd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uacfc\uc815\uc5d0\uc11c Redux DevTools \ud655\uc7a5 \ud504\ub85c\uadf8\ub7a8\uc774 \uc790\ub3d9\uc73c\ub85c \uc124\uc815\ub429\ub2c8\ub2e4."),Object(i.b)("p",null,"\uc774 \uacfc\uc815\uc5d0\uc11c\uc758 \ubcc0\uacbd\uc740 \uac04\ub2e8\ud569\ub2c8\ub2e4. ",Object(i.b)("inlineCode",{parentName:"p"},"src/index.js"),"\uc5d0\uc11c ",Object(i.b)("inlineCode",{parentName:"p"},"createStore"),"\ub300\uc2e0 ",Object(i.b)("inlineCode",{parentName:"p"},"configureStore"),"\ub97c \uc0ac\uc6a9\ud558\ub3c4\ub85d \uc218\uc815\ud558\uba74 \ub429\ub2c8\ub2e4. ",Object(i.b)("inlineCode",{parentName:"p"},"configureStore"),"\ub294 \uc635\uc158 \uac1d\uccb4\ub97c \uc815\ud655\ud55c key\uc640 \ud568\uaed8 \ub118\uaca8\uc57c \ud558\ubbc0\ub85c ",Object(i.b)("inlineCode",{parentName:"p"},"rootReducer"),"\ub97c \uccab \ubc88\uc9f8 \ub9e4\uac1c\ubcc0\uc218\ub85c \uc804\ub2ec\ud558\ub294 \ub300\uc2e0 ",Object(i.b)("inlineCode",{parentName:"p"},"reducer"),"\ub77c\ub294 key\uc758 value\ub85c \uc804\ub2ec\ud569\ub2c8\ub2e4."),Object(i.b)("blockquote",null,Object(i.b)("ul",{parentName:"blockquote"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(o.a)({parentName:"li"},{href:"https://github.com/reduxjs/rtk-convert-todos-example/commit/cdfc15edbd82beda9ef0521aa191574b6cc7695a"}),"Convert store setup to use configureStore")))),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-diff",metastring:"{3-4,9-12}","{3-4,9-12}":!0}),'import React from "react";\nimport { render } from "react-dom";\n-import { createStore } from "redux";\n+import { configureStore } from "@reduxjs/toolkit";\nimport { Provider } from "react-redux";\nimport App from "./components/App";\nimport rootReducer from "./reducers";\n\n- const store = createStore(rootReducer);\n+ const store = configureStore({\n+   reducer: rootReducer,\n+});\n')),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"\uc5ec\uc804\ud788 \uc774\uc804\uacfc \ub3d9\uc77c\ud55c root reducer\ub97c \uc0ac\uc6a9\ud558\uace0 \uc788\uc73c\uba70 Redux Store\ub294\ubcc0\uacbd \uc911\uc785\ub2c8\ub2e4. \ubcc0\uacbd\ub41c \uac83\uc740 Store\ub97c \uc0dd\uc131\ud558\ub294 \uacfc\uc815\uc5d0\uc11c \uac1c\ubc1c\uc774 \ud3b8\ub9ac\ud558\ub3c4\ub85d \ub3c4\uad6c(\uc5ed\uc8fc: Redux Dev Tools)\uac00 \uc790\ub3d9\uc73c\ub85c \uc124\uc815\ub41c \uac83 \ubfd0\uc785\ub2c8\ub2e4.")),Object(i.b)("p",null,Object(i.b)("a",Object(o.a)({parentName:"p"},{href:"https://github.com/zalmoxisus/redux-devtools-extension"}),"Redux DevTools \ube0c\ub77c\uc6b0\uc800 \ud655\uc7a5\ud504\ub85c\uadf8\ub7a8"),"\uc774 \uc124\uce58\ub418\uc5b4 \uc788\ub294 \uacbd\uc6b0 \uac1c\ubc1c\uc790 \ubaa8\ub4dc\uc5d0\uc11c store\uc758 \ud604\uc7ac \uc0c1\ud0dc\ub97c \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),Object(i.b)("p",null,Object(i.b)("img",Object(o.a)({parentName:"p"},{src:"/assets/tutorials/intermediate/int-tut-01-redux-devtools.png",alt:"Redux DevTools Extension screenshot showing initial state"}))),Object(i.b)("h2",{id:"todo-slice\ub9cc\ub4e4\uae30"},"Todo Slice\ub9cc\ub4e4\uae30"),Object(i.b)("p",null,'todo app\uc744 \ub2e4\uc2dc \ub9cc\ub4dc\ub294 \uccab \ubc88\uc9f8 \ub2e8\uacc4\ub294 todo \ub85c\uc9c1\uc744 \uc0c8\ub85c\uc6b4 "slice"\ub85c \ubcc0\ud658\ud558\ub294 \uac83\uc785\ub2c8\ub2e4.'),Object(i.b)("h3",{id:"slices-\uc774\ud574\ud558\uae30"},"Slices \uc774\ud574\ud558\uae30"),Object(i.b)("p",null,"\ud604\uc7ac, todos\ucf54\ub4dc\ub294 \ub450 \ubd80\ubd84\uc73c\ub85c \ub098\ub269\ub2c8\ub2e4. \ub9ac\ub4c0\uc11c \ub85c\uc9c1\uc740 ",Object(i.b)("inlineCode",{parentName:"p"},"reducers/todo.js"),"\uc5d0 \uc788\uace0, action creator\ub4e4\uc740 ",Object(i.b)("inlineCode",{parentName:"p"},"actions.index.js"),"\uc5d0 \uc788\uc2b5\ub2c8\ub2e4. \ub354 \uaddc\ubaa8\uac00 \ud070 ",Object(i.b)("inlineCode",{parentName:"p"},"constants/todo.js"),"\uc640 \uac19\uc740 \ud30c\uc77c\uc5d0\uc11c \uc561\uc158type\uc744 \uad00\ub9ac\ud558\uace0 \ub450 \uacf3\uc5d0\uc11c \uacf5\ud1b5\uc801\uc73c\ub85c \uc0ac\uc6a9\ud569\ub2c8\ub2e4."),Object(i.b)("p",null,"RTK\uc758 ",Object(i.b)("a",Object(o.a)({parentName:"p"},{href:"/redux-toolkit/api/createReducer"}),Object(i.b)("inlineCode",{parentName:"a"},"createReducer")),"\ub97c \uc0ac\uc6a9\ud558\uba74 \ud574\ub2f9 \ub85c\uc9c1\uc744 \ud55c \uacf3\uc5d0\uc11c \uad00\ub9ac\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub0b4\ubd80\uc801\uc73c\ub85c ",Object(i.b)("inlineCode",{parentName:"p"},"createReducer"),"\uc640 ",Object(i.b)("inlineCode",{parentName:"p"},"createAction"),"\uc744 \uc0ac\uc6a9\ud558\ubbc0\ub85c ",Object(i.b)("strong",{parentName:"p"},"\ub300\ubd80\ubd84\uc758 \uc571\uc5d0\uc11c\ub294 \uc774 \ub450 \ud568\uc218\ub97c \uc9c1\uc811 \uc0ac\uc6a9\ud560 \ud544\uc694 \uc5c6\uc774 ",Object(i.b)("inlineCode",{parentName:"strong"},"createSlice"),"\ub9cc \uc0ac\uc6a9\ud558\uba74 \ub429\ub2c8\ub2e4.")),Object(i.b)("p",null,"'slice'\uac00 \ubb34\uc5c7\uc778\uc9c0 \uad81\uae08\ud560 \uac83\uc785\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc778 Redux\uc571\uc740 \uc0c1\ud0dc\ud2b8\ub9ac\uc758 \ucd5c\uc0c1\ub2e8\uc5d0 JS\uac1d\uccb4\ub97c \uac00\uc9c0\uace0 \uc788\uc73c\uba70, \uc774 \uac1d\uccb4\ub294  ",Object(i.b)("a",Object(o.a)({parentName:"p"},{href:"https://redux.js.org/api/combinereducers"}),Object(i.b)("inlineCode",{parentName:"a"},"combineReducers")," \ud568\uc218"),'\uc5d0\uc11c \uc5ec\ub7ec reducer\ub4e4\uc744 \ud558\ub098\ub85c \uacb0\ud569\ud55c "root reducer"\uc785\ub2c8\ub2e4.',Object(i.b)("strong",{parentName:"p"},'\uc774 \uac1d\uccb4\uc5d0\uc11c key/value\ub85c \uad6c\ubd84\ub418\ub294 object\ub97c "slice"\ub77c\uace0 \ud558\uba70, slice\uc758 \uc0c1\ud0dc\ub97c \uc5c5\ub370\uc774\ud2b8 \ud558\ub294 \ub9ac\ub4c0\uc11c\ub97c ',Object(i.b)("a",Object(o.a)({parentName:"strong"},{href:"https://redux.js.org/recipes/structuring-reducers/splitting-reducer-logic"}),'"slice reducer"'),"\ub77c\uace0 \ud569\ub2c8\ub2e4."),"\n\uc774 \uc571\uc5d0\uc11c \ub8e8\ud2b8 \ub9ac\ub4c0\uc11c\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4.:"),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-js"}),"import todos from './todos'\nimport visibilityFilter from './visibilityFilter'\n\nexport default combineReducers({\n  todos,\n  visibilityFilter\n})\n")),Object(i.b)("p",null,"\ub530\ub77c\uc11c, ",Object(i.b)("inlineCode",{parentName:"p"},"combineReducers"),"\ub85c \uacb0\ud569\ub41c \uc0c1\ud0dc\ub294 ",Object(i.b)("inlineCode",{parentName:"p"},'{todos: [], visibilityFilter: "SHOW_ALL"}'),"\uc640 \uac19\uc2b5\ub2c8\ub2e4. ",Object(i.b)("inlineCode",{parentName:"p"},"state.todos"),'\ub294 "slice"\uc774\uace0, ',Object(i.b)("inlineCode",{parentName:"p"},"todos"),'reducer\ub294 "slice reducer"\uc785\ub2c8\ub2e4.'),Object(i.b)("h3",{id:"\uae30\uc874\uc758-todos-reducer"},"\uae30\uc874\uc758 Todos Reducer"),Object(i.b)("p",null,"\uae30\uc874\uc758 todos reducer\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4:"),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-js"}),"const todos = (state = [], action) => {\n  switch (action.type) {\n    case 'ADD_TODO':\n      return [\n        ...state,\n        {\n          id: action.id,\n          text: action.text,\n          completed: false\n        }\n      ]\n    case 'TOGGLE_TODO':\n      return state.map(todo =>\n        todo.id === action.id ? { ...todo, completed: !todo.completed } : todo\n      )\n    default:\n      return state\n  }\n}\n\nexport default todos\n")),Object(i.b)("p",null,"\uc704 \uacbd\uc6b0 \uc138 \uac00\uc9c0 \ucf00\uc774\uc2a4\ub97c \ucc98\ub9ac\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4.:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"\uae30\uc874\uc758 ",Object(i.b)("inlineCode",{parentName:"li"},"state"),"\ubc30\uc5f4\uc744 \ubcf5\uc0ac\ud558\uace0 \ub9c8\uc9c0\ub9c9\uc5d0 \uc0c8\ub85c\uc6b4 \uc544\uc774\ud15c\uc744 \ucd94\uac00\ud569\ub2c8\ub2e4."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"state.map()"),"\uc744 \uc0ac\uc6a9\ud558\uc5ec \uae30\uc874 \ubc30\uc5f4\uc744 \ubcf5\uc0ac\ud558\uc5ec \ud560\uc77c \ud56d\ubaa9\uc744 toggle\ucc98\ub9ac\ud558\uace0 \uc5c5\ub370\uc774\ud2b8\ud574\uc57c \ud558\ub294 \uc544\uc774\ud15c\uc744 \ubcf5\uc0ac \ubc0f \uad50\uccb4\ud558\uace0, \uc5c5\ub370\uc774\ud2b8\uac00 \ud544\uc694\ud558\uc9c0 \uc54a\uc740 \ud56d\ubaa9\ub4e4\uc740 \uadf8\ub300\ub85c \ubc18\ud658\ud569\ub2c8\ub2e4."),Object(i.b)("li",{parentName:"ul"},"\uae30\uc874 \uc0c1\ud0dc\ub97c \ubc18\ud65a\uc5ec \ub2e4\ub978 \ubaa8\ub4e0 action\uc5d0 \uc751\ub2f5\ud569\ub2c8\ub2e4.")),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"[]"),"\uac12\uc73c\ub85c \uc0c1\ud0dc\ub97c \ucd08\uae30\ud654\ud558\uace0 reducer\ub97c default\ub85c export\ud569\ub2c8\ub2e4."),Object(i.b)("h3",{id:"slice-reducer\uc791\uc131"},"Slice Reducer\uc791\uc131"),Object(i.b)("p",null,"\uc704 \uc791\uc5c5\uc744 ",Object(i.b)("inlineCode",{parentName:"p"},"createSlice"),"\ub85c \ub354 \uac04\ub2e8\ud558\uac8c \uc218\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),Object(i.b)("p",null,"\uc81c\uc77c \uba3c\uc800, ",Object(i.b)("inlineCode",{parentName:"p"},"/features/todos/todosSlice.js"),"\uc5d0 \uc0c8 \ud30c\uc77c\uc744 \ucd94\uac00\ud569\ub2c8\ub2e4. \ud3f4\ub354\uc640 \ud30c\uc77c\uc744 \uad6c\uc131\ud558\ub294 \ubc29\uc2dd\uc740 \uc911\uc694\ud558\uc9c0 \uc54a\uc9c0\ub9cc, \ub300\ubd80\ubd84\uc758 \uc571\uc5d0\uc11c ",Object(i.b)("a",Object(o.a)({parentName:"p"},{href:"https://redux.js.org/faq/code-structure#what-should-my-file-structure-look-like-how-should-i-group-my-action-creators-and-reducers-in-my-project-where-should-my-selectors-go"}),'"feature folder" \uc811\uadfc\ubc29\uc2dd'),"\uc774 \ud6a8\uacfc\uc801\uc785\ub2c8\ub2e4. \ud30c\uc77c \uc774\ub984\uc740 \uac1c\ubc1c\uc790\uc758 \uc7ac\ub7c9\uc5d0 \ub2ec\ub824\uc788\uc9c0\ub9cc, ",Object(i.b)("inlineCode",{parentName:"p"},"someFeatureSlice.js"),"\uaddc\uce59\uc774 \ud569\ub9ac\uc801\uc785\ub2c8\ub2e4."),Object(i.b)("p",null,"\uc774 \ud30c\uc77c\uc5d0\uc11c\ub294, \uc544\ub798\uc640 \uac19\uc740 \ub85c\uc9c1\uc744 \ucd94\uac00\ud558\uaca0\uc2b5\ub2c8\ub2e4.:"),Object(i.b)("blockquote",null,Object(i.b)("ul",{parentName:"blockquote"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(o.a)({parentName:"li"},{href:"https://github.com/reduxjs/rtk-convert-todos-example/commit/48ce059dbb0fce1b961631821534fbcb766d3471"}),"Add an initial todos slice")))),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-js"}),"import { createSlice } from '@reduxjs/toolkit'\n\nconst todosSlice = createSlice({\n  name: 'todos',\n  initialState: [],\n  reducers: {\n    addTodo(state, action) {\n      const { id, text } = action.payload\n      state.push({ id, text, completed: false })\n    },\n    toggleTodo(state, action) {\n      const todo = state.find(todo => todo.id === action.payload)\n      if (todo) {\n        todo.completed = !todo.completed\n      }\n    }\n  }\n})\n\nexport const { addTodo, toggleTodo } = todosSlice.actions\n\nexport default todosSlice.reducer\n")),Object(i.b)("h4",{id:"createslice-\uc635\uc158"},Object(i.b)("inlineCode",{parentName:"h4"},"createSlice")," \uc635\uc158"),Object(i.b)("p",null,"\uc5b4\ub5a4 \uc635\uc158\ub4e4\uc774 \uc788\ub294\uc9c0 \uc0b4\ud3b4\ubd05\ub2c8\ub2e4.:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"createSlice"),"\ub294 \ub2e4\uc74c \uc635\uc158\uacfc \ud568\uaed8 option \uac1d\uccb4\ub97c \uc778\uc790\ub85c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. takes an options object as its argument, with these options:",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"name"),": \uc0dd\uc131 \ub41c action types\ub97c \uc0dd\uc131\ud558\uae30 \uc704\ud574 \uc0ac\uc6a9\ub418\ub294 prefix"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"initialState"),": reducer\uc758 \ucd08\uae30 \uc0c1\ud0dc"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"reducers"),": key\ub294 action type\ubb38\uc790\uc5f4\uc774 \ub418\uace0 \ud568\uc218\ub294 \ud574\ub2f9 \uc561\uc158\uc774 dispatch\ub420\ub54c \uc2e4\ud589\ub420 reducer\uc785\ub2c8\ub2e4.(",Object(i.b)("inlineCode",{parentName:"li"},"switch-case"),"\ubb38\uacfc \ube44\uc2b7\ud574\uc11c ",Object(i.b)("a",Object(o.a)({parentName:"li"},{href:"https://redux.js.org/recipes/structuring-reducers/splitting-reducer-logic"}),'"case reducers"'),"\ub77c\uace0\ub3c4 \ud569\ub2c8\ub2e4.)")))),Object(i.b)("p",null,"\ub530\ub77c\uc11c, ",Object(i.b)("inlineCode",{parentName:"p"},'"todos/addTodo"'),"\uc561\uc158\uc774 dispatch\ub420 \ub54c ",Object(i.b)("inlineCode",{parentName:"p"},"addTodo"),"reducer\uac00 \uc218\ud589\ub429\ub2c8\ub2e4."),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"default"),"\ud578\ub4e4\ub7ec\ub294 \uc5c6\uc2b5\ub2c8\ub2e4. ",Object(i.b)("inlineCode",{parentName:"p"},"createSlice"),"\uc5d0 \uc758\ud574 \uc0dd\uc131\ub41c \ub9ac\ub4c0\uc11c\ub294 \ud604\uc7ac dispatch\ub41c \uc561\uc158\uc774 \uc544\ub2cc \ub2e4\ub978 \uc561\uc158\ub4e4\uc5d0 \ub300\ud574 \uc790\ub3d9\uc73c\ub85c \ud604\uc7ac \uc0c1\ud0dc\ub97c \ubc18\ud658\ud558\ub3c4\ub85d \ucc98\ub9ac\ub418\uc5b4 \uc788\uae30 \ub54c\ubb38\uc5d0, \uc9c1\uc811 \ud578\ub4e4\ub9c1\ud574\uc8fc\uc9c0 \uc54a\uc544\ub3c4 \ub429\ub2c8\ub2e4."),Object(i.b)("h4",{id:"mutable-\uc5c5\ub370\uc774\ud2b8-\ub85c\uc9c1"},'"Mutable" \uc5c5\ub370\uc774\ud2b8 \ub85c\uc9c1'),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"addTodo"),"\ub9ac\ub4c0\uc11c\ub294 ",Object(i.b)("inlineCode",{parentName:"p"},"state.push()"),"\ub97c \ud638\ucd9c\ud569\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c \uc774\ub7f0 \ubc29\uc2dd\uc740 ",Object(i.b)("a",Object(o.a)({parentName:"p"},{href:"https://doesitmutate.xyz/#push"}),Object(i.b)("inlineCode",{parentName:"a"},"array.push()"),"\ud568\uc218\uac00 \uae30\uc874 \ubc30\uc5f4\uc744 \ubcc0\ud615\ud558\uae30 \ub54c\ubb38\uc5d0")," \uc88b\uc740 \ubc29\ubc95\uc774 \uc544\ub2c8\uace0, ",Object(i.b)("strong",{parentName:"p"},Object(i.b)("a",Object(o.a)({parentName:"strong"},{href:"https://redux.js.org/basics/reducers#handling-actions"}),"Redux\uc5d0\uc11c\ub294 reducers\uc5d0\uc11c \uc808\ub300 state\ub97c \uc9c1\uc811 \ubcc0\uacbd\ud558\uc9c0 \uc54a\uc544\uc57c \ud569\ub2c8\ub2e4!")),"."),Object(i.b)("p",null,"\uadf8\ub7ec\ub098, ",Object(i.b)("inlineCode",{parentName:"p"},"createSlice"),"\uc640 ",Object(i.b)("inlineCode",{parentName:"p"},"createReducer"),"\ub294 ",Object(i.b)("a",Object(o.a)({parentName:"p"},{href:"https://github.com/immerjs/immer"}),"Immer library\uc758 ",Object(i.b)("inlineCode",{parentName:"a"},"produce")),'\ub85c \ub798\ud551\ud569\ub2c8\ub2e4. \uc774\uac83\uc740 \uc774 \ud568\uc218\ub97c \uc0ac\uc6a9\ud558\ub294 \uac1c\ubc1c\uc790\ub294 \ub9ac\ub4c0\uc11c \ub0b4\ubd80\uc758 \uc0c1\ud0dc\ub97c "\ubcc0\ud615\ud558\ub294"\ucf54\ub4dc\ub97c \uc791\uc131\ud560\uc218 \uc788\uc73c\uba70, Immer\ub294 \uc0c1\ud0dc\ub97c \uc548\uc804\ud558\uac8c \ubd88\ubcc0\ud558\uac8c \ub2e4\ub8f0\uc218 \uc788\ub3c4\ub85d \ucc98\ub9ac\ud574\uc90d\ub2c8\ub2e4.'),Object(i.b)("p",null,"\ub9c8\ucc2c\uac00\uc9c0\ub85c, ",Object(i.b)("inlineCode",{parentName:"p"},"toggleTodo"),"\ub294 \ubc30\uc5f4\uc744 \uc21c\ud68c\ud558\uac70\ub098 \uc77c\uce58\ud558\ub294 todo\uac1d\uccb4\ub97c \ubcf5\uc0ac\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ub300\uc2e0, \uc77c\uce58\ud558\ub294 todo\uac1d\uccb4\ub97c \ucc3e\uc740 \ub2e4\uc74c ",Object(i.b)("inlineCode",{parentName:"p"},"todo.completed = !todo.completed"),"\ucf54\ub4dc\ub85c \ubcc0\uacbd\ud569\ub2c8\ub2e4. Immer\ub294 \uc774 \uac1d\uccb4\uac00 \uc5c5\ub370\uc774\ud2b8 \ub41c \uac83\uc744 \uac10\uc9c0\ud558\uace0 todo\uac1d\uccb4\uc640 \uc774\ub97c \ud3ec\ud568\ud558\ub294 \ubc30\uc5f4\uc744 \ubaa8\ub450 \ubcf5\uc0ac\ud569\ub2c8\ub2e4."),Object(i.b)("p",null,"\uc77c\ubc18\uc801\uc778 \ubd88\ubcc0\uc131 \uad00\ub9ac\ub294 \ucd94\uac00 \ubcf5\uc0ac\uac00 \ubaa8\ub450 \ubc1c\uc0dd\ud558\uc5ec \uc2e4\uc81c\ub85c \uc218\ud589\ud558\ub824\ub294 \uc791\uc5c5\uc744 \ubaa8\ud638\ud558\uac8c \ud558\ub294 \uacbd\ud5a5\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc758\ub3c4\uac00 \uc870\uae08\ub354 \uba85\ud655\ud788 \ub4dc\ub7ec\ub098\uc57c \ud569\ub2c8\ub2e4: \ubc30\uc5f4 \ub05d\uc5d0 \ud56d\ubaa9\uc744 \ucd94\uac00\ud558\uace0 todo\ud56d\ubaa9\uc758 \ud544\ub4dc\ub97c \uc218\uc815\ud558\ub294 \uac83."),Object(i.b)("h4",{id:"slice\ud568\uc218-\ub0b4\ubcf4\ub0b4\uae30"},"Slice\ud568\uc218 \ub0b4\ubcf4\ub0b4\uae30"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"createSlice"),"\ub294 \ub2e4\uc74c\uacfc \uac19\uc740 \uac1d\uccb4\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4.:"),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-js"}),'{\n  name: "todos",\n  reducer: (state, action) => newState,\n  actions: {\n    addTodo: (payload) => ({type: "todos/addTodo", payload}),\n    toggleTodo: (payload) => ({type: "todos/toggleTodo", payload})\n  },\n  caseReducers: {\n    addTodo: (state, action) => newState,\n    toggleTodo: (state, action) => newState,\n  }\n}\n')),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"\uac01 \ub9ac\ub4c0\uc11c\ub9c8\ub2e4 \uc801\uc808\ud55c action\uc0dd\uc131\uc790\uc640 action type\uc744 \uc790\ub3d9\uc73c\ub85c \uc0dd\uc131\ud558\ubbc0\ub85c \uc9c1\uc811 \uc791\uc131\ud558\uc9c0 \uc54a\uc544\ub3c4 \ub429\ub2c8\ub2e4!")),Object(i.b)("p",null,"We'll need to use the action creators and the reducer in other files, so at a minimum we would need to export the slice object. However, we can use a Redux community code convention called ",Object(i.b)("a",Object(o.a)({parentName:"p"},{href:"https://github.com/erikras/ducks-modular-redux"}),'the "ducks" pattern'),". Simply put, ",Object(i.b)("strong",{parentName:"p"},"it suggests that you should put all your action creators and reducers in one file, do named exports of the action creators, and a default export of the reducer function"),"."),Object(i.b)("p",null,"Thanks to ",Object(i.b)("inlineCode",{parentName:"p"},"createSlice"),', we already have our action creators and the reducer right here in one file. All we have to do is export them separately, and our todos slice file now matches the common "ducks" pattern.'),Object(i.b)("h4",{id:"working-with-action-payloads"},"Working with Action Payloads"),Object(i.b)("p",null,"Speaking of the action creators, let's go back and re-examine the reducer logic for a minute."),Object(i.b)("p",null,"By default, the action creators from the RTK ",Object(i.b)("inlineCode",{parentName:"p"},"createAction")," function only accept one argument. That argument, whatever it is, is put into the action object as a field called ",Object(i.b)("inlineCode",{parentName:"p"},"payload"),"."),Object(i.b)("p",null,"There's nothing special about the field ",Object(i.b)("inlineCode",{parentName:"p"},"action.payload"),' by itself. Redux doesn\'t know or care about that name. But, like "ducks", the name ',Object(i.b)("inlineCode",{parentName:"p"},"payload")," comes from another Redux community convention called ",Object(i.b)("a",Object(o.a)({parentName:"p"},{href:"https://github.com/redux-utilities/flux-standard-action"}),'"Flux Standard Actions"'),"."),Object(i.b)("p",null,"Actions usually need to include some extra data along with the ",Object(i.b)("inlineCode",{parentName:"p"},"type")," field. The original Redux code for ",Object(i.b)("inlineCode",{parentName:"p"},"addTodo")," has an action object that looks like ",Object(i.b)("inlineCode",{parentName:"p"},"{type, id, text}"),". ",Object(i.b)("strong",{parentName:"p"},"The FSA convention suggests that rather than having data fields with random names directly in the action object, you should always put your data inside a field named ",Object(i.b)("inlineCode",{parentName:"strong"},"payload")),"."),Object(i.b)("p",null,"It's up to the reducer to establish what it thinks ",Object(i.b)("inlineCode",{parentName:"p"},"payload")," should be for each action type, and whatever code dispatches the action needs to pass in values that match that expectation. If only one value is needed, you could potentially use that as the whole ",Object(i.b)("inlineCode",{parentName:"p"},"payload")," value directly. More commonly, you'd need to pass in multiple values, in which case ",Object(i.b)("inlineCode",{parentName:"p"},"payload")," should be an object containing those values."),Object(i.b)("p",null,"In our todos slice, ",Object(i.b)("inlineCode",{parentName:"p"},"addTodo")," needs two fields, ",Object(i.b)("inlineCode",{parentName:"p"},"id")," and ",Object(i.b)("inlineCode",{parentName:"p"},"text"),", so we put those into an object as ",Object(i.b)("inlineCode",{parentName:"p"},"payload"),". For ",Object(i.b)("inlineCode",{parentName:"p"},"toggleTodo"),", the only value we need is the ",Object(i.b)("inlineCode",{parentName:"p"},"id")," of the todo being changed. We could have made that the ",Object(i.b)("inlineCode",{parentName:"p"},"payload"),", but I prefer always having ",Object(i.b)("inlineCode",{parentName:"p"},"payload")," be an object, so I made it ",Object(i.b)("inlineCode",{parentName:"p"},"action.payload.id")," instead."),Object(i.b)("p",null,"(As a sneak peek: there ",Object(i.b)("em",{parentName:"p"},"is")," a way to customize how action object payloads are created. We'll look at that later in this tutorial, or you can look through ",Object(i.b)("a",Object(o.a)({parentName:"p"},{href:"/redux-toolkit/api/createAction"}),"the ",Object(i.b)("inlineCode",{parentName:"a"},"createAction")," API docs")," for an explanation.)"),Object(i.b)("h3",{id:"updating-the-todos-tests"},"Updating the Todos Tests"),Object(i.b)("p",null,"The original todos reducer has a tests file with it. We can port those over to work with our todos slice, and verify that they both work the same way."),Object(i.b)("p",null,"The first step is to copy ",Object(i.b)("inlineCode",{parentName:"p"},"reducers/todos.spec.js")," over to ",Object(i.b)("inlineCode",{parentName:"p"},"features/todos/todosSlice.spec.js"),", and change the import path to read the reducer from the slice file."),Object(i.b)("blockquote",null,Object(i.b)("ul",{parentName:"blockquote"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(o.a)({parentName:"li"},{href:"https://github.com/reduxjs/rtk-convert-todos-example/commit/b603312ddf55899e8a75522d407c40474948ae0b"}),"Copy tests to todos slice")))),Object(i.b)("p",null,"Once that is done, we need to update the tests to match how RTK works."),Object(i.b)("p",null,"The first issue is that the test file hardcodes action types like ",Object(i.b)("inlineCode",{parentName:"p"},"'ADD_TODO'"),". RTK's action types look like ",Object(i.b)("inlineCode",{parentName:"p"},"'todos/addTodo'"),". We can reference that by also importing the action creators from the todos slice, and replacing the original type constants in the test with ",Object(i.b)("inlineCode",{parentName:"p"},"addTodo.type"),"."),Object(i.b)("p",null,"The other problem is that the action objects in the tests look like ",Object(i.b)("inlineCode",{parentName:"p"},"{type, id, text}"),", whereas RTK always puts those extra values inside ",Object(i.b)("inlineCode",{parentName:"p"},"action.payload"),". So, we need to modify the test actions to match that."),Object(i.b)("p",null,"(We really ",Object(i.b)("em",{parentName:"p"},"could")," just replace all the inline action objects in the test with calls like ",Object(i.b)("inlineCode",{parentName:"p"},'addTodo({id : 0, text: "Buy milk"})'),", but this is a simpler set of changes to show for now.)"),Object(i.b)("blockquote",null,Object(i.b)("ul",{parentName:"blockquote"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(o.a)({parentName:"li"},{href:"https://github.com/reduxjs/rtk-convert-todos-example/commit/39dbbf37bd4c559db956c8291bbd0bf1135546bb"}),"Port the todos tests to work with the todos slice")))),Object(i.b)("p",null,"An example of the changes would be:"),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-diff"}),"// Change the imports to get the action creators\n-import todos from './todosSlice'\n+import todos, { addTodo, toggleTodo } from './todosSlice'\n\n// later, in a test:\n  it('should handle ADD_TODO', () => {\n    expect(\n      todos([], {\n-       type: 'ADD_TODO',\n-       text: 'Run the tests',\n-       id: 0\n+       type: addTodo.type,\n+       payload: {\n+         text: 'Run the tests',\n+         id: 0\n+       }\n      })\n    ).toEqual([\n")),Object(i.b)("p",null,"After those changes, all the tests in ",Object(i.b)("inlineCode",{parentName:"p"},"todosSlice.spec.js")," should pass, proving that our new RTK slice reducer works exactly the same as the original hand-written reducer!"),Object(i.b)("h3",{id:"implementing-todo-ids"},"Implementing Todo IDs"),Object(i.b)("p",null,"In the original code, each newly added todo gets an ID value from an incrementing number:"),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-js"}),"let nextTodoId = 0\nexport const addTodo = text => ({\n  type: 'ADD_TODO',\n  id: nextTodoId++,\n  text\n})\n")),Object(i.b)("p",null,"Right now, our todos slice doesn't do that, because the ",Object(i.b)("inlineCode",{parentName:"p"},"addTodo")," action creator is automatically generated for us."),Object(i.b)("p",null,"We ",Object(i.b)("em",{parentName:"p"},"could")," add that behavior for requiring that whatever code dispatches the add todo should have to pass in a new ID, like ",Object(i.b)("inlineCode",{parentName:"p"},'addTodo({id: 1, text: "Buy milk"})'),", but that would be annoying. Why should the caller have to track that value? Also, what if there are multiple parts of the app that would need to dispatch that action? It would be better to encapsulate that logic in the action creator."),Object(i.b)("p",null,"RTK allows you to customize how the ",Object(i.b)("inlineCode",{parentName:"p"},"payload")," field is created in your action objects. If you are using ",Object(i.b)("inlineCode",{parentName:"p"},"createAction"),' by itself, you can pass a "prepare callback" as the second argument. Here\'s what this would look like:'),Object(i.b)("blockquote",null,Object(i.b)("ul",{parentName:"blockquote"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(o.a)({parentName:"li"},{href:"https://github.com/reduxjs/rtk-convert-todos-example/commit/0c9e3b721c209d368d23a70cf8faca8f308ff8df"}),"Implement addTodo ID generation")))),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-js"}),"let nextTodoId = 0\n\nexport const addTodo = createAction('ADD_TODO', text => {\n  return {\n    payload: { id: nextTodoId++, text }\n  }\n})\n")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},'Note that the "prepare callback" ',Object(i.b)("em",{parentName:"strong"},"must")," return an object with a field called ",Object(i.b)("inlineCode",{parentName:"strong"},"payload")," inside!")," Otherwise, the action's payload will be undefined. It ",Object(i.b)("em",{parentName:"p"},"may")," also include a field called ",Object(i.b)("inlineCode",{parentName:"p"},"meta"),", which can be used to include extra additional metadata related to the action."),Object(i.b)("p",null,"If you're using ",Object(i.b)("inlineCode",{parentName:"p"},"createSlice"),", it automatically calls ",Object(i.b)("inlineCode",{parentName:"p"},"createAction")," for you. If you need to customize the payload there, you can do so by passing an object containing ",Object(i.b)("inlineCode",{parentName:"p"},"reducer")," and ",Object(i.b)("inlineCode",{parentName:"p"},"prepare")," functions to the ",Object(i.b)("inlineCode",{parentName:"p"},"reducers")," object, instead of just the reducer function by itself:"),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-js"}),"let nextTodoId = 0\n\nconst todosSlice = createSlice({\n  name: 'todos',\n  initialState: [],\n  reducers: {\n    addTodo: {\n      reducer(state, action) {\n        const { id, text } = action.payload\n        state.push({ id, text, completed: false })\n      },\n      prepare(text) {\n        return { payload: { text, id: nextTodoId++ } }\n      }\n    }\n  }\n}\n")),Object(i.b)("p",null,"We can add an additional test that confirms this works:"),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-js"}),"describe('addTodo', () => {\n  it('should generate incrementing todo IDs', () => {\n    const action1 = addTodo('a')\n    const action2 = addTodo('b')\n\n    expect(action1.payload).toEqual({ id: 0, text: 'a' })\n    expect(action2.payload).toEqual({ id: 1, text: 'b' })\n  })\n})\n")),Object(i.b)("h2",{id:"using-the-new-todos-slice"},"Using the New Todos Slice"),Object(i.b)("h3",{id:"updating-the-root-reducer"},"Updating the Root Reducer"),Object(i.b)("p",null,"We have a shiny new todos reducer function, but it isn't hooked up to anything yet."),Object(i.b)("p",null,"The first step is to go update our root reducer to use the reducer from the todos slice instead of the original reducer. We just need to change the import statement in ",Object(i.b)("inlineCode",{parentName:"p"},"reducers/index.js"),":"),Object(i.b)("blockquote",null,Object(i.b)("ul",{parentName:"blockquote"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(o.a)({parentName:"li"},{href:"https://github.com/reduxjs/rtk-convert-todos-example/commit/7b6e005377c856d7415e328387188260330ebae4"}),"Use the todos slice reducer")))),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-diff"}),"import { combineReducers } from 'redux'\n-import todos from './todos'\n+import todosReducer from 'features/todos/todosSlice'\nimport visibilityFilter from './visibilityFilter'\n\nexport default combineReducers({\n- todos,\n+ todos: todosReducer,\n  visibilityFilter\n})\n")),Object(i.b)("p",null,"While we could have kept the imported function named as ",Object(i.b)("inlineCode",{parentName:"p"},"todos")," so that we can use the object literal shorthand with ",Object(i.b)("inlineCode",{parentName:"p"},"combineReducers"),", it's a little more clear if we name the imported function ",Object(i.b)("inlineCode",{parentName:"p"},"todosReducer")," and define the field as ",Object(i.b)("inlineCode",{parentName:"p"},"todos: todosReducer"),"."),Object(i.b)("h3",{id:"updating-the-add-todo-component"},"Updating the Add Todo Component"),Object(i.b)("p",null,"If we reload the app, we should still see that ",Object(i.b)("inlineCode",{parentName:"p"},"state.todos"),' is an empty array. But, if we click on "Add Todo", nothing will happen. We\'re still dispatching actions whose type is ',Object(i.b)("inlineCode",{parentName:"p"},"'ADD_TODO'"),", while our todos slice is looking for an action type of ",Object(i.b)("inlineCode",{parentName:"p"},"'todos/addTodo'"),". We need to import the correct action creator and use it in the ",Object(i.b)("inlineCode",{parentName:"p"},"AddTodo.js")," file."),Object(i.b)("p",null,"While we're at it, there are a couple of other problems with how the ",Object(i.b)("inlineCode",{parentName:"p"},"AddTodo"),' component is written. First, it\'s currently using a React "callback ref" to read the current text value from the input when you click "Add Todo". This works, but the standard "React way" to handle form fields is with the "controlled inputs" pattern, where the current field value is stored in the component\'s state.'),Object(i.b)("p",null,"Second, the connected component is getting ",Object(i.b)("inlineCode",{parentName:"p"},"dispatch")," as a prop. Again, this works, but the normal way to use connect is to ",Object(i.b)("a",Object(o.a)({parentName:"p"},{href:"https://react-redux.js.org/using-react-redux/connect-mapdispatch"}),"pass action creator functions to ",Object(i.b)("inlineCode",{parentName:"a"},"connect")),", and then dispatch the actions by calling the functions that were passed in as props."),Object(i.b)("p",null,"Since we've got this component open, we can fix those issues too. Here's what the final version looks like:"),Object(i.b)("blockquote",null,Object(i.b)("ul",{parentName:"blockquote"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(o.a)({parentName:"li"},{href:"https://github.com/reduxjs/rtk-convert-todos-example/commit/d7082409ebaa113b74f6989bf70ee09600f37d0b"}),"Update AddTodo to dispatch the new action type")))),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-js"}),"import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { addTodo } from 'features/todos/todosSlice'\n\nconst mapDispatch = { addTodo }\n\nconst AddTodo = ({ addTodo }) => {\n  const [todoText, setTodoText] = useState('')\n\n  const onChange = e => setTodoText(e.target.value)\n\n  return (\n    <div>\n      <form\n        onSubmit={e => {\n          e.preventDefault()\n          if (!todoText.trim()) {\n            return\n          }\n          addTodo(todoText)\n          setTodoText('')\n        }}\n      >\n        <input value={todoText} onChange={onChange} />\n        <button type=\"submit\">Add Todo</button>\n      </form>\n    </div>\n  )\n}\n\nexport default connect(null, mapDispatch)(AddTodo)\n")),Object(i.b)("p",null,"We start by importing the correct ",Object(i.b)("inlineCode",{parentName:"p"},"addTodo")," action creator from our todos slice."),Object(i.b)("p",null,"The input is now being handled as a standard \"controlled input\", with the text value being stored in the component's state. We can use that state text value in the form's submit handler."),Object(i.b)("p",null,"Finally, we use the ",Object(i.b)("a",Object(o.a)({parentName:"p"},{href:"https://react-redux.js.org/using-react-redux/connect-mapdispatch#defining-mapdispatchtoprops-as-an-object"}),'"object shorthand" form of ',Object(i.b)("inlineCode",{parentName:"a"},"mapDispatch"))," to simplify passing the action creators to ",Object(i.b)("inlineCode",{parentName:"p"},"connect"),'. The "bound" version of ',Object(i.b)("inlineCode",{parentName:"p"},"addTodo")," is passed in to the component as a prop, and it will dispatch the action as soon as we call it."),Object(i.b)("h3",{id:"updating-the-todo-list"},"Updating the Todo List"),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"TodoList")," and ",Object(i.b)("inlineCode",{parentName:"p"},"VisibleTodoList")," components have similar issues: they're using the older ",Object(i.b)("inlineCode",{parentName:"p"},"toggleTodo")," action creator, and the ",Object(i.b)("inlineCode",{parentName:"p"},"connect"),' setup isn\'t using the "object shorthand" form of ',Object(i.b)("inlineCode",{parentName:"p"},"mapDispatch"),". We can fix both of those."),Object(i.b)("blockquote",null,Object(i.b)("ul",{parentName:"blockquote"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(o.a)({parentName:"li"},{href:"https://github.com/reduxjs/rtk-convert-todos-example/commit/b47b2124d6a28386b7461bccb9216682a81edb3e"}),"Update TodoList to dispatch the new toggle action type")))),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-diff"}),"// VisibleTodoList.js\n-import { toggleTodo } from '../actions'\n+import { toggleTodo } from 'features/todos/todosSlice'\n\n-const mapDispatchToProps = dispatch => ({\n- toggleTodo: id => dispatch(toggleTodo(id))\n-})\n+const mapDispatchToProps = { toggleTodo }\n")),Object(i.b)("p",null,"And with that, we should now be able to add and toggle todos again, but using our new todos slice!"),Object(i.b)("h2",{id:"creating-and-using-the-filters-slice"},"Creating and Using the Filters Slice"),Object(i.b)("p",null,"Now that we've created the todos slice and hooked it up to the UI, we can do the same for the filter selection logic as well."),Object(i.b)("h3",{id:"writing-the-filters-slice"},"Writing the Filters Slice"),Object(i.b)("p",null,"The filter logic is really simple. We have one action, which sets the current filter value by returning what's in the action. Here's the whole slice:"),Object(i.b)("blockquote",null,Object(i.b)("ul",{parentName:"blockquote"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(o.a)({parentName:"li"},{href:"https://github.com/reduxjs/rtk-convert-todos-example/commit/b77f4155e3b45bce24d0d0ef6e2f7b0c3bd11ee1"}),"Add the filters slice")))),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-js"}),"import { createSlice } from '@reduxjs/toolkit'\n\nexport const VisibilityFilters = {\n  SHOW_ALL: 'SHOW_ALL',\n  SHOW_COMPLETED: 'SHOW_COMPLETED',\n  SHOW_ACTIVE: 'SHOW_ACTIVE'\n}\n\nconst filtersSlice = createSlice({\n  name: 'visibilityFilters',\n  initialState: VisibilityFilters.SHOW_ALL,\n  reducers: {\n    setVisibilityFilter(state, action) {\n      return action.payload\n    }\n  }\n})\n\nexport const { setVisibilityFilter } = filtersSlice.actions\n\nexport default filtersSlice.reducer\n")),Object(i.b)("p",null,"We've copied over the ",Object(i.b)("inlineCode",{parentName:"p"},"VisibilityFilters")," enum object that was originally in ",Object(i.b)("inlineCode",{parentName:"p"},"actions/index.js"),". The slice code just creates the one reducer, we export the action creator and reducer, and we're done."),Object(i.b)("h3",{id:"using-the-filters-slice"},"Using the Filters Slice"),Object(i.b)("p",null,"As with the todos reducer, we need to import and add the visibility reducer to our root reducer:"),Object(i.b)("blockquote",null,Object(i.b)("ul",{parentName:"blockquote"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(o.a)({parentName:"li"},{href:"https://github.com/reduxjs/rtk-convert-todos-example/commit/623c47b1987914a1d90142824892686ec76c20a1"}),"Use the filters slice reducer")))),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-diff"}),"import todosReducer from 'features/todos/todosSlice'\n-import visibilityFilter from './visibilityFilter'\n+import visibilityFilterReducer from 'features/filters/filtersSlice'\n\nexport default combineReducers({\n  todos: todosReducer,\n- visibilityFilter\n+ visibilityFilter: visibilityFilterReducer\n})\n")),Object(i.b)("p",null,"From there, we need to dispatch the ",Object(i.b)("inlineCode",{parentName:"p"},"setVisibilityFilter")," action when the user clicks on the buttons. First, for consistency, we should update ",Object(i.b)("inlineCode",{parentName:"p"},"VisibleTodoList.js")," and ",Object(i.b)("inlineCode",{parentName:"p"},"Footer.js")," to use the ",Object(i.b)("inlineCode",{parentName:"p"},"VisibilityFilter")," enum that's exported from the filter slice file, instead of the one from the actions file."),Object(i.b)("p",null,"From there, the link components will take just a bit more work. ",Object(i.b)("inlineCode",{parentName:"p"},"FilterLink")," is currently creating new functions that capture the current value of ",Object(i.b)("inlineCode",{parentName:"p"},"ownProps.filter"),", so that ",Object(i.b)("inlineCode",{parentName:"p"},"Link")," is just getting a function called ",Object(i.b)("inlineCode",{parentName:"p"},"onClick"),". While that's a valid way to do it, for consistency we'd like to continue using the object shorthand form of ",Object(i.b)("inlineCode",{parentName:"p"},"mapDispatch"),", and modify ",Object(i.b)("inlineCode",{parentName:"p"},"Link")," to pass the filter value in when it dispatches the action."),Object(i.b)("blockquote",null,Object(i.b)("ul",{parentName:"blockquote"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(o.a)({parentName:"li"},{href:"https://github.com/reduxjs/rtk-convert-todos-example/commit/776b39088384513ff68af41039fe5fc5188fe8fb"}),"Use the new filters action in the UI")))),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-diff"}),"// FilterLink.js\n-import { setVisibilityFilter } from '../actions'\n+import { setVisibilityFilter } from 'features/filters/filtersSlice'\n\n-const mapDispatchToProps = (dispatch, ownProps) => ({\n- onClick: () => dispatch(setVisibilityFilter(ownProps.filter))\n-})\n+const mapDispatchToProps = { setVisibilityFilter }\n\n\n// Link.js\nimport React from 'react'\nimport PropTypes from 'prop-types'\n\n-const Link = ({ active, children, onClick }) => (\n+const Link = ({ active, children, setVisibilityFilter, filter }) => (\n  <button\n-    onClick={onClick}\n+    onClick={() => setVisibilityFilter(filter)}\n    disabled={active}\n    style={{\n      marginLeft: '4px'\n    }}\n  >\n    {children}\n  </button>\n)\n\nLink.propTypes = {\n  active: PropTypes.bool.isRequired,\n  children: PropTypes.node.isRequired,\n- onClick: PropTypes.func.isRequired\n+ setVisibilityFilter: PropTypes.func.isRequired,\n+ filter: PropTypes.string.isRequired\n}\n\nexport default Link\n")),Object(i.b)("p",null,"Again, note that most of this doesn't have to do with RTK specifically, but it's good to try to consistently use some of the recommended best practices in this example code."),Object(i.b)("p",null,"With that done, we should be able to add a couple todos, toggle the state of some of them, and then switch the filters to change the display list."),Object(i.b)("h2",{id:"optimizing-todo-filtering"},"Optimizing Todo Filtering"),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"VisibleTodoList")," component currently uses a function called ",Object(i.b)("inlineCode",{parentName:"p"},"getVisibleTodos"),' to do the work of filtering the todos array for display. This is a "selector function", as described in the Redux docs page on ',Object(i.b)("a",Object(o.a)({parentName:"p"},{href:"https://redux.js.org/recipes/computing-derived-data"}),"Computing Derived Data"),". It encapsulates the process of reading values from the Redux store and extracting part or all of those values for use."),Object(i.b)("p",null,"However, the code as currently written has a problem. If the filter is set to ",Object(i.b)("inlineCode",{parentName:"p"},"SHOW_COMPLETED")," or ",Object(i.b)("inlineCode",{parentName:"p"},"SHOW_ACTIVE"),", it will ",Object(i.b)("em",{parentName:"p"},"always")," return a new array ",Object(i.b)("em",{parentName:"p"},"every")," time it is called. Since it's being used in a ",Object(i.b)("inlineCode",{parentName:"p"},"mapState")," function, that means it will return a new array reference when ",Object(i.b)("em",{parentName:"p"},"any")," action is dispatched."),Object(i.b)("p",null,"In this tiny todo example app, that isn't a problem. The only actions we have involve altering the todos list or filtering it, anyway. But, in a real app, many other actions will be dispatched. Imagine if this todo app had a counter in it, and ",Object(i.b)("inlineCode",{parentName:"p"},'"INCREMENT"')," was dispatched while the list is filtered. We would create a new list, and the ",Object(i.b)("inlineCode",{parentName:"p"},"TodoList")," would have to re-render even though nothing changed."),Object(i.b)("p",null,"While this isn't a real performance issue now, it's worth showing how we can improve the behavior."),Object(i.b)("p",null,"Redux apps commonly use a library called ",Object(i.b)("a",Object(o.a)({parentName:"p"},{href:"https://github.com/reduxjs/reselect"}),"Reselect"),", which has a ",Object(i.b)("inlineCode",{parentName:"p"},"createSelector"),' function that lets you define "memoized" selector functions. These memoized selectors only recalculate values if the inputs have actually changed.'),Object(i.b)("p",null,"RTK re-exports the ",Object(i.b)("inlineCode",{parentName:"p"},"createSelector")," function from Reselect, so we can import that and use it in ",Object(i.b)("inlineCode",{parentName:"p"},"VisibleTodoList"),"."),Object(i.b)("blockquote",null,Object(i.b)("ul",{parentName:"blockquote"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(o.a)({parentName:"li"},{href:"https://github.com/reduxjs/rtk-convert-todos-example/commit/4fc943b7111381974f20f74750a114b5e52ce1b2"}),"Convert visible todos to a memoized selector")))),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-diff"}),"import { connect } from 'react-redux'\n+import { createSelector } from '@reduxjs/toolkit'\nimport { toggleTodo } from 'features/todos/todosSlice'\nimport TodoList from '../components/TodoList'\nimport { VisibilityFilters } from 'features/filters/filtersSlice'\n\n-const getVisibleTodos = (todos, filter) => {\n-  switch (filter) {\n-    case VisibilityFilters.SHOW_ALL:\n-      return todos\n-    case VisibilityFilters.SHOW_COMPLETED:\n-      return todos.filter(t => t.completed)\n-    case VisibilityFilters.SHOW_ACTIVE:\n-      return todos.filter(t => !t.completed)\n-    default:\n-      throw new Error('Unknown filter: ' + filter)\n-  }\n-}\n\n+const selectTodos = state => state.todos\n+const selectFilter = state => state.visibilityFilter\n\n+const selectVisibleTodos = createSelector(\n+  [selectTodos, selectFilter],\n+  (todos, filter) => {\n+    switch (filter) {\n+      case VisibilityFilters.SHOW_ALL:\n+        return todos\n+      case VisibilityFilters.SHOW_COMPLETED:\n+        return todos.filter(t => t.completed)\n+      case VisibilityFilters.SHOW_ACTIVE:\n+        return todos.filter(t => !t.completed)\n+      default:\n+        throw new Error('Unknown filter: ' + filter)\n+    }\n+  }\n+)\n\nconst mapStateToProps = state => ({\n- todos: getVisibleTodos(state.todos, state.visibilityFilter)\n+ todos: selectVisibleTodos(state)\n})\n\nconst mapDispatchToProps = { toggleTodo }\n")),Object(i.b)("p",null,"First, we import ",Object(i.b)("inlineCode",{parentName:"p"},"createSelector")," from RTK, and define a couple one-line selector functions that grab the ",Object(i.b)("inlineCode",{parentName:"p"},"todos")," and ",Object(i.b)("inlineCode",{parentName:"p"},"visibilityFilter")," fields from their ",Object(i.b)("inlineCode",{parentName:"p"},"state")," argument."),Object(i.b)("p",null,"We then call ",Object(i.b)("inlineCode",{parentName:"p"},"createSelector"),', and pass those two small selector functions in the "input selectors" array. ',Object(i.b)("inlineCode",{parentName:"p"},"createSelector"),' will call those, take the return values, and pass those to the "output selector" we\'ve defined, which can then do the filtering and return the final result.'),Object(i.b)("p",null,"There's a couple small changes in how this is defined and used. While you can give selector functions any name you want, ",Object(i.b)("inlineCode",{parentName:"p"},"selectX")," is a more common naming convention than ",Object(i.b)("inlineCode",{parentName:"p"},"getX"),". Also, because the input selectors take care of reading the necessary values, we can just call ",Object(i.b)("inlineCode",{parentName:"p"},"selectVisibleTodos(state)"),", with ",Object(i.b)("inlineCode",{parentName:"p"},"state")," as the only argument."),Object(i.b)("p",null,"If we re-run the app, the filtering logic ",Object(i.b)("em",{parentName:"p"},"should")," work exactly the same as before from what you can see in the UI."),Object(i.b)("h2",{id:"cleanup"},"Cleanup"),Object(i.b)("p",null,"That's the end of the actual conversion work. We now have a bunch of action and reducer files that are no longer being used, so we should delete those to clean up the project."),Object(i.b)("p",null,"We can safely remove ",Object(i.b)("inlineCode",{parentName:"p"},"actions/index.js"),", ",Object(i.b)("inlineCode",{parentName:"p"},"reducers/todos.js"),", ",Object(i.b)("inlineCode",{parentName:"p"},"reducers/visibilityFilter.js"),", and the associated test files."),Object(i.b)("p",null,'We can also try completely switching from the "folder-by-type" structure to a "feature folder" structure, by moving all of the component files into the matching feature folders.'),Object(i.b)("blockquote",null,Object(i.b)("ul",{parentName:"blockquote"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(o.a)({parentName:"li"},{href:"https://github.com/reduxjs/rtk-convert-todos-example/commit/fbc0b965949e082748b8613b734612226ffe9e94"}),"Remove unused action and reducer files")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(o.a)({parentName:"li"},{href:"https://github.com/reduxjs/rtk-convert-todos-example/commit/138cc162b1cc9c64ab67fae0a1171d07940414e6"}),"Consolidate components into feature folders")))),Object(i.b)("p",null,"If we do that, the final source code structure looks like this:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"/src"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"/components"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"App.js")))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"/features"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"/filters"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"FilterLink.js")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"filtersSlice.js")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"Footer.js")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"Link.js")))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"/todos"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"AddTodo.js")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"Todo.js")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"TodoList.js")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"todosSlice.js")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"todosSlice.spec.js")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"VisibleTodoList.js")))))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"/reducers"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"index.js")))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"index.js"))))),Object(i.b)("p",null,'Everyone has different preferences on what makes a "maintainable" folder structure, but overall that result looks pretty consistent and easy to follow.'),Object(i.b)("p",null,"Now, let's see the final version of the code in action!"),Object(i.b)("iframe",{src:"https://codesandbox.io/embed/rtk-convert-todos-example-uqqy3?fontsize=14&hidenavigation=1&module=%2Fsrc%2Ffeatures%2Ftodos%2FtodosSlice.js&theme=dark&view=editor",style:{width:"100%",height:"500px",border:0,borderRadius:"4px",overflow:"hidden"},title:"rtk-convert-todos-example",allow:"geolocation; microphone; camera; midi; vr; accelerometer; gyroscope; payment; ambient-light-sensor; encrypted-media; usb",sandbox:"allow-modals allow-forms allow-popups allow-scripts allow-same-origin"}),Object(i.b)("h2",{id:"summary"},"Summary"),Object(i.b)("p",null,"In this tutorial, you saw:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},'How to use RTK in a typical React application, including adding the package, writing "slice" files, and dispatching actions from React components'),Object(i.b)("li",{parentName:"ul"},'How to use "mutable" reducers, prepare action payloads, and write selector functions'),Object(i.b)("li",{parentName:"ul"},'Some techniques for simplifying React-Redux code, like using the "object shorthand" form of ',Object(i.b)("inlineCode",{parentName:"li"},"mapDispatch")),Object(i.b)("li",{parentName:"ul"},'Examples of using a "feature folder" structure for organizing your code.')),Object(i.b)("p",null,"Hopefully that has helped illustrate how to actually use these methods in practice."),Object(i.b)("p",null,"Coming soon: an Advanced Tutorial, where we'll look at how to use RTK in an app that does async data fetching and uses TypeScript."))}d.isMDXComponent=!0},118:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return m}));var o=n(0),a=n.n(o);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=a.a.createContext({}),d=function(e){var t=a.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c({},t,{},e)),n},b=function(e){var t=d(e.components);return a.a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},u=Object(o.forwardRef)((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,r=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),b=d(n),u=o,m=b["".concat(r,".").concat(u)]||b[u]||p[u]||i;return n?a.a.createElement(m,c({ref:t},s,{components:n})):a.a.createElement(m,c({ref:t},s))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,r=new Array(i);r[0]=u;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,r[1]=c;for(var s=2;s<i;s++)r[s]=n[s];return a.a.createElement.apply(null,r)}return a.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},119:function(e,t,n){"use strict";e.exports=n(120)},120:function(e,t,n){"use strict";var o=n(121),a="function"==typeof Symbol&&Symbol.for,i=a?Symbol.for("react.element"):60103,r=a?Symbol.for("react.portal"):60106,c=a?Symbol.for("react.fragment"):60107,l=a?Symbol.for("react.strict_mode"):60108,s=a?Symbol.for("react.profiler"):60114,d=a?Symbol.for("react.provider"):60109,b=a?Symbol.for("react.context"):60110,p=a?Symbol.for("react.concurrent_mode"):60111,u=a?Symbol.for("react.forward_ref"):60112,m=a?Symbol.for("react.suspense"):60113,h=a?Symbol.for("react.memo"):60115,j=a?Symbol.for("react.lazy"):60116,f="function"==typeof Symbol&&Symbol.iterator;function O(e,t,n,o,a,i,r,c){if(!e){if(e=void 0,void 0===t)e=Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var l=[n,o,a,i,r,c],s=0;(e=Error(t.replace(/%s/g,(function(){return l[s++]})))).name="Invariant Violation"}throw e.framesToPop=1,e}}function g(e){for(var t=arguments.length-1,n="https://reactjs.org/docs/error-decoder.html?invariant="+e,o=0;o<t;o++)n+="&args[]="+encodeURIComponent(arguments[o+1]);O(!1,"Minified React error #"+e+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",n)}var y={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},N={};function w(e,t,n){this.props=e,this.context=t,this.refs=N,this.updater=n||y}function x(){}function v(e,t,n){this.props=e,this.context=t,this.refs=N,this.updater=n||y}w.prototype.isReactComponent={},w.prototype.setState=function(e,t){"object"!=typeof e&&"function"!=typeof e&&null!=e&&g("85"),this.updater.enqueueSetState(this,e,t,"setState")},w.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},x.prototype=w.prototype;var C=v.prototype=new x;C.constructor=v,o(C,w.prototype),C.isPureReactComponent=!0;var T={current:null},k={current:null},S=Object.prototype.hasOwnProperty,R={key:!0,ref:!0,__self:!0,__source:!0};function A(e,t,n){var o=void 0,a={},r=null,c=null;if(null!=t)for(o in void 0!==t.ref&&(c=t.ref),void 0!==t.key&&(r=""+t.key),t)S.call(t,o)&&!R.hasOwnProperty(o)&&(a[o]=t[o]);var l=arguments.length-2;if(1===l)a.children=n;else if(1<l){for(var s=Array(l),d=0;d<l;d++)s[d]=arguments[d+2];a.children=s}if(e&&e.defaultProps)for(o in l=e.defaultProps)void 0===a[o]&&(a[o]=l[o]);return{$$typeof:i,type:e,key:r,ref:c,props:a,_owner:k.current}}function F(e){return"object"==typeof e&&null!==e&&e.$$typeof===i}var P=/\/+/g,D=[];function _(e,t,n,o){if(D.length){var a=D.pop();return a.result=e,a.keyPrefix=t,a.func=n,a.context=o,a.count=0,a}return{result:e,keyPrefix:t,func:n,context:o,count:0}}function I(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>D.length&&D.push(e)}function E(e,t,n){return null==e?0:function e(t,n,o,a){var c=typeof t;"undefined"!==c&&"boolean"!==c||(t=null);var l=!1;if(null===t)l=!0;else switch(c){case"string":case"number":l=!0;break;case"object":switch(t.$$typeof){case i:case r:l=!0}}if(l)return o(a,t,""===n?"."+q(t,0):n),1;if(l=0,n=""===n?".":n+":",Array.isArray(t))for(var s=0;s<t.length;s++){var d=n+q(c=t[s],s);l+=e(c,d,o,a)}else if(null===t||"object"!=typeof t?d=null:d="function"==typeof(d=f&&t[f]||t["@@iterator"])?d:null,"function"==typeof d)for(t=d.call(t),s=0;!(c=t.next()).done;)l+=e(c=c.value,d=n+q(c,s++),o,a);else"object"===c&&g("31","[object Object]"===(o=""+t)?"object with keys {"+Object.keys(t).join(", ")+"}":o,"");return l}(e,"",t,n)}function q(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,(function(e){return t[e]}))}(e.key):t.toString(36)}function L(e,t){e.func.call(e.context,t,e.count++)}function W(e,t,n){var o=e.result,a=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?V(e,o,n,(function(e){return e})):null!=e&&(F(e)&&(e=function(e,t){return{$$typeof:i,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(e,a+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(P,"$&/")+"/")+n)),o.push(e))}function V(e,t,n,o,a){var i="";null!=n&&(i=(""+n).replace(P,"$&/")+"/"),E(e,W,t=_(t,i,o,a)),I(t)}function U(){var e=T.current;return null===e&&g("321"),e}var H={Children:{map:function(e,t,n){if(null==e)return e;var o=[];return V(e,o,null,t,n),o},forEach:function(e,t,n){if(null==e)return e;E(e,L,t=_(null,null,t,n)),I(t)},count:function(e){return E(e,(function(){return null}),null)},toArray:function(e){var t=[];return V(e,t,null,(function(e){return e})),t},only:function(e){return F(e)||g("143"),e}},createRef:function(){return{current:null}},Component:w,PureComponent:v,createContext:function(e,t){return void 0===t&&(t=null),(e={$$typeof:b,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:d,_context:e},e.Consumer=e},forwardRef:function(e){return{$$typeof:u,render:e}},lazy:function(e){return{$$typeof:j,_ctor:e,_status:-1,_result:null}},memo:function(e,t){return{$$typeof:h,type:e,compare:void 0===t?null:t}},useCallback:function(e,t){return U().useCallback(e,t)},useContext:function(e,t){return U().useContext(e,t)},useEffect:function(e,t){return U().useEffect(e,t)},useImperativeHandle:function(e,t,n){return U().useImperativeHandle(e,t,n)},useDebugValue:function(){},useLayoutEffect:function(e,t){return U().useLayoutEffect(e,t)},useMemo:function(e,t){return U().useMemo(e,t)},useReducer:function(e,t,n){return U().useReducer(e,t,n)},useRef:function(e){return U().useRef(e)},useState:function(e){return U().useState(e)},Fragment:c,StrictMode:l,Suspense:m,createElement:A,cloneElement:function(e,t,n){null==e&&g("267",e);var a=void 0,r=o({},e.props),c=e.key,l=e.ref,s=e._owner;if(null!=t){void 0!==t.ref&&(l=t.ref,s=k.current),void 0!==t.key&&(c=""+t.key);var d=void 0;for(a in e.type&&e.type.defaultProps&&(d=e.type.defaultProps),t)S.call(t,a)&&!R.hasOwnProperty(a)&&(r[a]=void 0===t[a]&&void 0!==d?d[a]:t[a])}if(1===(a=arguments.length-2))r.children=n;else if(1<a){d=Array(a);for(var b=0;b<a;b++)d[b]=arguments[b+2];r.children=d}return{$$typeof:i,type:e.type,key:c,ref:l,props:r,_owner:s}},createFactory:function(e){var t=A.bind(null,e);return t.type=e,t},isValidElement:F,version:"16.8.6",unstable_ConcurrentMode:p,unstable_Profiler:s,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentDispatcher:T,ReactCurrentOwner:k,assign:o}},M={default:H},$=M&&H||M;e.exports=$.default||$},121:function(e,t,n){"use strict";var o=Object.getOwnPropertySymbols,a=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable;function r(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var o={};return"abcdefghijklmnopqrst".split("").forEach((function(e){o[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},o)).join("")}catch(a){return!1}}()?Object.assign:function(e,t){for(var n,c,l=r(e),s=1;s<arguments.length;s++){for(var d in n=Object(arguments[s]))a.call(n,d)&&(l[d]=n[d]);if(o){c=o(n);for(var b=0;b<c.length;b++)i.call(n,c[b])&&(l[c[b]]=n[c[b]])}}return l}}}]);