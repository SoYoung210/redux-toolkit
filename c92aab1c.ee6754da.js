/*! For license information please see c92aab1c.ee6754da.js.LICENSE.txt */
(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{113:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return i})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return l}));var s=n(1),a=n(6),r=(n(119),n(118)),o={id:"advanced-tutorial",title:"Advanced Tutorial",sidebar_label:"Advanced Tutorial",hide_title:!0},i={id:"tutorials/advanced-tutorial",title:"Advanced Tutorial",description:"# \uc2ec\ud654 \ud29c\ud1a0\ub9ac\uc5bc : Redux Toolkit in Practive",source:"@site/../docs/tutorials/advanced-tutorial.md",permalink:"/redux-toolkit/tutorials/advanced-tutorial",sidebar_label:"Advanced Tutorial",sidebar:"docs",previous:{title:"\uc911\uae09 \ud29c\ud1a0\ub9ac\uc5bc",permalink:"/redux-toolkit/tutorials/intermediate-tutorial"},next:{title:"Usage Guide",permalink:"/redux-toolkit/usage/usage-guide"}},c=[{value:"\uc2dc\uc791 \uc608\uc81c \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uac80\ud1a0",id:"\uc2dc\uc791-\uc608\uc81c-\uc560\ud50c\ub9ac\ucf00\uc774\uc158-\uac80\ud1a0",children:[{value:"React Codebase \uc18c\uc2a4 \uac1c\uc694",id:"react-codebase-\uc18c\uc2a4-\uac1c\uc694",children:[]}]},{value:"Redux Store \uc124\uc815",id:"redux-store-\uc124\uc815",children:[]},{value:"\uba54\uc778 \uc571 \ub514\uc2a4\ud50c\ub808\uc774 \ubcc0\ud658",id:"\uba54\uc778-\uc571-\ub514\uc2a4\ud50c\ub808\uc774-\ubcc0\ud658",children:[{value:"\uae30\uc874 \uc571 \uc0c1\ud0dc \ud3c9\uac00",id:"\uae30\uc874-\uc571-\uc0c1\ud0dc-\ud3c9\uac00",children:[]},{value:"\ucd08\uae30 \uc0c1\ud0dc \uc2ac\ub77c\uc774\uc2a4 \uc0dd\uc131",id:"\ucd08\uae30-\uc0c1\ud0dc-\uc2ac\ub77c\uc774\uc2a4-\uc0dd\uc131",children:[]},{value:"\uc774\uc288 \ub514\uc2a4\ud50c\ub808\uc774 \ubcc0\ud658",id:"\uc774\uc288-\ub514\uc2a4\ud50c\ub808\uc774-\ubcc0\ud658",children:[]}]},{value:"Converting the Issues List Page",id:"converting-the-issues-list-page",children:[{value:"Reviewing the Issues List Component",id:"reviewing-the-issues-list-component",children:[]},{value:"Thinking in Thunks",id:"thinking-in-thunks",children:[]},{value:"Logic for Fetching Github Repo Details",id:"logic-for-fetching-github-repo-details",children:[]},{value:"Fetching Repo Details in the Issues List",id:"fetching-repo-details-in-the-issues-list",children:[]},{value:"Logic for Fetching Issues for a Repo",id:"logic-for-fetching-issues-for-a-repo",children:[]},{value:"Fetching Issues in the Issues List",id:"fetching-issues-in-the-issues-list",children:[]}]},{value:"Converting the Issue Details Page",id:"converting-the-issue-details-page",children:[{value:"Reviewing the Issue Details Component",id:"reviewing-the-issue-details-component",children:[]},{value:"Fetching the Current Issue",id:"fetching-the-current-issue",children:[]},{value:"Logic for Fetching Comments",id:"logic-for-fetching-comments",children:[]},{value:"Fetching the Issue Comments",id:"fetching-the-issue-comments",children:[]}]},{value:"Summary",id:"summary",children:[]}],u={rightToc:c};function l(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(r.b)("wrapper",Object(s.a)({},u,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h1",{id:"\uc2ec\ud654-\ud29c\ud1a0\ub9ac\uc5bc--redux-toolkit-in-practive"},"\uc2ec\ud654 \ud29c\ud1a0\ub9ac\uc5bc : Redux Toolkit in Practive"),Object(r.b)("p",null,"[\uc911\uae09 \ud29c\ud1a0\ub9ac\uc5bc]",'(./ intermediate-tutorial.md) \uc5d0\uc11c \uc77c\ubc18\uc801\uc778 \uae30\ubcf8 React \uc571\uc5d0\uc11c Redux Toolkit\uc744 \uc0ac\uc6a9\ud558\ub294 \ubc29\ubc95\uacfc \uae30\uc874\uc758 \uc77c\ubc18 Redux \ucf54\ub4dc\ub97c RTK\ub97c \ub300\uc2e0 \uc0ac\uc6a9\ud558\ub3c4\ub85d \ubcc0\ud658\ud558\ub294 \ubc29\ubc95\uc744 \ud655\uc778\ud588\uc2b5\ub2c8\ub2e4. \ub610\ud55c \uac10\uc18d\uae30 \ud568\uc218\uc5d0\uc11c "\ubcc0\ud615"\ubd88\ubcc0 \uc5c5\ub370\uc774\ud2b8\ub97c \uc791\uc131\ud558\ub294 \ubc29\ubc95\uacfc \uc791\uc5c5 \ud398\uc774\ub85c\ub4dc\ub97c \uc0dd\uc131\ud558\uae30 \uc704\ud574 "\ucf5c\ubc31 \uc900\ube44"\ub97c \uc791\uc131\ud558\ub294 \ubc29\ubc95\ub3c4 \uc0b4\ud3b4 \ubcf4\uc558\uc2b5\ub2c8\ub2e4.'),Object(r.b)("p",null,'\uc774 \ud29c\ud1a0\ub9ac\uc5bc\uc5d0\uc11c\ub294 \ud560\uc77c \ubaa9\ub85d \uc608\uc81c\ubcf4\ub2e4 \ub354 \ud070 "\uc2e4\uc81c"\uc571\uc758 \uc77c\ubd80\ub85c Redux Toolkit\uc744 \uc0ac\uc6a9\ud558\ub294 \ubc29\ubc95\uc744 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \ud29c\ud1a0\ub9ac\uc5bc\uc740 \uba87 \uac00\uc9c0 \uac1c\ub150\uc744 \ubcf4\uc5ec\uc90d\ub2c8\ub2e4:'),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},'Redux\ub97c \uc0ac\uc6a9\ud558\uae30 \uc704\ud574 "plain React"\uc571\uc744 \ubcc0\ud658\ud558\ub294 \ubc29\ubc95'),Object(r.b)("li",{parentName:"ul"},"\ub370\uc774\ud130 fetch\uc640 \uac19\uc740 \ube44\ub3d9\uae30 \ub85c\uc9c1\uc774 RTK\uc5d0 \uc801\ud569\ud55c \ubc29\uc2dd"),Object(r.b)("li",{parentName:"ul"},"TypeScript\ub85c RTK\ub97c \uc0ac\uc6a9\ud558\ub294 \ubc29\ubc95")),Object(r.b)("p",null,"\uc774 \uacfc\uc815\uc5d0\uc11c \ucf54\ub4dc\ub97c \uac1c\uc120\ud558\ub294 \ub370 \uc0ac\uc6a9\ud560 \uc218\uc788\ub294 TypeScript \uae30\uc220\uc758 \uba87 \uac00\uc9c0 \uc608\ub97c \uc0b4\ud3b4\ubcf4\uace0 ",Object(r.b)("a",Object(s.a)({parentName:"p"},{href:"https://react-redux.js.org/api/connect"}),"\uae30\uc874",Object(r.b)("inlineCode",{parentName:"a"},"connect")," API")," \ub300\uc2e0 \uc0c8\ub85c\uc6b4 ",Object(r.b)("a",Object(s.a)({parentName:"p"},{href:"https://react-redux.js.org/api/hooks"}),"React-Redux Hooks API"),"\ub97c \uc0ac\uc6a9\ud558\ub294 \ubc29\ubc95\uc744 \uc0b4\ud3b4 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4."),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},Object(r.b)("strong",{parentName:"p"}," \ucc38\uace0 ")," : \uc774\uac83\uc740 TypeScript\ub97c \uc77c\ubc18\uc801\uc73c\ub85c \ub610\ub294 \ud2b9\ubcc4\ud788 Redux\uc640 \ud568\uaed8 \uc0ac\uc6a9\ud558\ub294 \ubc29\ubc95\uc5d0 \ub300\ud55c \uc644\uc804\ud55c \ubb38\uc11c\uac00 \uc544\ub2c8\uba70 \uc5ec\uae30\uc5d0 \ud45c\uc2dc\ub41c \uc608\uc81c\ub294 100% \uc644\uc804\ud55c type \uc548\uc804\uc131\uc744 \ub2ec\uc131\ud558\ub824\uace0 \uc2dc\ub3c4\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 ",Object(r.b)("a",Object(s.a)({parentName:"p"},{href:"https://github.com/typescript-cheatsheets/react-typescript-cheatsheet"}),"React TypeScript Cheatsheet")," \ubc0f ",Object(r.b)("a",Object(s.a)({parentName:"p"},{href:"https://github.com/piotrwitek/react-redux-typescript-guide"}),"React / Redux TypeScript \uac00\uc774\ub4dc"),".")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"\ub610\ud55c\uc774 \ud29c\ud1a0\ub9ac\uc5bc\uc740 React \uc571 \ub85c\uc9c1\uc744 Redux\ub85c \uc644\uc804\ud788 \ubcc0\ud658\ud574\uc57c\ud55c\ub2e4\ub294 \uc758\ubbf8\ub294 \uc544\ub2d9\ub2c8\ub2e4. ",Object(r.b)("a",Object(s.a)({parentName:"p"},{href:"https://redux.js.org/faq/organizing-state#do-i-have-to-put-all-my-state-into-redux-should-i-ever-use-reacts-setstate"}),"React \ucef4\ud3ec\ub10c\ud2b8\uc5d0 \uc5b4\ub5a4 \uc0c1\ud0dc\uac00 \uc788\uc5b4\uc57c\ud558\uace0 Redux\uc5d0 \ubb34\uc5c7\uc774 \uc788\uc5b4\uc57c\ud558\ub294\uc9c0\ub294 \uc0ac\uc6a9\uc790\uac00 \uacb0\uc815\ud569\ub2c8\ub2e4."),". \uc774\uac83\uc740 \ub2f9\uc2e0\uc774 \uc6d0\ud55c\ub2e4\uba74 Redux\ub97c \uc0ac\uc6a9\ud558\ub3c4\ub85d \ub85c\uc9c1\uc744 \ubcc0\ud658\ud558\ub294 \ubc29\ubc95\uc758 \uc608\uc77c\ubfd0\uc785\ub2c8\ub2e4.")),Object(r.b)("p",null,"\uc774 \uac00\uc774\ub4dc\uc5d0\uc11c \ubcc0\ud658 \ub41c \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \uc804\uccb4 \uc18c\uc2a4 \ucf54\ub4dc\ub294 ",Object(r.b)("a",Object(s.a)({parentName:"p"},{href:"https://github.com/reduxjs/rtk-github-issues-example"}),"github.com/reduxjs/rtk-github-issues-example"),"\uc5d0\uc11c \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac\uc758 \uc5ed\uc0ac\uc5d0 \ud45c\uc2dc\ub41c\ub300\ub85c \ubcc0\ud658 \ud504\ub85c\uc138\uc2a4\ub97c \uc0b4\ud3b4 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4. \uc758\ubbf8\uc788\ub294 \uac1c\ubcc4 \ucee4\ubc0b\uc5d0 \ub300\ud55c \ub9c1\ud06c\ub294 \ub2e4\uc74c\uacfc \uac19\uc774 \ub530\uc634\ud45c \ube14\ub85d\uc73c\ub85c \uac15\uc870 \ud45c\uc2dc\ub429\ub2c8\ub2e4."),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"-\uc5ec\uae30\uc5d0 \uba54\uc2dc\uc9c0 \ucee4\ubc0b")),Object(r.b)("h2",{id:"\uc2dc\uc791-\uc608\uc81c-\uc560\ud50c\ub9ac\ucf00\uc774\uc158-\uac80\ud1a0"},"\uc2dc\uc791 \uc608\uc81c \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uac80\ud1a0"),Object(r.b)("p",null,"\uc774 \ud29c\ud1a0\ub9ac\uc5bc\uc758 \uc608\uc81c \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc740 Github \uc774\uc288 \ubdf0\uc5b4 \uc571\uc785\ub2c8\ub2e4. \uc0ac\uc6a9\uc790\ub294 Github \uc870\uc9c1 \ubc0f \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac\uc758 \uc774\ub984\uc744 \uc785\ub825\ud558\uace0, \ud604\uc7ac \uc9c4\ud589\uc911\uc778 \ubb38\uc81c \ubaa9\ub85d\uc744 \uac00\uc838\uc624\uace0, \ubb38\uc81c \ubaa9\ub85d\uc744 \ud398\uc774\uc9c0\ub85c \uc774\ub3d9\ud558\uace0, \ud2b9\uc815 \ubb38\uc81c\uc758 \ub0b4\uc6a9\uacfc \ub313\uae00\uc744 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4."),Object(r.b)("p",null,"\uc774 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \uc2dc\uc791 \ucee4\ubc0b\uc740 \ub370\uc774\ud130 \uac00\uc838 \uc624\uae30\uc640 \uac19\uc740 \uc0c1\ud0dc \ubc0f \ubd80\uc791\uc6a9\uc5d0 \ub300\ud55c \ud6c4\ud06c\uac00\uc788\ub294 \ud568\uc218 \uad6c\uc131 \uc694\uc18c\ub97c \uc0ac\uc6a9\ud558\ub294 \uc77c\ubc18 React \uad6c\ud604\uc785\ub2c8\ub2e4. \ucf54\ub4dc\ub294 \uc774\ubbf8 TypeScript\ub85c \uc791\uc131\ub418\uc5c8\uc73c\uba70 \uc2a4\ud0c0\uc77c \uc9c0\uc815\uc740 CSS \ubaa8\ub4c8\uc744 \ud1b5\ud574 \uc218\ud589\ub429\ub2c8\ub2e4."),Object(r.b)("p",null,"\uc791\ub3d9\uc911\uc778 \uc6d0\ub798\uc758 \uc77c\ubc18 React \uc571\uc744 \uc0b4\ud3b4 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4."),Object(r.b)("iframe",{src:"https://codesandbox.io/embed/rsk-github-issues-example-8jf6d?fontsize=14&hidenavigation=1&theme=dark&view=preview",style:{width:"100%",height:"500px",border:0,borderRadius:"4px",overflow:"hidden"},title:"rtk-github-issues-example-01-plain-react",allow:"geolocation; microphone; camera; midi; vr; accelerometer; gyroscope; payment; ambient-light-sensor; encrypted-media; usb",sandbox:"allow-modals allow-forms allow-popups allow-scripts allow-same-origin"}),Object(r.b)("h3",{id:"react-codebase-\uc18c\uc2a4-\uac1c\uc694"},"React Codebase \uc18c\uc2a4 \uac1c\uc694"),Object(r.b)("p",null,'\ucf54\ub4dc\ubca0\uc774\uc2a4\ub294 \uc774\ubbf8 "\uae30\ub2a5 \ud3f4\ub354"\uad6c\uc870\ub85c \ubc30\uce58\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uc8fc\uc694 \ubd80\ubd84\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4.'),Object(r.b)("p",null,"-",Object(r.b)("inlineCode",{parentName:"p"},"/api")," : Github Issues API\uc5d0 \ub300\ud55c \ud568\uc218 \ubc0f TS \uc720\ud615 \uac00\uc838 \uc624\uae30\n-",Object(r.b)("inlineCode",{parentName:"p"},"/app")," : \uae30\ubcf8",Object(r.b)("inlineCode",{parentName:"p"},"<App>"),"\uad6c\uc131 \uc694\uc18c\n-",Object(r.b)("inlineCode",{parentName:"p"},"/components")," : \uc5ec\ub7ec \uacf3\uc5d0\uc11c \uc7ac\uc0ac\uc6a9\ub418\ub294 \ucef4\ud3ec\ub10c\ud2b8\n-",Object(r.b)("inlineCode",{parentName:"p"},"/features"),"\n-",Object(r.b)("inlineCode",{parentName:"p"},"/issueDetails :"),"\uc774\uc288 \uc138\ubd80 \uc815\ubcf4 \ud398\uc774\uc9c0\uc758 \uad6c\uc131 \uc694\uc18c\n-",Object(r.b)("inlineCode",{parentName:"p"},"/issuesList")," : \uc774\uc288 \ubaa9\ub85d \ud45c\uc2dc\ub97c\uc704\ud55c \uad6c\uc131 \uc694\uc18c\n-",Object(r.b)("inlineCode",{parentName:"p"},"/repoSearch")," : Repo Search \ud3fc\uc758 \uad6c\uc131 \uc694\uc18c\n-",Object(r.b)("inlineCode",{parentName:"p"},"/utils")," : \ub2e4\uc591\ud55c \ubb38\uc790\uc5f4 \uc720\ud2f8\ub9ac\ud2f0 \uae30\ub2a5"),Object(r.b)("h2",{id:"redux-store-\uc124\uc815"},"Redux Store \uc124\uc815"),Object(r.b)("p",null,"\uc774 \uc571\uc740 \uc544\uc9c1 Redux\ub97c \uc804\ud600 \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uae30 \ub54c\ubb38\uc5d0 \uccab \ubc88\uc9f8 \ub2e8\uacc4\ub294 Redux Toolkit\uacfc React-Redux\ub97c \uc124\uce58\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uc774\uac83\uc740 TypeScript \uc571\uc774\ubbc0\ub85c",Object(r.b)("inlineCode",{parentName:"p"},"@ types / react-redux"),"\ub3c4 \ucd94\uac00\ud574\uc57c\ud569\ub2c8\ub2e4. Yarn \ub610\ub294 NPM\uc744 \ud1b5\ud574 \ud574\ub2f9 \ud328\ud0a4\uc9c0\ub97c \ud504\ub85c\uc81d\ud2b8\uc5d0 \ucd94\uac00\ud558\uc2ed\uc2dc\uc624."),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"-",Object(r.b)("a",Object(s.a)({parentName:"p"},{href:"https://github.com/reduxjs/rtk-github-issues-example/compare/Add_Redux_Toolkit_and_React-Redux_packages~1..reduxjs:Add_Redux_Toolkit_and_React-Redux_packages"}),"Redux Toolkit \ubc0f React-Redux \ud328\ud0a4\uc9c0 \ucd94\uac00"))),Object(r.b)("p",null,"\ub2e4\uc74c\uc73c\ub85c \ub8e8\ud2b8 \ub9ac\ub4c0\uc11c \ud568\uc218, Redux \uc2a4\ud1a0\uc5b4, \uadf8\ub9ac\uace0 \ucef4\ud3ec\ub10c\ud2b8 \ud2b8\ub9ac\uc5d0\uc11c \ud574\ub2f9 \uc2a4\ud1a0\uc5b4\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub3c4\ub85d",Object(r.b)("inlineCode",{parentName:"p"},"<Provider>"),"\uc640 \uac19\uc740 \uc77c\ubc18\uc801\uc778 \ubd80\ubd84\uc744 \uc124\uc815\ud574\uc57c\ud569\ub2c8\ub2e4."),Object(r.b)("p",null,'\uc774 \uacfc\uc815\uc5d0\uc11c \uc571\uc5d0 \ub300\ud55c "\ud56b \ubaa8\ub4c8 \uad50\uccb4"\ub97c \uc124\uc815\ud569\ub2c8\ub2e4. \uc774\ub807\uac8c\ud558\uba74 \ub9ac\ub4c0\uc11c \ub85c\uc9c1\uc774\ub098 \uad6c\uc131 \uc694\uc18c \ud2b8\ub9ac\ub97c \ubcc0\uacbd\ud560 \ub54c\ub9c8\ub2e4 Create-React-App\uc774 \ud398\uc774\uc9c0\ub97c \uc644\uc804\ud788 \uc0c8\ub85c \uace0\uce60 \ud544\uc694\uc5c6\uc774 \uc571\uc744 \ub2e4\uc2dc \ube4c\ub4dc\ud558\uace0 \ubcc0\uacbd\ub41c \ucf54\ub4dc\ub97c \uc2e4\ud589\uc911\uc778 \uc571\uc73c\ub85c \uc2a4\uc651\ud569\ub2c8\ub2e4.'),Object(r.b)("h4",{id:"root-reducer-\ub9cc\ub4e4\uae30"},"Root Reducer \ub9cc\ub4e4\uae30"),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"-",Object(r.b)("a",Object(s.a)({parentName:"p"},{href:"https://github.com/reduxjs/rtk-github-issues-example/compare/Add_store_and_root_reducer_with_reducer_HMR~1..reduxjs:Add_store_and_root_reducer_with_reducer_HMR"}),"Reducer HMR\ub85c \uc800\uc7a5\uc18c \ubc0f \ub8e8\ud2b8 \uac10\uc18d\uae30 \ucd94\uac00"))),Object(r.b)("p",null,"\uba3c\uc800 \ub8e8\ud2b8 \uac10\uc18d\uae30 \ud568\uc218\ub97c \ub9cc\ub4ed\ub2c8\ub2e4. \uc544\uc9c1 \uc2ac\ub77c\uc774\uc2a4\uac00 \uc5c6\uc73c\ubbc0\ub85c \ube48 \uac1d\uccb4\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4."),Object(r.b)("p",null,"\uadf8\ub7ec\ub098 \uc6b0\ub9ac \ucf54\ub4dc\uac00 Redux \uc800\uc7a5\uc18c \uc0c1\ud0dc\uc5d0 \uc561\uc138\uc2a4\ud574\uc57c \ud560 \ub54c\ub9c8\ub2e4 'state'\ubcc0\uc218\uc758 \uc720\ud615\uc744 \uc120\uc5b8\ud574\uc57c\ud558\uae30 \ub54c\ubb38\uc5d0 \ud574\ub2f9 \ub8e8\ud2b8 \uc0c1\ud0dc \uac1d\uccb4\uc5d0 \ub300\ud55c TypeScript \uc720\ud615\uc774 \ubb34\uc5c7\uc778\uc9c0 \uc54c\uace0 \uc2f6\uc2b5\ub2c8\ub2e4 (\uc608 : ",Object(r.b)("inlineCode",{parentName:"p"},"mapState")," \ud568\uc218,",Object(r.b)("inlineCode",{parentName:"p"},"useSelector")," \uc120\ud0dd\uae30 \ubc0f \uc37d\ud06c\uc758",Object(r.b)("inlineCode",{parentName:"p"},"getState"),")."),Object(r.b)("p",null,'\uac01 \uc0c1\ud0dc \uc2ac\ub77c\uc774\uc2a4\uc5d0 \ub300\ud574 \uc62c\ubc14\ub978 \uc720\ud615\uc73c\ub85c TS \uc720\ud615\uc744 \uc218\ub3d9\uc73c\ub85c \uc791\uc131\ud560 \uc218 \uc788\uc9c0\ub9cc \uc2ac\ub77c\uc774\uc2a4\uc758 \uc0c1\ud0dc \uad6c\uc870\ub97c \ubcc0\uacbd\ud560 \ub54c\ub9c8\ub2e4 \ud574\ub2f9 \uc720\ud615\uc744 \uacc4\uc18d \uc5c5\ub370\uc774\ud2b8\ud574\uc57c\ud569\ub2c8\ub2e4. \ub2e4\ud589\ud788 TS\ub294 \uc6b0\ub9ac\uac00 \uc774\ubbf8 \uc791\uc131\ud55c \ucf54\ub4dc\uc5d0\uc11c \uc720\ud615\uc744 \ucd94\ub860\ud558\ub294 \ub370 \uc77c\ubc18\uc801\uc73c\ub85c \ub2a5\uc219\ud569\ub2c8\ub2e4. \uc774 \uacbd\uc6b0 "\uc774 \uc720\ud615\uc740',Object(r.b)("inlineCode",{parentName:"p"},"rootReducer"),'\uc5d0\uc11c \ubc18\ud658\ub418\ub294 \ubaa8\ub4e0 \uc720\ud615\uc785\ub2c8\ub2e4"\ub77c\ub294 \uc720\ud615\uc744 \uc815\uc758 \ud560 \uc218 \uc788\uc73c\uba70, TS\ub294 \ucf54\ub4dc\uac00 \ubcc0\uacbd\ub428\uc5d0 \ub530\ub77c \ud3ec\ud568 \ub41c \ub0b4\uc6a9\uc744 \uc790\ub3d9\uc73c\ub85c \ud30c\uc545\ud569\ub2c8\ub2e4. \ud574\ub2f9 \uc720\ud615\uc744 \ub0b4 \ubcf4\ub0b4\uba74 \uc571\uc758 \ub2e4\ub978 \ubd80\ubd84\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc73c\uba70 \ucd5c\uc2e0 \uc0c1\ud0dc\uc784\uc744 \uc555\ub2c8\ub2e4. \uc6b0\ub9ac\uac00\ud574\uc57c \ud560 \uc77c\uc740 \ub0b4\uc7a5 TS',Object(r.b)("inlineCode",{parentName:"p"},"ReturnType"),' \uc720\ud2f8\ub9ac\ud2f0 \uc720\ud615\uc744 \uc0ac\uc6a9\ud558\uace0 "',Object(r.b)("inlineCode",{parentName:"p"},"rootReducer"),' \ud568\uc218 \uc720\ud615"\uc744 \uc77c\ubc18 \uc778\uc218\ub85c \uc785\ub825\ud558\ub294 \uac83\uc785\ub2c8\ub2e4.'),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"app/rootReducer.ts")),Object(r.b)("pre",null,Object(r.b)("code",Object(s.a)({parentName:"pre"},{className:"language-ts"}),"import { combineReducers } from '@reduxjs/toolkit'\n\nconst rootReducer = combineReducers({})\n\nexport type RootState = ReturnType<typeof rootReducer>\n\nexport default rootReducer\n")),Object(r.b)("h4",{id:"\uc2a4\ud1a0\uc5b4-\uc124\uc815-\ubc0f-hmr"},"\uc2a4\ud1a0\uc5b4 \uc124\uc815 \ubc0f HMR"),Object(r.b)("p",null,"\ub2e4\uc74c\uc73c\ub85c \ub8e8\ud2b8 \ub9ac\ub4c0\uc11c\uc758 \ud56b \ub9ac\ub85c\ub529\uc744 \ud3ec\ud568\ud558\uc5ec \uc2a4\ud1a0\uc5b4 \uc778\uc2a4\ud134\uc2a4\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4. ",Object(r.b)("a",Object(s.a)({parentName:"p"},{href:"https://webpack.js.org/concepts/hot-module-replacement/"}),Object(r.b)("inlineCode",{parentName:"a"},"module.hot")," API for reloading"),"\uc744 \uc0ac\uc6a9\ud558\uc5ec \ub8e8\ud2b8 \uac10\uc18d\uae30 \ud568\uc218\uc758 \uc0c8 \ubc84\uc804\uc744 \uc5b8\uc81c\ub4e0\uc9c0 \ub2e4\uc2dc \uac00\uc838\uc62c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\uc2dc \ucef4\ud30c\uc77c\ud558\uace0 \ub300\uc2e0 \uc0c8 \ubc84\uc804\uc744 \uc0ac\uc6a9\ud558\ub3c4\ub85d \uc0c1\uc810\uc5d0 \uc54c\ub9bd\ub2c8\ub2e4."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"app/store.ts")),Object(r.b)("pre",null,Object(r.b)("code",Object(s.a)({parentName:"pre"},{className:"language-ts"}),"import { configureStore } from '@reduxjs/toolkit'\n\nimport rootReducer from './rootReducer'\n\nconst store = configureStore({\n  reducer: rootReducer\n})\n\nif (process.env.NODE_ENV === 'development' && module.hot) {\n  module.hot.accept('./rootReducer', () => {\n    const newRootReducer = require('./rootReducer').default\n    store.replaceReducer(newRootReducer)\n  })\n}\n\nexport type AppDispatch = typeof store.dispatch\n\nexport default store\n")),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"require ( './ rootReducer'). default"),'\ub294 \uc57d\uac04 \uc774\uc0c1\ud574 \ubcf4\uc785\ub2c8\ub2e4. \uc774\ub294 CommonJS \ub3d9\uae30 \uac00\uc838 \uc624\uae30 \uad6c\ubb38\uc744 ES \ubaa8\ub4c8\uacfc \ud63c\ud569\ud558\uae30 \ub54c\ubb38\uc5d0 "\uae30\ubcf8 \ub0b4\ubcf4\ub0b4\uae30"\ub294',Object(r.b)("inlineCode",{parentName:"p"},"default"),"\ub77c\ub294 \uac1c\uccb4 \ud544\ub4dc\uc5d0 \uc788\uc2b5\ub2c8\ub2e4. \uc6b0\ub9ac\ub294 \uc544\ub9c8\ub3c4",Object(r.b)("inlineCode",{parentName:"p"},"import ()"),"\ub97c \uc0ac\uc6a9\ud558\uace0 \uac10\uc18d\uae30 \uad50\uccb4\ub97c \ube44\ub3d9\uae30 \uc801\uc73c\ub85c \ucc98\ub9ac\ud588\uc744 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4."),Object(r.b)("p",null,"####",Object(r.b)("inlineCode",{parentName:"p"},"Provider")," \ub80c\ub354\ub9c1"),Object(r.b)("p",null,"\uc774\uc81c \uc800\uc7a5\uc18c\uac00 \uc0dd\uc131\ub418\uc5c8\uc73c\ubbc0\ub85c React \ucef4\ud3ec\ub10c\ud2b8 \ud2b8\ub9ac\uc5d0 \ucd94\uac00 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"-",Object(r.b)("a",Object(s.a)({parentName:"p"},{href:"https://github.com/reduxjs/rtk-github-issues-example/compare/Render_Redux_Provider_with_app_HMR~1..reduxjs:Render_Redux_Provider_with_app_HMR"}),"Render Redux Provider with app HMR"))),Object(r.b)("p",null,"\ub8e8\ud2b8 \ub9ac\ub4c0\uc11c\uc640 \ub9c8\ucc2c\uac00\uc9c0\ub85c \ucef4\ud3ec\ub10c\ud2b8 \ud30c\uc77c\uc774 \ubcc0\uacbd \ub420 \ub54c\ub9c8\ub2e4 React \ucef4\ud3ec\ub10c\ud2b8 \ud2b8\ub9ac\ub97c \ud56b \ub9ac\ub85c\ub4dc \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uac00\uc7a5 \uc88b\uc740 \ubc29\ubc95\uc740",Object(r.b)("inlineCode",{parentName:"p"},"<App>"),"\uad6c\uc131 \uc694\uc18c\ub97c \uac00\uc838 \uc640\uc11c \ub80c\ub354\ub9c1\ud558\ub294 \ud568\uc218\ub97c \uc791\uc131\ud558\uace0 \uc2dc\uc791\uc2dc \ud55c \ubc88 \ud638\ucd9c\ud558\uc5ec \ud3c9\uc18c\uc640 \uac19\uc774 React \uad6c\uc131 \uc694\uc18c \ud2b8\ub9ac\ub97c \ud45c\uc2dc \ud55c \ub2e4\uc74c \uad6c\uc131 \uc694\uc18c\uac00 \ubcc0\uacbd \ub420 \ub54c\ub9c8\ub2e4 \ud574\ub2f9 \ud568\uc218\ub97c \uc7ac\uc0ac\uc6a9\ud558\ub294 \uac83\uc785\ub2c8\ub2e4."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"index.tsx")),Object(r.b)("pre",null,Object(r.b)("code",Object(s.a)({parentName:"pre"},{className:"language-tsx"}),"import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\n\nimport store from './app/store'\n\nimport './index.css'\n\nconst render = () => {\n  const App = require('./app/App').default\n\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById('root')\n  )\n}\n\nrender()\n\nif (process.env.NODE_ENV === 'development' && module.hot) {\n  module.hot.accept('./app/App', render)\n}\n")),Object(r.b)("h2",{id:"\uba54\uc778-\uc571-\ub514\uc2a4\ud50c\ub808\uc774-\ubcc0\ud658"},"\uba54\uc778 \uc571 \ub514\uc2a4\ud50c\ub808\uc774 \ubcc0\ud658"),Object(r.b)("p",null,"\uba54\uc778 \uc2a4\ud1a0\uc5b4 \uc124\uc815\uc774 \uc644\ub8cc\ub418\uba74 \uc774\uc81c \uc2e4\uc81c \uc571 \ub85c\uc9c1\uc744 Redux\ub97c \uc0ac\uc6a9\ud558\ub3c4\ub85d \ubcc0\ud658 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),Object(r.b)("h3",{id:"\uae30\uc874-\uc571-\uc0c1\ud0dc-\ud3c9\uac00"},"\uae30\uc874 \uc571 \uc0c1\ud0dc \ud3c9\uac00"),Object(r.b)("p",null,"\ud604\uc7ac \ucd5c\uc0c1\uc704 <",Object(r.b)("inlineCode",{parentName:"p"},"App>"),"\uad6c\uc131 \uc694\uc18c\ub294 React",Object(r.b)("inlineCode",{parentName:"p"},"useState")," \ud6c4\ud06c\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc5ec\ub7ec \uc815\ubcf4\ub97c \uc800\uc7a5\ud569\ub2c8\ub2e4."),Object(r.b)("p",null,"-\uc120\ud0dd\ud55c Github \uc870\uc9c1 \ubc0f \uc800\uc7a5\uc18c\n-\ud604\uc7ac \ud638 \ubaa9\ub85d \ud398\uc774\uc9c0 \ubc88\ud638\n-\ubb38\uc81c \ubaa9\ub85d\uc744 \ubcf4\ub294\uc9c0 \uc544\ub2c8\uba74 \ud2b9\uc815 \ubb38\uc81c\uc5d0 \ub300\ud55c \uc138\ubd80 \uc815\ubcf4\ub97c \ubcf4\ub294\uc9c0"),Object(r.b)("p",null,"\ud55c\ud3b8",Object(r.b)("inlineCode",{parentName:"p"},"<RepoSearchForm>"),"\uad6c\uc131 \uc694\uc18c\ub294 \uc0c1\ud0dc \ud6c4\ud06c\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc81c\uc5b4 \ub41c \uc591\uc2dd \uc785\ub825\uc5d0 \ub300\ud574 \uc9c4\ud589\uc911\uc778 \uc791\uc5c5 \uac12\uc744 \uc800\uc7a5\ud569\ub2c8\ub2e4."),Object(r.b)("p",null,"Redux FAQ\uc5d0\ub294 ","[Redux\uc5d0 \ub370\uc774\ud130\ub97c \ub123\ub294 \uac83\uc774 \ud569\ub9ac\uc801 \uc77c \ub54c\uc5d0 \ub300\ud55c \uba87 \uac00\uc9c0 \uacbd\ud5d8 \uaddc\uce59]"," (",Object(r.b)("a",Object(s.a)({parentName:"p"},{href:"https://redux.js.org/faq/organizing-state#do-i-have-to-put-all-my"}),"https://redux.js.org/faq/organizing-state#do-i-have-to-put-all-my")," -state-into-redux- \ub098\ub294 \ud56d\uc0c1 \uc0ac\uc6a9-\ubc18\uc751 -setstate). \uc774 \uacbd\uc6b0",Object(r.b)("inlineCode",{parentName:"p"},"<App>"),"\uc5d0\uc11c \uc0c1\ud0dc \uac12\uc744 \ucd94\ucd9c\ud558\uc5ec Redux \uc2a4\ud1a0\uc5b4\uc5d0 \ub123\ub294 \uac83\uc774 \ud569\ub9ac\uc801\uc785\ub2c8\ub2e4. \ud604\uc7ac\uc774\ub97c \uc0ac\uc6a9\ud558\ub294 \uad6c\uc131 \uc694\uc18c\ub294 \ud558\ub098 \ubfd0\uc774\uc9c0 \ub9cc \ub354 \ud070 \uc571\uc5d0\ub294 \ud574\ub2f9 \uac12\uc744 \uace0\ub824\ud558\ub294 \uc5ec\ub7ec \uad6c\uc131 \uc694\uc18c\uac00\uc788\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. HMR\uc744 \uc124\uc815 \ud588\uc73c\ubbc0\ub85c \ub098\uc911\uc5d0 \uad6c\uc131 \uc694\uc18c \ud2b8\ub9ac\ub97c \ud3b8\uc9d1 \ud560 \ub54c \ud574\ub2f9 \uac12\uc744 \uc720\uc9c0\ud558\ub294 \uac83\ub3c4 \ub3c4\uc6c0\uc774 \ub420 \uac83\uc785\ub2c8\ub2e4."),Object(r.b)("p",null,"\ubc18\uba74\uc5d0 WIP \uc591\uc2dd \uac12\uc744 Redux \uc800\uc7a5\uc18c\uc5d0 ",Object(r.b)("em",{parentName:"p"}," \ud560 \uc218\ub294 \uc788\uc9c0\ub9cc ")," \uadf8\ub807\uac8c\ud574\ub3c4 \uc2e4\uc9c8\uc801\uc778 \uc774\uc810\uc740 \uc5c6\uc2b5\ub2c8\ub2e4. ",Object(r.b)("inlineCode",{parentName:"p"},"<RepoSearchForm>"),"\uad6c\uc131 \uc694\uc18c \ub9cc \ud574\ub2f9 \uac12\uc5d0 \uad00\uc2ec\uc774 \uc788\uc73c\uba70 \ub2e4\ub978 \uacbd\ud5d8 \uaddc\uce59\uc740 \uc5ec\uae30\uc5d0 \uc801\uc6a9\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c ","[\ub300\ubd80\ubd84\uc758 \uc591\uc2dd \uc0c1\ud0dc\ub294 Redux\uc5d0 \ubcf4\uad00\ud574\uc11c\ub294 \uc548\ub429\ub2c8\ub2e4]"," (",Object(r.b)("a",Object(s.a)({parentName:"p"},{href:"https://redux.js.org/faq/organizing-state#should-i-put-form-state-or-other-ui-state"}),"https://redux.js.org/faq/organizing-state#should-i-put-form-state-or-other-ui-state")," -in-my-store). \uadf8\ub798\uc11c \uc6b0\ub9ac\ub294 \uadf8\uac83\uc744 \ub0b4\ubc84\ub824 \ub458 \uac83\uc785\ub2c8\ub2e4."),Object(r.b)("h3",{id:"\ucd08\uae30-\uc0c1\ud0dc-\uc2ac\ub77c\uc774\uc2a4-\uc0dd\uc131"},"\ucd08\uae30 \uc0c1\ud0dc \uc2ac\ub77c\uc774\uc2a4 \uc0dd\uc131"),Object(r.b)("p",null,"\uccab \ubc88\uc9f8 \ub2e8\uacc4\ub294 \ud604\uc7ac",Object(r.b)("inlineCode",{parentName:"p"},"<App>"),'\uc5d0 \ubcf4\uad00\ub418\uace0\uc788\ub294 \ub370\uc774\ud130\ub97c \uc0b4\ud3b4\ubcf4\uace0\uc774\ub97c "\ubb38\uc81c \ud45c\uc2dc"\uc2ac\ub77c\uc774\uc2a4\uc758 \uc720\ud615\uacfc \ucd08\uae30 \uc0c1\ud0dc \uac12\uc73c\ub85c \ubc14\uafb8\ub294 \uac83\uc785\ub2c8\ub2e4. \uac70\uae30\uc5d0\uc11c \ub9ac\ub4c0\uc11c\ub97c \uc815\uc758\ud558\uc5ec \uc801\uc808\ud558\uac8c \uc5c5\ub370\uc774\ud2b8 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.'),Object(r.b)("p",null,"\uc804\uccb4 \uc2ac\ub77c\uc774\uc2a4\uc758 \uc18c\uc2a4\ub97c \uc0b4\ud3b4\ubcf8 \ub2e4\uc74c \uc5b4\ub5a4 \uc791\uc5c5\uc744\ud558\ub294\uc9c0 \ubd84\uc11d\ud574 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4."),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"-",Object(r.b)("a",Object(s.a)({parentName:"p"},{href:"https://github.com/reduxjs/rtk-github-issues-example/compare/Add_initial_state_slice_for_UI_display~1..reduxjs:Add_initial_state_slice_for_UI_display"}),"UI \ud45c\uc2dc\ub97c\uc704\ud55c \ucd08\uae30 \uc0c1\ud0dc \uc2ac\ub77c\uc774\uc2a4 \ucd94\uac00"))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"features/issuesDisplay/issuesDisplaySlice.ts")),Object(r.b)("pre",null,Object(r.b)("code",Object(s.a)({parentName:"pre"},{className:"language-ts"}),"import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\ninterface CurrentDisplay {\n  displayType: 'issues' | 'comments'\n  issueId: number | null\n}\n\ninterface CurrentDisplayPayload {\n  displayType: 'issues' | 'comments'\n  issueId?: number\n}\n\ninterface CurrentRepo {\n  org: string\n  repo: string\n}\n\ntype CurrentDisplayState = {\n  page: number\n} & CurrentDisplay &\n  CurrentRepo\n\nlet initialState: CurrentDisplayState = {\n  org: 'rails',\n  repo: 'rails',\n  page: 1,\n  displayType: 'issues',\n  issueId: null\n}\n\nconst issuesDisplaySlice = createSlice({\n  name: 'issuesDisplay',\n  initialState,\n  reducers: {\n    displayRepo(state, action: PayloadAction<CurrentRepo>) {\n      const { org, repo } = action.payload\n      state.org = org\n      state.repo = repo\n    },\n    setCurrentPage(state, action: PayloadAction<number>) {\n      state.page = action.payload\n    },\n    setCurrentDisplayType(state, action: PayloadAction<CurrentDisplayPayload>) {\n      const { displayType, issueId = null } = action.payload\n      state.displayType = displayType\n      state.issueId = issueId\n    }\n  }\n})\n\nexport const {\n  displayRepo,\n  setCurrentDisplayType,\n  setCurrentPage\n} = issuesDisplaySlice.actions\n\nexport default issuesDisplaySlice.reducer\n")),Object(r.b)("h4",{id:"\uc0c1\ud0dc-\ub0b4\uc6a9-\uc720\ud615-\uc120\uc5b8"},"\uc0c1\ud0dc \ub0b4\uc6a9 \uc720\ud615 \uc120\uc5b8"),Object(r.b)("p",null,"org \ubc0f repo \uac12\uc740 \ub2e8\uc21c\ud55c \ubb38\uc790\uc5f4\uc774\uba70 \ud604\uc7ac \ubb38\uc81c \ud398\uc774\uc9c0\ub294 \uc22b\uc790 \uc77c\ubfd0\uc785\ub2c8\ub2e4. \ubb38\uc790\uc5f4 \uc0c1\uc218\uc758 \ud569\uc9d1\ud569\uc744 \uc0ac\uc6a9\ud558\uc5ec \ubb38\uc81c \ubaa9\ub85d \ub610\ub294 \ub2e8\uc77c \ubb38\uc81c\uc758 \uc138\ubd80 \uc815\ubcf4\ub97c \ud45c\uc2dc\ud558\ub294\uc9c0 \uc5ec\ubd80\ub97c \ub098\ud0c0\ub0b4\uba70 \uc138\ubd80 \uc815\ubcf4 \uc778 \uacbd\uc6b0 \ubb38\uc81c ID \ubc88\ud638\ub97c \uc54c\uc544\uc57c\ud569\ub2c8\ub2e4."),Object(r.b)("p",null,"\ub098\uc911\uc5d0 \uc561\uc158 \uc720\ud615\uc5d0\uc11c \uc7ac\uc0ac\uc6a9 \ud560 \uc218 \uc788\ub3c4\ub85d \uc774\ub7ec\ud55c \ubd80\ubd84\uc5d0 \ub300\ud55c \uc720\ud615\uc744 \uc2a4\uc2a4\ub85c \uc815\uc758 \ud560 \uc218 \uc788\uc73c\uba70 \ucd94\uc801\ud558\ub824\ub294 \uc804\uccb4 \uc0c1\ud0dc\uc5d0 \ub300\ud574 \ub354 \ud070 \uc720\ud615\uc73c\ub85c \uacb0\ud569 \ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4."),Object(r.b)("p",null,'\uc0c1\ud0dc\uc5d0 \ub300\ud574 \ub098\uc5f4\ub41c \uc720\ud615\uc5d0 \ud398\uc774\uc9c0 \ubc88\ud638\uac00 \ud3ec\ud568\ub418\uc5b4 \uc788\uae30 \ub54c\ubb38\uc5d0 "\ud604\uc7ac \ud45c\uc2dc"\ubd80\ubd84\uc5d0\ub294 \uc57d\uac04\uc758 \ucd94\uac00 \uc791\uc5c5\uc774 \ud544\uc694\ud558\uc9c0\ub9cc UI\ub294 \ubb38\uc81c \ubaa9\ub85d\uc73c\ub85c \uc804\ud658\ud558\ub294 \uc791\uc5c5\uc744 \uc804\ub2ec\ud560 \ub54c \ud558\ub098\ub97c \ud3ec\ud568\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ub530\ub77c\uc11c \ud574\ub2f9 \uc791\uc5c5\uc758 \ub0b4\uc6a9\uc5d0 \ub300\ud574 \ubcc4\ub3c4\uc758 \uc720\ud615\uc744 \uc815\uc758\ud569\ub2c8\ub2e4.'),Object(r.b)("h4",{id:"\uc2ac\ub77c\uc774\uc2a4-\uc0c1\ud0dc-\ubc0f-\uc791\uc5c5\uc5d0-\ub300\ud55c-\uc720\ud615-\uc120\uc5b8"},"\uc2ac\ub77c\uc774\uc2a4 \uc0c1\ud0dc \ubc0f \uc791\uc5c5\uc5d0 \ub300\ud55c \uc720\ud615 \uc120\uc5b8"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"createSlice"),"\ub294 \ub450 \uac00\uc9c0 \uc18c\uc2a4\uc5d0\uc11c \uc720\ud615\uc744 \ucd94\ub860\ud558\ub824\uace0\ud569\ub2c8\ub2e4."),Object(r.b)("p",null,"-\uc0c1\ud0dc \uc720\ud615\uc740 'initialState'\ud544\ub4dc\uc758 \uc720\ud615\uc744 \uae30\ubc18\uc73c\ub85c\ud569\ub2c8\ub2e4.\n-\uac01 \uac10\uc18d\uae30\ub294 \ucc98\ub9ac \ud560 \uc791\uc5c5 \uc720\ud615\uc744 \uc120\uc5b8\ud574\uc57c\ud569\ub2c8\ub2e4."),Object(r.b)("p",null,"\uc0c1\ud0dc \uc720\ud615\uc740 \uac01 \ucf00\uc774\uc2a4 \ub9ac\ub4c0\uc11c\uc5d0\uc11c 'state'\ub9e4\uac1c \ubcc0\uc218\uc758 \uc720\ud615\uacfc \uc0dd\uc131 \ub41c \ub9ac\ub4c0\uc11c \ud568\uc218\uc758 \ubc18\ud658 \uc720\ud615\uc73c\ub85c \uc0ac\uc6a9\ub418\uba70, \ud574\ub2f9 \uc0dd\uc131 \ub41c \uc561\uc158 \uc0dd\uc131\uc790\uc5d0 \ub300\ud574 \uc561\uc158 \uc720\ud615\uc774 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. (\ub610\ub294 \uac10\uc18d\uae30\uc640 \ud568\uaed8 \"\ucf5c\ubc31 \uc900\ube44\"\ub97c \uc815\uc758\ud558\ub294 \uacbd\uc6b0 \uc900\ube44 \ucf5c\ubc31\uc758 \uc778\uc218\uac00 \uc791\uc5c5 \uc0dd\uc131\uc790\uc5d0\uac8c\ub3c4 \uc0ac\uc6a9\ub418\uba70 \ucf5c\ubc31\uc758 \ubc18\ud658 \uac12\uc740 \uac10\uc18d\uae30\uac00 \uc608\uc0c1\ud558\ub294 \uc791\uc5c5\uc5d0 \ub300\ud574 \uc120\uc5b8 \ub41c \uc720\ud615\uacfc \uc77c\uce58\ud574\uc57c\ud569\ub2c8\ub2e4.)"),Object(r.b)("p",null,"\uac10\uc18d\uae30\uc5d0\uc11c \uc791\uc5c5 \uc720\ud615\uc744 \uc120\uc5b8 \ud560 \ub54c \uc0ac\uc6a9\ud560 \uae30\ubcf8 \uc720\ud615\uc740 ",Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"PayloadAction <PayloadType>")),"\uc785\ub2c8\ub2e4. ",Object(r.b)("inlineCode",{parentName:"p"},"createAction"),"\uc740\uc774 \uc720\ud615\uc744 \ubc18\ud658 \uac12\uc73c\ub85c \uc0ac\uc6a9\ud569\ub2c8\ub2e4."),Object(r.b)("p",null,"\ud2b9\uc815 \uac10\uc18d\uae30\ub97c \uc608\ub85c \ub4e4\uc5b4 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4."),Object(r.b)("pre",null,Object(r.b)("code",Object(s.a)({parentName:"pre"},{className:"language-ts"}),"setCurrentPage(state, action: PayloadAction<number>) {\n    state.page = action.payload\n},\n")),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"createSlice"),"\ub294 \uc774\uac83\uc774 \uc6b0\ub9ac\uc758",Object(r.b)("inlineCode",{parentName:"p"},"initialState")," (",Object(r.b)("inlineCode",{parentName:"p"},"CurrentDisplayState")," \uc720\ud615)\uc640 \ub3d9\uc77c\ud55c \uc720\ud615\uc774\uc5b4\uc57c\ud55c\ub2e4\ub294 \uac83\uc744 \uc774\ubbf8 \uc54c\uace0 \uc788\uae30 \ub54c\ubb38\uc5d0",Object(r.b)("inlineCode",{parentName:"p"},"state"),"\uc5d0 \ub300\ud55c \uc720\ud615\uc744 \uc120\uc5b8 \ud560 \ud544\uc694\uac00 \uc5c6\uc2b5\ub2c8\ub2e4."),Object(r.b)("p",null,"\uc561\uc158 \uac1d\uccb4\ub294",Object(r.b)("inlineCode",{parentName:"p"},"PayloadAction"),"\uc774\uba70",Object(r.b)("inlineCode",{parentName:"p"},"action.payload"),"\ub294",Object(r.b)("inlineCode",{parentName:"p"},"\uc22b\uc790"),"\ub77c\uace0 \uc120\uc5b8\ud569\ub2c8\ub2e4. \uadf8\ub7f0 \ub2e4\uc74c",Object(r.b)("inlineCode",{parentName:"p"},"state.page = action.payload"),"\ub97c \ud560\ub2f9\ud558\uba74 TS\ub294 \uc22b\uc790\uc5d0 \uc22b\uc790\ub97c \ud560\ub2f9\ud558\uace0 \uc788\uc74c\uc744 \uc54c\uace0 \uc62c\ubc14\ub974\uac8c \uc791\ub3d9\ud569\ub2c8\ub2e4. ",Object(r.b)("inlineCode",{parentName:"p"},"issuesDisplaySlice.actions.setCurrentPage ()"),"\ub97c \ud638\ucd9c\ud558\ub824\uace0\ud55c\ub2e4\uba74 \uadf8 \uc22b\uc790\uac00 \uc561\uc158\uc758 \ud398\uc774\ub85c\ub4dc\uac00\ub418\uae30 \ub54c\ubb38\uc5d0 \uc778\uc218\ub85c \uc22b\uc790\ub97c \uc804\ub2ec\ud574\uc57c\ud569\ub2c8\ub2e4."),Object(r.b)("p",null,"\ub9c8\ucc2c\uac00\uc9c0\ub85c",Object(r.b)("inlineCode",{parentName:"p"},"displayRepo (state, action : PayloadAction <CurrentRepo>)"),"\uc758 \uacbd\uc6b0 TS\ub294",Object(r.b)("inlineCode",{parentName:"p"},"action.payload"),"\uac00",Object(r.b)("inlineCode",{parentName:"p"},"org")," \ubc0f",Object(r.b)("inlineCode",{parentName:"p"},"repo")," \ubb38\uc790\uc5f4 \ud544\ub4dc\uac00\uc788\ub294 \uac1d\uccb4\uc784\uc744 \uc54c\uace0 \uc788\uc73c\uba70\uc774\ub97c \uc0c1\ud0dc\uc5d0 \ud560\ub2f9 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. (\uc774 \"mutative\"\ud560\ub2f9\uc740 'createSlice'\uac00 \ub0b4\ubd80 Immer\ub97c \uc0ac\uc6a9\ud558\uae30 \ub54c\ubb38\uc5d0 \uc548\uc804\ud558\uace0 \uac00\ub2a5\ud569\ub2c8\ub2e4!)"),Object(r.b)("h4",{id:"slice-reducer-\uc0ac\uc6a9"},"Slice Reducer \uc0ac\uc6a9"),Object(r.b)("p",null,"\ub2e4\ub978 \uc608\uc81c\uc640 \ub9c8\ucc2c\uac00\uc9c0\ub85c, \uc774\uc288 \ub514\uc2a4\ud50c\ub808\uc774 \uc2ac\ub77c\uc774\uc2a4 \ub9ac\ub4c0\uc11c\ub97c \ub8e8\ud2b8 \ub9ac\ub4c0\uc11c\ub85c \uac00\uc838 \uc640\uc11c \ucd94\uac00\ud574\uc57c\ud569\ub2c8\ub2e4."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"app/rootReducer.ts")),Object(r.b)("pre",null,Object(r.b)("code",Object(s.a)({parentName:"pre"},{className:"language-diff"}),"import { combineReducers } from '@reduxjs/toolkit'\n\n+import issuesDisplayReducer from 'features/issuesDisplay/issuesDisplaySlice'\n\n-const rootReducer = combineReducers({})\n+const rootReducer = combineReducers({\n+ issuesDisplay: issuesDisplayReducer\n+})\n")),Object(r.b)("h3",{id:"\uc774\uc288-\ub514\uc2a4\ud50c\ub808\uc774-\ubcc0\ud658"},"\uc774\uc288 \ub514\uc2a4\ud50c\ub808\uc774 \ubcc0\ud658"),Object(r.b)("p",null,"\uc774\uc288 \ub514\uc2a4\ud50c\ub808\uc774 \uc2ac\ub77c\uc774\uc2a4\uac00 \uc2a4\ud1a0\uc5b4\uc5d0 \uc5f0\uacb0\ub418\uc5c8\uc73c\ubbc0\ub85c \ub0b4\ubd80 \uad6c\uc131 \uc694\uc18c \uc0c1\ud0dc \ub300\uc2e0 \uc0ac\uc6a9\ud558\ub3c4\ub85d",Object(r.b)("inlineCode",{parentName:"p"},"<App>"),"\uc744 \uc5c5\ub370\uc774\ud2b8 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"-",Object(r.b)("a",Object(s.a)({parentName:"p"},{href:"https://github.com/reduxjs/rtk-github-issues-example/compare/Convert_main_issues_display_control_to_Redux~1..reduxjs:Convert_main_issues_display_control_to_Redux"}),"\uc8fc\uc694 \uc774\uc288 \ub514\uc2a4\ud50c\ub808\uc774 \ucee8\ud2b8\ub864\uc744 Redux\ub85c \ubcc0\ud658"))),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"App")," \uad6c\uc131 \uc694\uc18c\uc5d0 \uc138 \uac00\uc9c0 \uadf8\ub8f9\uc744 \ubcc0\uacbd\ud574\uc57c\ud569\ub2c8\ub2e4."),Object(r.b)("p",null,"-",Object(r.b)("inlineCode",{parentName:"p"},"useState")," \uc120\uc5b8\uc744 \uc81c\uac70\ud574\uc57c\ud569\ub2c8\ub2e4.\n-Redux \uc2a4\ud1a0\uc5b4\uc5d0\uc11c \ud574\ub2f9 \uc0c1\ud0dc \uac12\uc744 \uc77d\uc5b4\uc57c\ud569\ub2c8\ub2e4.\n-\uc0ac\uc6a9\uc790\uac00 \uad6c\uc131 \uc694\uc18c\uc640 \uc0c1\ud638 \uc791\uc6a9\ud560 \ub54c Redux \uc791\uc5c5\uc744 \uc804\ub2ec\ud574\uc57c\ud569\ub2c8\ub2e4."),Object(r.b)("p",null,"\uc804\ud1b5\uc801\uc73c\ub85c \ub9c8\uc9c0\ub9c9 \ub450 \uac00\uc9c0 \uce21\uba74\uc740 ",Object(r.b)("a",Object(s.a)({parentName:"p"},{href:"https://react-redux.js.org/api/connect"}),"React-Redux",Object(r.b)("inlineCode",{parentName:"a"},"connect")," API"),"\ub97c \ud1b5\ud574 \ucc98\ub9ac\ub429\ub2c8\ub2e4. \ub370\uc774\ud130\ub97c \uac80\uc0c9\ud558\ub294",Object(r.b)("inlineCode",{parentName:"p"},"mapState")," \ud568\uc218\uc640 \uc561\uc158 \uc0dd\uc131\uc790\ub97c \ubcf4\uad00\ud558\ub294",Object(r.b)("inlineCode",{parentName:"p"},"mapDispatch")," \ud568\uc218\ub97c \uc791\uc131\ud558\uace0,\uc774\ub97c",Object(r.b)("inlineCode",{parentName:"p"},"connect"),"\uc5d0 \uc804\ub2ec\ud558\uace0, \ubaa8\ub4e0 \uac83\uc744 props\ub85c \uac00\uc838\uc628 \ub2e4\uc74c",Object(r.b)("inlineCode",{parentName:"p"},"this.props.setCurrentPage ()"),"\ub97c \ud638\ucd9c\ud558\uc5ec \ud574\ub2f9 \uc561\uc158 \uc720\ud615\uc744 \uc804\ub2ec\ud569\ub2c8\ub2e4."),Object(r.b)("p",null,"\uadf8\ub7ec\ub098 ",Object(r.b)("a",Object(s.a)({parentName:"p"},{href:"https://react-redux.js.org/api/hooks"}),"React-Redux\uc5d0\ub294 \uc774\uc81c \ud6c4\ud06c API\uac00 \uc788\uc2b5\ub2c8\ub2e4"),", \uc2a4\ud1a0\uc5b4\uc640\ubcf4\ub2e4 \uc9c1\uc811\uc801\uc73c\ub85c \uc0c1\ud638 \uc791\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. ",Object(r.b)("inlineCode",{parentName:"p"},"useSelector"),"\ub97c \uc0ac\uc6a9\ud558\uba74 \uc2a4\ud1a0\uc5b4\uc5d0\uc11c \ub370\uc774\ud130\ub97c \uc77d\uace0 \uc5c5\ub370\uc774\ud2b8\ub97c \uad6c\ub3c5 \ud560 \uc218 \uc788\uc73c\uba70",Object(r.b)("inlineCode",{parentName:"p"},"useDispatch"),"\ub294 \uc2a4\ud1a0\uc5b4\uc758",Object(r.b)("inlineCode",{parentName:"p"},"dispatch")," \uba54\uc18c\ub4dc\uc5d0 \ub300\ud55c \ucc38\uc870\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc774 \ud29c\ud1a0\ub9ac\uc5bc\uc758 \ub098\uba38\uc9c0 \ubd80\ubd84\uc5d0\uc11c\uc774\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4."),Object(r.b)("p",null,"\uba3c\uc800 \ud544\uc694\ud55c \ud568\uc218\uc640 \uc55e\uc11c \uc120\uc5b8 \ud55c",Object(r.b)("inlineCode",{parentName:"p"},"RootState")," \uc720\ud615\uc744 \uac00\uc838 \uc640\uc11c \ud558\ub4dc \ucf54\ub529 \ub41c \uae30\ubcf8 \uc870\uc9c1 \ubc0f \uc800\uc7a5\uc18c \ubb38\uc790\uc5f4\uc744 \uc81c\uac70\ud569\ub2c8\ub2e4.\n",Object(r.b)("strong",{parentName:"p"},"app/App.tsx")),Object(r.b)("pre",null,Object(r.b)("code",Object(s.a)({parentName:"pre"},{className:"language-diff"}),"import React, { useState } from 'react'\n+import { useSelector, useDispatch } from 'react-redux'\n\n+import { RootState } from './rootReducer'\n\nimport { RepoSearchForm } from 'features/repoSearch/RepoSearchForm'\nimport { IssuesListPage } from 'features/issuesList/IssuesListPage'\nimport { IssueDetailsPage } from 'features/issueDetails/IssueDetailsPage'\n\n-const ORG = 'rails'\n-const REPO = 'rails'\n+import {\n+  displayRepo,\n+  setCurrentDisplayType,\n+  setCurrentPage\n+} from 'features/issuesDisplay/issuesDisplaySlice'\n\nimport './App.css'\n")),Object(r.b)("p",null,"\ub2e4\uc74c\uc73c\ub85c,",Object(r.b)("inlineCode",{parentName:"p"},"App")," \uc0c1\ub2e8\uc5d0\uc11c \uc774\uc804",Object(r.b)("inlineCode",{parentName:"p"},"useState")," \ud6c4\ud06c\ub97c \uc81c\uac70\ud558\uace0",Object(r.b)("inlineCode",{parentName:"p"},"useDispatch")," \ubc0f",Object(r.b)("inlineCode",{parentName:"p"},"useSelector")," \ud638\ucd9c\ub85c \ub300\uccb4\ud569\ub2c8\ub2e4."),Object(r.b)("pre",null,Object(r.b)("code",Object(s.a)({parentName:"pre"},{className:"language-diff"}),"const App: React.FC = () => {\n- const [org, setOrg] = useState(ORG)\n- const [repo, setRepo] = useState(REPO)\n- const [page, setPage] = useState(1)\n- const [currentDisplay, setCurrentDisplay] = useState<CurrentDisplay>({\n-   type: 'issues'\n- })\n+ const dispatch = useDispatch()\n\n+ const { org, repo, displayType, page, issueId } = useSelector(\n+   (state: RootState) => state.issuesDisplay\n+ )\n")),Object(r.b)("p",null,'"selector"\ud568\uc218\ub97c',Object(r.b)("inlineCode",{parentName:"p"},"useSelector"),"\uc5d0 \uc804\ub2ec\ud569\ub2c8\ub2e4.\uc774 \ud568\uc218\ub294 Redux \uc2a4\ud1a0\uc5b4 \uc0c1\ud0dc\ub97c \ub9e4\uac1c \ubcc0\uc218\ub85c \ubc1b\uc544\ub4e4\uc774\uace0 \uc77c\ubd80 \uacb0\uacfc\ub97c \ubc18\ud658\ud558\ub294 \ud568\uc218\uc785\ub2c8\ub2e4. \uc6b0\ub9ac\ub294",Object(r.b)("inlineCode",{parentName:"p"},"state")," \uc778\uc790\uc758 \uc720\ud615\uc774 \ub8e8\ud2b8 \uac10\uc18d\uae30\uc5d0\uc11c \uc815\uc758\ud55c",Object(r.b)("inlineCode",{parentName:"p"},"RootState")," \uc720\ud615\uc784\uc744 \uc120\uc5b8\ud558\ubbc0\ub85c TS\ub294",Object(r.b)("inlineCode",{parentName:"p"},"state")," \uc548\uc5d0 \uc5b4\ub5a4 \ud544\ub4dc\uac00 \uc788\ub294\uc9c0 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4. ",Object(r.b)("inlineCode",{parentName:"p"},"state.issuesDisplay")," \uc2ac\ub77c\uc774\uc2a4\ub97c \ud558\ub098\uc758 \uc870\uac01\uc73c\ub85c \uac80\uc0c9\ud558\uace0 \uacb0\uacfc \uac1d\uccb4\ub97c \uad6c\uc131 \uc694\uc18c \ub0b4\ubd80\uc758 \uc5ec\ub7ec \ubcc0\uc218\ub85c \ubd84\ud574 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),Object(r.b)("p",null,"\uc774\uc81c \uc774\uc804\uacfc \uac19\uc774 \ucef4\ud3ec\ub10c\ud2b8 \ub0b4\ubd80\uc5d0 \uac70\uc758 \ub3d9\uc77c\ud55c \ub370\uc774\ud130 \ubcc0\uc218\uac00 \uc788\uc2b5\ub2c8\ub2e4.",Object(r.b)("inlineCode",{parentName:"p"},"useState")," \ud6c4\ud06c \ub300\uc2e0 Redux \uc2a4\ud1a0\uc5b4\uc5d0\uc11c \uc628 \uac83\uc785\ub2c8\ub2e4."),Object(r.b)("p",null,"\ub9c8\uc9c0\ub9c9 \ub2e8\uacc4\ub294",Object(r.b)("inlineCode",{parentName:"p"},"useState")," setter\ub97c \ud638\ucd9c\ud558\ub294 \ub300\uc2e0 \uc0ac\uc6a9\uc790\uac00 \ubb34\uc5b8\uac00\ub97c \ud560 \ub54c\ub9c8\ub2e4 Redux \uc561\uc158\uc744 \uc804\ub2ec\ud558\ub294 \uac83\uc785\ub2c8\ub2e4."),Object(r.b)("pre",null,Object(r.b)("code",Object(s.a)({parentName:"pre"},{className:"language-diff"}),"  const setOrgAndRepo = (org: string, repo: string) => {\n-   setOrg(org)\n-   setRepo(repo)\n+   dispatch(displayRepo({ org, repo }))\n  }\n\n  const setJumpToPage = (page: number) => {\n-   setPage(page)\n+   dispatch(setCurrentPage(page))\n  }\n\n  const showIssuesList = () => {\n-   setCurrentDisplay({ type: 'issues' })\n+   dispatch(setCurrentDisplayType({ displayType: 'issues' }))\n  }\n\n  const showIssueComments = (issueId: number) => {\n-   setCurrentDisplay({ type: 'comments', issueId })\n+   dispatch(setCurrentDisplayType({ displayType: 'comments', issueId }))\n  }\n")),Object(r.b)("p",null,"\uc77c\ubc18\uc801\uc778",Object(r.b)("inlineCode",{parentName:"p"},"connect")," +",Object(r.b)("inlineCode",{parentName:"p"},"mapDispatch")," \uc0ac\uc6a9\ubc95\uacfc \ub2ec\ub9ac \uc5ec\uae30\uc11c\ub294",Object(r.b)("inlineCode",{parentName:"p"},"dispatch ()"),"\ub97c \uc9c1\uc811 \ud638\ucd9c\ud558\uace0 \uc62c\ubc14\ub978",Object(r.b)("inlineCode",{parentName:"p"},"payload")," \uac12\uc73c\ub85c \uc561\uc158 \uc0dd\uc131\uc790\ub97c \ud638\ucd9c\ud558\uace0 \uacb0\uacfc \uc561\uc158\uc744",Object(r.b)("inlineCode",{parentName:"p"},"dispatch"),"\uc5d0 \uc804\ub2ec\ud569\ub2c8\ub2e4."),Object(r.b)("p",null,"\uc774\uac83\uc774 \uc791\ub3d9\ud558\ub294\uc9c0 \ubd05\uc2dc\ub2e4!"),Object(r.b)("iframe",{src:"https://codesandbox.io/embed/rtk-github-issues-example-02-issues-display-tdx2w?fontsize=14&hidenavigation=1&module=%2Fsrc%2Fapp%2FApp.tsx&theme=dark&view=preview",style:{width:"100%",height:"500px",border:0,borderRadius:"4px",overflow:"hidden"},title:"rtk-github-issues-example-02-issues-display",allow:"geolocation; microphone; camera; midi; vr; accelerometer; gyroscope; payment; ambient-light-sensor; encrypted-media; usb",sandbox:"allow-modals allow-forms allow-popups allow-scripts allow-same-origin"}),Object(r.b)("p",null,"If you're thinking \"hey, this looks and behaves exactly like the previous example\"... then that's great! That means we've correctly converted the first bit of logic to Redux so far. If you want to confirm that there's Redux logic running, try clicking the \"Open in New Window\" button and inspect the store in the Redux DevTools Extension."),Object(r.b)("h2",{id:"converting-the-issues-list-page"},"Converting the Issues List Page"),Object(r.b)("p",null,"Our next task is to convert the ",Object(r.b)("inlineCode",{parentName:"p"},"<IssuesListPage>")," component to fetch and store issues via Redux. Currently, ",Object(r.b)("inlineCode",{parentName:"p"},"<IssuesListPage>")," is storing all data in ",Object(r.b)("inlineCode",{parentName:"p"},"useState")," hooks, including the fetched issues. It fetches the issues by making an AJAX call in a ",Object(r.b)("inlineCode",{parentName:"p"},"useEffect")," hook."),Object(r.b)("p",null,"As mentioned at the start, there's nothing actually wrong with this! Having React components fetch and store their own data is totally fine. But, for the purposes of this tutorial, we want to see how the Redux conversion process looks."),Object(r.b)("h3",{id:"reviewing-the-issues-list-component"},"Reviewing the Issues List Component"),Object(r.b)("p",null,"Here's the initial chunk of ",Object(r.b)("inlineCode",{parentName:"p"},"<IssuesListPage>"),":"),Object(r.b)("pre",null,Object(r.b)("code",Object(s.a)({parentName:"pre"},{className:"language-ts"}),"export const IssuesListPage = ({\n  org,\n  repo,\n  page = 1,\n  setJumpToPage,\n  showIssueComments\n}: ILProps) => {\n  const [issuesResult, setIssues] = useState<IssuesResult>({\n    pageLinks: null,\n    pageCount: 1,\n    issues: []\n  })\n  const [numIssues, setNumIssues] = useState<number>(-1)\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [issuesError, setIssuesError] = useState<Error | null>(null)\n\n  const { issues, pageCount } = issuesResult\n\n  useEffect(() => {\n    async function fetchEverything() {\n      async function fetchIssues() {\n        const issuesResult = await getIssues(org, repo, page)\n        setIssues(issuesResult)\n      }\n\n      async function fetchIssueCount() {\n        const repoDetails = await getRepoDetails(org, repo)\n        setNumIssues(repoDetails.open_issues_count)\n      }\n\n      try {\n        await Promise.all([fetchIssues(), fetchIssueCount()])\n        setIssuesError(null)\n      } catch (err) {\n        console.error(err)\n        setIssuesError(err)\n      } finally {\n        setIsLoading(false)\n      }\n    }\n\n    setIsLoading(true)\n\n    fetchEverything()\n  }, [org, repo, page])\n\n  // omit rendering\n}\n")),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"useEffect")," callback defines an outer ",Object(r.b)("inlineCode",{parentName:"p"},"async function fetchEverything()")," and calls it immediately. This is because we can't declare the ",Object(r.b)("inlineCode",{parentName:"p"},"useEffect")," callback itself as async. React expects that the return value from a ",Object(r.b)("inlineCode",{parentName:"p"},"useEffect")," callback will be a cleanup function. Since all async functions return a ",Object(r.b)("inlineCode",{parentName:"p"},"Promise")," automatically, React would see that ",Object(r.b)("inlineCode",{parentName:"p"},"Promise")," instead, and that would prevent React from actually cleaning up correctly."),Object(r.b)("p",null,"Inside, we define two more async functions to fetch issues and the open issues count, and call them both. We then wait for both functions to resolve successfully. (There's a few other ways we could have organized this logic, but this was sufficient for the example.)"),Object(r.b)("h3",{id:"thinking-in-thunks"},"Thinking in Thunks"),Object(r.b)("h4",{id:"what-is-a-thunk"},'What is a "Thunk"?'),Object(r.b)("p",null,"The Redux core (ie, ",Object(r.b)("inlineCode",{parentName:"p"},"createStore"),") is completely synchronous. When you call ",Object(r.b)("inlineCode",{parentName:"p"},"store.dispatch()"),", the store runs the root reducer, saves the return value, runs the subscriber callbacks, and returns, with no pause. By default, any asynchronicity has to happen outside of the store."),Object(r.b)("p",null,"But, what if you want to have async logic interact with the store by dispatching or checking the current store state? That's where ",Object(r.b)("a",Object(s.a)({parentName:"p"},{href:"https://redux.js.org/advanced/middleware"}),"Redux middleware")," come in. They extend the store, and allow you to:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Execute extra logic when any action is dispatched (such as logging the action and state)"),Object(r.b)("li",{parentName:"ul"},"Pause, modify, delay, replace, or halt dispatched actions"),Object(r.b)("li",{parentName:"ul"},"Write extra code that has access to ",Object(r.b)("inlineCode",{parentName:"li"},"dispatch")," and ",Object(r.b)("inlineCode",{parentName:"li"},"getState")),Object(r.b)("li",{parentName:"ul"},"Teach ",Object(r.b)("inlineCode",{parentName:"li"},"dispatch")," how to accept other values besides plain action objects, such as functions and promises, by intercepting them and dispatching real action objects instead")),Object(r.b)("p",null,"The most common Redux middleware is ",Object(r.b)("a",Object(s.a)({parentName:"p"},{href:"https://github.com/reduxjs/redux-thunk"}),Object(r.b)("inlineCode",{parentName:"a"},"redux-thunk")),'. The word "thunk" means "a function that delays a calculation until later". In our case, adding the thunk middleware to our Redux store lets us pass functions directly to ',Object(r.b)("inlineCode",{parentName:"p"},"store.dispatch()"),'. The thunk middleware will see the function, prevent it from actually reaching the "real" store, and call our function and pass in ',Object(r.b)("inlineCode",{parentName:"p"},"dispatch")," and ",Object(r.b)("inlineCode",{parentName:"p"},"getState"),' as arguments. So, a "thunk function" looks like this:'),Object(r.b)("pre",null,Object(r.b)("code",Object(s.a)({parentName:"pre"},{className:"language-js"}),"function exampleThunkFunction(dispatch, getState) {\n  // do something useful with dispatching or the store state here\n}\n\n// normally an error, but okay if the thunk middleware is added\nstore.dispatch(exampleThunkFunction)\n")),Object(r.b)("p",null,"Inside of a thunk function, you can write any code you want. The most common usage would be fetching some data via an AJAX call, and dispatching an action to load that data into the Redux store. The ",Object(r.b)("inlineCode",{parentName:"p"},"async/await")," syntax makes it easier to write thunks that do AJAX calls."),Object(r.b)("p",null,"Normally, we don't write action objects directly in our code - we use action creator functions to make them, and use them like ",Object(r.b)("inlineCode",{parentName:"p"},"dispatch(addTodo())"),'. In the same way, we typically write "thunk action creator" functions that return the thunk functions, like:'),Object(r.b)("pre",null,Object(r.b)("code",Object(s.a)({parentName:"pre"},{className:"language-js"}),"function exampleThunk() {\n  return function exampleThunkFunction(dispatch, getState) {\n    // do something useful with dispatching or the store state here\n  }\n}\n\n// normally an error, but okay if the thunk middleware is added\nstore.dispatch(exampleThunk())\n")),Object(r.b)("h4",{id:"why-use-thunks"},"Why Use Thunks?"),Object(r.b)("p",null,"You might be wondering what the point of all this is. There's a few reasons to use thunks:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Thunks allow us to write reusable logic that interacts with ",Object(r.b)("em",{parentName:"li"},"a")," Redux store, but without needing to reference a specific store instance."),Object(r.b)("li",{parentName:"ul"},"Thunks enable us to move more complex logic outside of our components"),Object(r.b)("li",{parentName:"ul"},"From a component's point of view, it doesn't care whether it's dispatching a plain action or kicking off some async logic - it just calls ",Object(r.b)("inlineCode",{parentName:"li"},"dispatch(doSomething())")," and moves on."),Object(r.b)("li",{parentName:"ul"},"Thunks can return values like promises, allowing logic inside the component to wait for something else to finish.")),Object(r.b)("p",null,"For further explanations, see ",Object(r.b)("a",Object(s.a)({parentName:"p"},{href:"https://github.com/reduxjs/redux-thunk#why-do-i-need-this"}),"these articles explaining thunks in the ",Object(r.b)("inlineCode",{parentName:"a"},"redux-thunk")," documentation"),"."),Object(r.b)("p",null,"There are many other kinds of Redux middleware that add async capabilities. The most popular are ",Object(r.b)("a",Object(s.a)({parentName:"p"},{href:"https://redux-saga.js.org/"}),Object(r.b)("inlineCode",{parentName:"a"},"redux-saga")),", which uses generator functions, and ",Object(r.b)("a",Object(s.a)({parentName:"p"},{href:"https://redux-observable.js.org/"}),Object(r.b)("inlineCode",{parentName:"a"},"redux-observable")),", which uses RxJS observables. For some comparisons, see the ",Object(r.b)("a",Object(s.a)({parentName:"p"},{href:"https://redux.js.org/faq/actions#what-async-middleware-should-i-use-how-do-you-decide-between-thunks-sagas-observables-or-something-else"}),'Redux FAQ entry on "how do I choose an async middleware?"'),"."),Object(r.b)("p",null,"However, while sagas and observables are useful, most apps do not need the power and capabilities they provide. So, ",Object(r.b)("strong",{parentName:"p"},"thunks are\nthe default recommended approach for writing async logic with Redux"),"."),Object(r.b)("h4",{id:"writing-thunks-in-redux-toolkit"},"Writing Thunks in Redux Toolkit"),Object(r.b)("p",null,"Writing thunk functions requires that the ",Object(r.b)("inlineCode",{parentName:"p"},"redux-thunk")," middleware be added to the store as part of the setup process. Redux Toolkit's ",Object(r.b)("inlineCode",{parentName:"p"},"configureStore")," function does automatically - ",Object(r.b)("a",Object(s.a)({parentName:"p"},{href:"/redux-toolkit/api/getDefaultMiddleware"}),Object(r.b)("inlineCode",{parentName:"a"},"thunk")," is one of the default middleware"),"."),Object(r.b)("p",null,"However, Redux Toolkit does not currently provide any special functions or syntax for writing thunk functions. In particular, they cannot be defined as part of a ",Object(r.b)("inlineCode",{parentName:"p"},"createSlice()")," call. You have to write them separate from the reducer logic."),Object(r.b)("p",null,'In a typical Redux app, thunk action creators are usually defined in an "actions" file, alongside the plain action creators. Thunks typically dispatch plain actions, such as ',Object(r.b)("inlineCode",{parentName:"p"},"dispatch(dataLoaded(response.data))"),"."),Object(r.b)("p",null,'Because we don\'t have separate "actions" files, it makes sense to write these thunks directly in our "slice" files. That way, they have access to the plain action creators from the slice, and it\'s easy to find where the thunk function lives.'),Object(r.b)("h3",{id:"logic-for-fetching-github-repo-details"},"Logic for Fetching Github Repo Details"),Object(r.b)("h4",{id:"adding-a-reusable-thunk-function-type"},"Adding a Reusable Thunk Function Type"),Object(r.b)("p",null,"Since the thunk middleware is already set up, we don't have to do any work there. However, the TypeScript types for thunks are kind of long and confusing, and we'd normally have to repeat the same type declaration for every thunk function we write."),Object(r.b)("p",null,"Before we go any further, let's add a type declaration we can reuse instead."),Object(r.b)("blockquote",null,Object(r.b)("ul",{parentName:"blockquote"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(s.a)({parentName:"li"},{href:"https://github.com/reduxjs/rtk-github-issues-example/compare/Add_AppThunk_type~1..reduxjs:Add_AppThunk_type"}),"Add AppThunk type")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"app/store.ts")),Object(r.b)("pre",null,Object(r.b)("code",Object(s.a)({parentName:"pre"},{className:"language-diff"}),"-import { configureStore } from '@reduxjs/toolkit'\n+import { configureStore, Action } from '@reduxjs/toolkit'\n+import { ThunkAction } from 'redux-thunk'\n\n-import rootReducer from './rootReducer'\n+import rootReducer, { RootState } from './rootReducer'\n\nexport type AppDispatch = typeof store.dispatch\n\n+export type AppThunk = ThunkAction<void, RootState, unknown, Action<string>>\n")),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"AppThunk"),' type declares that the "action" that we\'re using is specifically a thunk function. The thunk is customized with some additional type parameters:'),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Return value: the thunk doesn't return anything"),Object(r.b)("li",{parentName:"ol"},"State type for ",Object(r.b)("inlineCode",{parentName:"li"},"getState"),": returns our ",Object(r.b)("inlineCode",{parentName:"li"},"RootState")," type"),Object(r.b)("li",{parentName:"ol"},'"Extra argument": the thunk middleware can be customized to pass in an extra value, but we aren\'t doing that in this app'),Object(r.b)("li",{parentName:"ol"},"Action types accepted by ",Object(r.b)("inlineCode",{parentName:"li"},"dispatch"),": any action whose ",Object(r.b)("inlineCode",{parentName:"li"},"type")," is a string.")),Object(r.b)("p",null,"There are many cases where you would want different type settings here, but these are probably the most common settings. This way, we can avoid repeating that same type declaration every time we write a thunk."),Object(r.b)("h4",{id:"adding-the-repo-details-slice"},"Adding the Repo Details Slice"),Object(r.b)("p",null,"Now that we have that type, we can write a slice of state for fetching details on a repo."),Object(r.b)("blockquote",null,Object(r.b)("ul",{parentName:"blockquote"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(s.a)({parentName:"li"},{href:"https://github.com/reduxjs/rtk-github-issues-example/compare/Add_a_slice_for_storing_repo_details~1..reduxjs:Add_a_slice_for_storing_repo_details"}),"Add a slice for storing repo details")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"features/repoSearch/repoDetailsSlice.ts")),Object(r.b)("pre",null,Object(r.b)("code",Object(s.a)({parentName:"pre"},{className:"language-ts"}),"import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\nimport { AppThunk } from 'app/store'\n\nimport { RepoDetails, getRepoDetails } from 'api/githubAPI'\n\ninterface RepoDetailsState {\n  openIssuesCount: number\n  error: string | null\n}\n\nconst initialState: RepoDetailsState = {\n  openIssuesCount: -1,\n  error: null\n}\n\nconst repoDetails = createSlice({\n  name: 'repoDetails',\n  initialState,\n  reducers: {\n    getRepoDetailsSuccess(state, action: PayloadAction<RepoDetails>) {\n      state.openIssuesCount = action.payload.open_issues_count\n      state.error = null\n    },\n    getRepoDetailsFailed(state, action: PayloadAction<string>) {\n      state.openIssuesCount = -1\n      state.error = action.payload\n    }\n  }\n})\n\nexport const {\n  getRepoDetailsSuccess,\n  getRepoDetailsFailed\n} = repoDetails.actions\n\nexport default repoDetails.reducer\n\nexport const fetchIssuesCount = (\n  org: string,\n  repo: string\n): AppThunk => async dispatch => {\n  try {\n    const repoDetails = await getRepoDetails(org, repo)\n    dispatch(getRepoDetailsSuccess(repoDetails))\n  } catch (err) {\n    dispatch(getRepoDetailsFailed(err.toString()))\n  }\n}\n")),Object(r.b)("p",null,"The first part of this should look straightforward. We declare our slice state shape, the initial state value, and write a slice with reducers that store the open issues count or an error string, then export the action creators and reducer."),Object(r.b)("p",null,"Down at the bottom, we have our first data fetching thunk. The important things to notice here are:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"The thunk is defined separately from the slice"),", since RTK currently has no special syntax for defining thunks as part of a slice."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"We declare the thunk action creator as an arrow function, and use the ",Object(r.b)("inlineCode",{parentName:"strong"},"AppThunk")," type we just created.")," You can use either arrow functions or the ",Object(r.b)("inlineCode",{parentName:"li"},"function")," keyword to write thunk functions and thunk action creators, so we could also have written this as ",Object(r.b)("inlineCode",{parentName:"li"},"function fetchIssueCount() : AppThunk")," instead."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"We use the ",Object(r.b)("inlineCode",{parentName:"strong"},"async/await")," syntax for the thunk function itself.")," Again, this isn't required, but ",Object(r.b)("inlineCode",{parentName:"li"},"async/await")," usually results in simpler code than nested Promise ",Object(r.b)("inlineCode",{parentName:"li"},".then()")," chains."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"Inside the thunk, we dispatch the plain action creators that were generated by the ",Object(r.b)("inlineCode",{parentName:"strong"},"createSlice")," call"),".")),Object(r.b)("p",null,"While not shown, we also add the slice reducer to our root reducer."),Object(r.b)("h4",{id:"async-error-handling-logic-in-thunks"},"Async Error Handling Logic in Thunks"),Object(r.b)("p",null,"There is one potential flaw with the ",Object(r.b)("inlineCode",{parentName:"p"},"fetchIssuesCount()")," thunk as written. The ",Object(r.b)("inlineCode",{parentName:"p"},"try/catch")," block will currently catch any errors thrown\nby ",Object(r.b)("inlineCode",{parentName:"p"},"getRepoDetails()")," (such as an actual failed AJAX call), but it will also catch any errors that occur inside the dispatch of ",Object(r.b)("inlineCode",{parentName:"p"},"getRepoDetailsSuccess()"),". In both cases, it will end up dispatch ",Object(r.b)("inlineCode",{parentName:"p"},"getRepoDetailsFailed()"),". This may not be the desired way to handle errors, as it might show a misleading reason for what the actual error was."),Object(r.b)("p",null,"There are some possible ways to restructure the code to avoid this problem. First, the ",Object(r.b)("inlineCode",{parentName:"p"},"await")," could be switched to a standard promise chain, with separate callbacks passed in for the success and failure cases:"),Object(r.b)("pre",null,Object(r.b)("code",Object(s.a)({parentName:"pre"},{className:"language-js"}),"getRepoDetails(org, repo).then(\n  // success callback\n  repoDetails => dispatch(getRepoDetailsSuccess(repoDetails)),\n  // error callback\n  err => dispatch(getRepoDetailsFailed(err.toString()))\n)\n")),Object(r.b)("p",null,"Or, the thunk could be rewritten to only dispatch if no errors were caught:"),Object(r.b)("pre",null,Object(r.b)("code",Object(s.a)({parentName:"pre"},{className:"language-ts"})," let repoDetails\n  try {\n    repoDetails = await getRepoDetails(org, repo)\n  } catch (err) {\n    dispatch(getRepoDetailsFailed(err.toString()))\n    return\n  }\n  dispatch(getRepoDetailsSuccess(repoDetails))\n}\n")),Object(r.b)("p",null,"For sake of simplicity, we'll stick with the logic as-is for the rest of the tutorial."),Object(r.b)("h3",{id:"fetching-repo-details-in-the-issues-list"},"Fetching Repo Details in the Issues List"),Object(r.b)("p",null,"Now that the repo details slice exists, we can use it in the ",Object(r.b)("inlineCode",{parentName:"p"},"<IssuesListPage>")," component."),Object(r.b)("blockquote",null,Object(r.b)("ul",{parentName:"blockquote"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(s.a)({parentName:"li"},{href:"https://github.com/reduxjs/rtk-github-issues-example/compare/Update_IssuesListPage_to_fetch_repo_details_via_Redux~1..reduxjs:Update_IssuesListPage_to_fetch_repo_details_via_Redux"}),"Update IssuesListPage to fetch repo details via Redux")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"features/issuesList/IssuesListPage.tsx")),Object(r.b)("pre",null,Object(r.b)("code",Object(s.a)({parentName:"pre"},{className:"language-diff"}),"import React, { useState, useEffect } from 'react'\n+import { useSelector, useDispatch } from 'react-redux'\n\n-import { getIssues, getRepoDetails, IssuesResult } from 'api/githubAPI'\n+import { getIssues, IssuesResult } from 'api/githubAPI'\n\n+import { fetchIssuesCount } from 'features/repoSearch/repoDetailsSlice'\n+import { RootState } from 'app/rootReducer'\n\n// omit code\n\nexport const IssuesListPage = ({\n  org,\n  repo,\n  page = 1,\n  setJumpToPage,\n  showIssueComments\n}: ILProps) => {\n+ const dispatch = useDispatch()\n\n  const [issuesResult, setIssues] = useState<IssuesResult>({\n    pageLinks: null,\n    pageCount: 1,\n    issues: []\n  })\n- const [numIssues, setNumIssues] = useState<number>(-1)\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [issuesError, setIssuesError] = useState<Error | null>(null)\n+ const openIssueCount = useSelector(\n+   (state: RootState) => state.repoDetails.openIssuesCount\n+ )\n\n  useEffect(() => {\n    async function fetchEverything() {\n      async function fetchIssues() {\n        const issuesResult = await getIssues(org, repo, page)\n        setIssues(issuesResult)\n      }\n\n-     async function fetchIssueCount() {\n-       const repoDetails = await getRepoDetails(org, repo)\n-       setNumIssues(repoDetails.open_issues_count)\n-     }\n\n      try {\n-       await Promise.all([fetchIssues(), fetchIssueCount()])\n+       await Promise.all([\n+         fetchIssues(),\n+         dispatch(fetchIssuesCount(org, repo))\n+       ])\n        setIssuesError(null)\n      } catch (err) {\n        console.error(err)\n        setIssuesError(err)\n      } finally {\n        setIsLoading(false)\n      }\n    }\n\n    setIsLoading(true)\n\n    fetchEverything()\n- }, [org, repo, page])\n+ }, [org, repo, page, dispatch])\n")),Object(r.b)("p",null,"In ",Object(r.b)("inlineCode",{parentName:"p"},"<IssuesListPage>"),", we import the new ",Object(r.b)("inlineCode",{parentName:"p"},"fetchIssuesCount")," thunk, and rewrite the component to read the open issues count value from the Redux store."),Object(r.b)("p",null,"Inside our ",Object(r.b)("inlineCode",{parentName:"p"},"useEffect"),", we drop the ",Object(r.b)("inlineCode",{parentName:"p"},"fetchIssueCount")," function, and dispatch ",Object(r.b)("inlineCode",{parentName:"p"},"fetchIssuesCount")," instead."),Object(r.b)("h3",{id:"logic-for-fetching-issues-for-a-repo"},"Logic for Fetching Issues for a Repo"),Object(r.b)("p",null,"Next up, we need to replace the logic for fetching a list of open issues."),Object(r.b)("blockquote",null,Object(r.b)("ul",{parentName:"blockquote"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(s.a)({parentName:"li"},{href:"https://github.com/reduxjs/rtk-github-issues-example/compare/Add_a_slice_for_tracking_issues_state~1..reduxjs:Add_a_slice_for_tracking_issues_state"}),"Add a slice for tracking issues state")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"features/issuesList/issuesSlice.ts")),Object(r.b)("pre",null,Object(r.b)("code",Object(s.a)({parentName:"pre"},{className:"language-ts"}),"import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { Links } from 'parse-link-header'\n\nimport { Issue, IssuesResult, getIssue, getIssues } from 'api/githubAPI'\nimport { AppThunk } from 'app/store'\n\ninterface IssuesState {\n  issuesByNumber: Record<number, Issue>\n  currentPageIssues: number[]\n  pageCount: number\n  pageLinks: Links | null\n  isLoading: boolean\n  error: string | null\n}\n\nconst issuesInitialState: IssuesState = {\n  issuesByNumber: {},\n  currentPageIssues: [],\n  pageCount: 0,\n  pageLinks: {},\n  isLoading: false,\n  error: null\n}\n\nfunction startLoading(state: IssuesState) {\n  state.isLoading = true\n}\n\nfunction loadingFailed(state: IssuesState, action: PayloadAction<string>) {\n  state.isLoading = false\n  state.error = action.payload\n}\n\nconst issues = createSlice({\n  name: 'issues',\n  initialState: issuesInitialState,\n  reducers: {\n    getIssueStart: startLoading,\n    getIssuesStart: startLoading,\n    getIssueSuccess(state, { payload }: PayloadAction<Issue>) {\n      const { number } = payload\n      state.issuesByNumber[number] = payload\n      state.isLoading = false\n      state.error = null\n    },\n    getIssuesSuccess(state, { payload }: PayloadAction<IssuesResult>) {\n      const { pageCount, issues, pageLinks } = payload\n      state.pageCount = pageCount\n      state.pageLinks = pageLinks\n      state.isLoading = false\n      state.error = null\n\n      issues.forEach(issue => {\n        state.issuesByNumber[issue.number] = issue\n      })\n\n      state.currentPageIssues = issues.map(issue => issue.number)\n    },\n    getIssueFailure: loadingFailed,\n    getIssuesFailure: loadingFailed\n  }\n})\n\nexport const {\n  getIssuesStart,\n  getIssuesSuccess,\n  getIssueStart,\n  getIssueSuccess,\n  getIssueFailure,\n  getIssuesFailure\n} = issues.actions\n\nexport default issues.reducer\n\nexport const fetchIssues = (\n  org: string,\n  repo: string,\n  page?: number\n): AppThunk => async dispatch => {\n  try {\n    dispatch(getIssuesStart())\n    const issues = await getIssues(org, repo, page)\n    dispatch(getIssuesSuccess(issues))\n  } catch (err) {\n    dispatch(getIssuesFailure(err.toString()))\n  }\n}\n\nexport const fetchIssue = (\n  org: string,\n  repo: string,\n  number: number\n): AppThunk => async dispatch => {\n  try {\n    dispatch(getIssueStart())\n    const issue = await getIssue(org, repo, number)\n    dispatch(getIssueSuccess(issue))\n  } catch (err) {\n    dispatch(getIssueFailure(err.toString()))\n  }\n}\n")),Object(r.b)("p",null,"This slice is a bit longer, but it's the same basic approach as before: write the slice with reducers that handle API call results, then write thunks that do the fetching and dispatch actions with those results. The only new and interesting bits in this slice are:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},'Our "start fetching" and "fetch failed" reducer logic is the same for both the single issue and multiple issue fetch cases. So, we write those functions outside the slice once, then reuse them multiple times with different names inside the ',Object(r.b)("inlineCode",{parentName:"li"},"reducers")," object."),Object(r.b)("li",{parentName:"ul"},"The Github API returns an array of issue entries, but we ",Object(r.b)("a",Object(s.a)({parentName:"li"},{href:"https://redux.js.org/recipes/structuring-reducers/normalizing-state-shape"}),'want to store the data in a "normalized" structure to make it easy to look up an issue by its number'),". In this case, we use a plain object as a lookup table, by declaring that it is a ",Object(r.b)("inlineCode",{parentName:"li"},"Record<number, Issue>"),".")),Object(r.b)("h3",{id:"fetching-issues-in-the-issues-list"},"Fetching Issues in the Issues List"),Object(r.b)("p",null,"Now we can finish converting the ",Object(r.b)("inlineCode",{parentName:"p"},"<IssuesListPage>")," component by swapping out the issues fetching logic."),Object(r.b)("blockquote",null,Object(r.b)("ul",{parentName:"blockquote"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(s.a)({parentName:"li"},{href:"https://github.com/reduxjs/rtk-github-issues-example/compare/Update_IssuesListPage_to_fetch_issues_data_via_Redux~1..reduxjs:Update_IssuesListPage_to_fetch_issues_data_via_Redux"}),"Update IssuesListPage to fetch issues data via Redux")))),Object(r.b)("p",null,"Let's look at the changes."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"features/issuesList/IssuesListPage.tsx")),Object(r.b)("pre",null,Object(r.b)("code",Object(s.a)({parentName:"pre"},{className:"language-diff"}),"-import React, { useState, useEffect } from 'react'\n+import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\n-import { getIssues, IssuesResult } from 'api/githubAPI'\n\nimport { fetchIssuesCount } from 'features/repoSearch/repoDetailsSlice'\nimport { RootState } from 'app/rootReducer'\n\nimport { IssuesPageHeader } from './IssuesPageHeader'\nimport { IssuesList } from './IssuesList'\nimport { IssuePagination, OnPageChangeCallback } from './IssuePagination'\n+import { fetchIssues } from './issuesSlice'\n\n// omit code\n\n  const dispatch = useDispatch()\n\n- const [issuesResult, setIssues] = useState<IssuesResult>({\n-   pageLinks: null,\n-   pageCount: 1,\n-   issues: []\n- })\n- const [isLoading, setIsLoading] = useState<boolean>(false)\n- const [issuesError, setIssuesError] = useState<Error | null>(null)\n+ const {\n+   currentPageIssues,\n+   isLoading,\n+   error: issuesError,\n+   issuesByNumber,\n+   pageCount\n+ } = useSelector((state: RootState) => state.issues)\n\n\n  const openIssueCount = useSelector(\n    (state: RootState) => state.repoDetails.openIssuesCount\n  )\n\n- const { issues, pageCount } = issuesResult\n+ const issues = currentPageIssues.map(\n+   issueNumber => issuesByNumber[issueNumber]\n+ )\n\n  useEffect(() => {\n-   async function fetchEverything() {\n-     async function fetchIssues() {\n-       const issuesResult = await getIssues(org, repo, page)\n-       setIssues(issuesResult)\n-     }\n-\n-     try {\n-       await Promise.all([\n-        fetchIssues(),\n-        dispatch(fetchIssuesCount(org, repo))\n-       ])\n-       setIssuesError(null)\n-     } catch (err) {\n-       console.error(err)\n-       setIssuesError(err)\n-     } finally {\n-       setIsLoading(false)\n-     }\n-   }\n-\n-    setIsLoading(true)\n-\n-    fetchEverything()\n+    dispatch(fetchIssues(org, repo, page))\n+    dispatch(fetchIssuesCount(org, repo))\n  }, [org, repo, page, dispatch])\n")),Object(r.b)("p",null,"We remove the remaining ",Object(r.b)("inlineCode",{parentName:"p"},"useState")," hooks from ",Object(r.b)("inlineCode",{parentName:"p"},"<IssuesListPage>"),", add another ",Object(r.b)("inlineCode",{parentName:"p"},"useSelector"),' to retrieve the actual issues data from the Redux store, and construct the list of issues to render by mapping over the "current page issue IDs" array to look up each issue object by its ID.'),Object(r.b)("p",null,"In our ",Object(r.b)("inlineCode",{parentName:"p"},"useEffect"),", we delete the rest of the data fetching logic that's directly in the component, and just dispatch both data fetching thunks."),Object(r.b)("p",null,'This simplifies the logic in the component, but it didn\'t remove the work being done - it just moved it elsewhere. Again, it\'s not that either approach is "right" or "wrong" - it\'s just a question of where you want the data and the logic to live, and which approach is more maintainable for your app and situation.'),Object(r.b)("h2",{id:"converting-the-issue-details-page"},"Converting the Issue Details Page"),Object(r.b)("p",null,"The last major chunk of work left in the conversion is the ",Object(r.b)("inlineCode",{parentName:"p"},"<IssueDetailsPage>")," component. Let's take a look at what it does."),Object(r.b)("h3",{id:"reviewing-the-issue-details-component"},"Reviewing the Issue Details Component"),Object(r.b)("p",null,"Here's the current first half of ",Object(r.b)("inlineCode",{parentName:"p"},"<IssueDetailsPage>"),", containing the state and data fetching:"),Object(r.b)("pre",null,Object(r.b)("code",Object(s.a)({parentName:"pre"},{className:"language-ts"}),"export const IssueDetailsPage = ({\n  org,\n  repo,\n  issueId,\n  showIssuesList\n}: IDProps) => {\n  const [issue, setIssue] = useState<Issue | null>(null)\n  const [comments, setComments] = useState<Comment[]>([])\n  const [commentsError, setCommentsError] = useState<Error | null>(null)\n\n  useEffect(() => {\n    async function fetchIssue() {\n      try {\n        setCommentsError(null)\n        const issue = await getIssue(org, repo, issueId)\n        setIssue(issue)\n      } catch (err) {\n        setCommentsError(err)\n      }\n    }\n\n    fetchIssue()\n  }, [org, repo, issueId])\n\n  useEffect(() => {\n    async function fetchComments() {\n      if (issue !== null) {\n        const comments = await getComments(issue.comments_url)\n        setComments(comments)\n      }\n    }\n\n    fetchComments()\n  }, [issue])\n\n  // omit rendering\n}\n")),Object(r.b)("p",null,"It's very similar to ",Object(r.b)("inlineCode",{parentName:"p"},"<IssuesListPage>"),". We store the current displayed ",Object(r.b)("inlineCode",{parentName:"p"},"Issue"),", the fetched comments, and a potential error. We have ",Object(r.b)("inlineCode",{parentName:"p"},"useEffect")," hooks that fetch the current issue by its ID, and fetch the comments whenever the issue changes."),Object(r.b)("h3",{id:"fetching-the-current-issue"},"Fetching the Current Issue"),Object(r.b)("p",null,"We conveniently already have the Redux logic for fetching a single issue - we wrote that already as part of ",Object(r.b)("inlineCode",{parentName:"p"},"issuesSlice.ts"),". So, we can immediately jump straight to using that here in ",Object(r.b)("inlineCode",{parentName:"p"},"<IssueDetailsPage>"),"."),Object(r.b)("blockquote",null,Object(r.b)("ul",{parentName:"blockquote"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(s.a)({parentName:"li"},{href:"https://github.com/reduxjs/rtk-github-issues-example/compare/Update_IssueDetailsPage_to_fetch_issue_data_via_Redux~1..reduxjs:Update_IssueDetailsPage_to_fetch_issue_data_via_Redux"}),"Update IssueDetailsPage to fetch issue data via Redux")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"features/issueDetails/IssueDetailsPage.tsx")),Object(r.b)("pre",null,Object(r.b)("code",Object(s.a)({parentName:"pre"},{className:"language-diff"}),"import React, { useState, useEffect } from 'react'\n+import { useSelector, useDispatch } from 'react-redux'\nimport ReactMarkdown from 'react-markdown'\nimport classnames from 'classnames'\n\nimport { insertMentionLinks } from 'utils/stringUtils'\n-import { getIssue, getComments, Issue, Comment } from 'api/githubAPI'\n+import { getComments, Comment } from 'api/githubAPI'\nimport { IssueLabels } from 'components/IssueLabels'\n+import { RootState } from 'app/rootReducer'\n+import { fetchIssue } from 'features/issuesList/issuesSlice'\n\n\nexport const IssueDetailsPage = ({\n  org,\n  repo,\n  issueId,\n  showIssuesList\n}: IDProps) => {\n- const [issue, setIssue] = useState<Issue | null>(null)\n  const [comments, setComments] = useState<Comment[]>([])\n- const [commentsError, setCommentsError] = useState<Error | null>(null)\n+ const [commentsError] = useState<Error | null>(null)\n\n+ const dispatch = useDispatch()\n\n+ const issue = useSelector(\n+   (state: RootState) => state.issues.issuesByNumber[issueId]\n+ )\n\n  useEffect(() => {\n-   async function fetchIssue() {\n-     try {\n-       setCommentsError(null)\n-       const issue = await getIssue(org, repo, issueId)\n-       setIssue(issue)\n-     } catch (err) {\n-       setCommentsError(err)\n-     }\n-    }\n-    fetchIssue()\n+   if (!issue) {\n+      dispatch(fetchIssue(org, repo, issueId))\n+   }\n+   // Since we may have the issue already, ensure we're scrolled to the top\n+   window.scrollTo({ top: 0 })\n- }, [org, repo, issueId])\n+ }, [org, repo, issueId, issue, dispatch])\n")),Object(r.b)("p",null,"We continue the usual pattern. We drop the existing ",Object(r.b)("inlineCode",{parentName:"p"},"useState")," hooks, pull in ",Object(r.b)("inlineCode",{parentName:"p"},"useDispatch")," and the necessary state via ",Object(r.b)("inlineCode",{parentName:"p"},"useSelector"),", and dispatch the ",Object(r.b)("inlineCode",{parentName:"p"},"fetchIssue")," thunk to fetch data."),Object(r.b)("p",null,"Interestingly, there's actually a bit of a change in behavior here. The original React code was storing the fetched issues in ",Object(r.b)("inlineCode",{parentName:"p"},"<IssuesListPage>"),", and ",Object(r.b)("inlineCode",{parentName:"p"},"<IssueDetailsPage>")," was always having to do a separate fetch for its own issue. Because we're now storing issues in the Redux store, most of the time the listed issue ",Object(r.b)("em",{parentName:"p"},"should")," be already cached, and we don't even need to fetch it. Now, it's totally possible to do something similar with just React - all we'd have to do is pass the issue down from the parent component. Still, having that data in Redux makes it easier to do the caching."),Object(r.b)("p",null,"(As an interesting side note: the original code always caused the page to jump back to the top, because the issue didn't exist during the first render, so there was no content. If the issue ",Object(r.b)("em",{parentName:"p"},"does")," exist and we render it right away, the page may retain the scroll position from the issues list, so we have to enforce scrolling back to the top.)"),Object(r.b)("h3",{id:"logic-for-fetching-comments"},"Logic for Fetching Comments"),Object(r.b)("p",null,"We have one more slice left to write - we need to fetch and store comments for the current issue."),Object(r.b)("blockquote",null,Object(r.b)("ul",{parentName:"blockquote"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(s.a)({parentName:"li"},{href:"https://github.com/reduxjs/rtk-github-issues-example/compare/Add_a_slice_for_tracking_comments_data~1..reduxjs:Add_a_slice_for_tracking_comments_data"}),"Add a slice for tracking comments data")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"features/issueDetails/commentsSlice.ts")),Object(r.b)("pre",null,Object(r.b)("code",Object(s.a)({parentName:"pre"},{className:"language-ts"}),"import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\nimport { Comment, getComments, Issue } from 'api/githubAPI'\nimport { AppThunk } from 'app/store'\n\ninterface CommentsState {\n  commentsByIssue: Record<number, Comment[] | undefined>\n  loading: boolean\n  error: string | null\n}\n\ninterface CommentLoaded {\n  issueId: number\n  comments: Comment[]\n}\n\nconst initialState: CommentsState = {\n  commentsByIssue: {},\n  loading: false,\n  error: null\n}\n\nconst comments = createSlice({\n  name: 'comments',\n  initialState,\n  reducers: {\n    getCommentsStart(state) {\n      state.loading = true\n      state.error = null\n    },\n    getCommentsSuccess(state, action: PayloadAction<CommentLoaded>) {\n      const { comments, issueId } = action.payload\n      state.commentsByIssue[issueId] = comments\n      state.loading = false\n      state.error = null\n    },\n    getCommentsFailure(state, action: PayloadAction<string>) {\n      state.loading = false\n      state.error = action.payload\n    }\n  }\n})\n\nexport const {\n  getCommentsStart,\n  getCommentsSuccess,\n  getCommentsFailure\n} = comments.actions\nexport default comments.reducer\n\nexport const fetchComments = (issue: Issue): AppThunk => async dispatch => {\n  try {\n    dispatch(getCommentsStart())\n    const comments = await getComments(issue.comments_url)\n    dispatch(getCommentsSuccess({ issueId: issue.number, comments }))\n  } catch (err) {\n    dispatch(getCommentsFailure(err))\n  }\n}\n")),Object(r.b)("p",null,"The slice should look pretty familiar at this point. Our main bit of state is a lookup table of comments keyed by an issue ID. After the slice, we add a thunk to fetch the comments for a given issue, and dispatch the action to save the resulting array in the slice."),Object(r.b)("h3",{id:"fetching-the-issue-comments"},"Fetching the Issue Comments"),Object(r.b)("p",null,"The final step is to swap the comments fetching logic in ",Object(r.b)("inlineCode",{parentName:"p"},"<IssueDetailsPage>"),"."),Object(r.b)("blockquote",null,Object(r.b)("ul",{parentName:"blockquote"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(s.a)({parentName:"li"},{href:"https://github.com/reduxjs/rtk-github-issues-example/compare/Update_IssueDetailsPage_to_fetch_comments_via_Redux~1..reduxjs:Update_IssueDetailsPage_to_fetch_comments_via_Redux"}),"Update IssueDetailsPage to fetch comments via Redux")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"features/issueDetails/IssueDetailsPage.tsx")),Object(r.b)("pre",null,Object(r.b)("code",Object(s.a)({parentName:"pre"},{className:"language-diff"}),"-import React, { useState, useEffect } from 'react'\n+import React, { useEffect } from 'react'\n-import { useSelector, useDispatch } from 'react-redux'\n+import { useSelector, useDispatch, shallowEqual } from 'react-redux'\nimport ReactMarkdown from 'react-markdown'\nimport classnames from 'classnames'\n\nimport { insertMentionLinks } from 'utils/stringUtils'\n-import { getComments, Comment } from 'api/githubAPI'\nimport { IssueLabels } from 'components/IssueLabels'\nimport { RootState } from 'app/rootReducer'\nimport { fetchIssue } from 'features/issuesList/issuesSlice'\n\nimport { IssueMeta } from './IssueMeta'\nimport { IssueComments } from './IssueComments'\n+import { fetchComments } from './commentsSlice'\n\nexport const IssueDetailsPage = ({\n  org,\n  repo,\n  issueId,\n  showIssuesList\n}: IDProps) => {\n- const [comments, setComments] = useState<Comment[]>([])\n- const [commentsError] = useState<Error | null>(null)\n-\n  const dispatch = useDispatch()\n\n  const issue = useSelector(\n    (state: RootState) => state.issues.issuesByNumber[issueId]\n  )\n\n+ const { commentsLoading, commentsError, comments } = useSelector(\n+   (state: RootState) => {\n+     return {\n+       commentsLoading: state.comments.loading,\n+       commentsError: state.comments.error,\n+       comments: state.comments.commentsByIssue[issueId]\n+     }\n+   },\n+   shallowEqual\n+ )\n\n// omit effect\n  useEffect(() => {\n-   async function fetchComments() {\n-     if (issue) {\n-       const comments = await getComments(issue.comments_url)\n-       setComments(comments)\n-     }\n-   }\n-   fetchComments()\n+   if (issue) {\n+     dispatch(fetchComments(issue))\n+   }\n- }, [issue])\n+ }, [issue, dispatch])\n")),Object(r.b)("p",null,"We add another ",Object(r.b)("inlineCode",{parentName:"p"},"useSelector")," hook to pull out the current comments data. In this case, we need three different pieces: the loading flag, a potential error, and the actual comments array for this issue."),Object(r.b)("p",null,"However, this leads to a performance problem. Every time this selector runs, it returns a new object: ",Object(r.b)("inlineCode",{parentName:"p"},"{commentsLoading, commentsError, comments}"),". ",Object(r.b)("strong",{parentName:"p"},"Unlike ",Object(r.b)("inlineCode",{parentName:"strong"},"connect"),", ",Object(r.b)("inlineCode",{parentName:"strong"},"useSelector")," relies on reference equality by default.")," So, returning a new object will cause this component to rerender every time an action is dispatched, even if the comments are the same!"),Object(r.b)("p",null,"There's a few ways to fix this:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"We could write those as separate ",Object(r.b)("inlineCode",{parentName:"li"},"useSelector")," calls"),Object(r.b)("li",{parentName:"ul"},"We could use a memoized selector, such as ",Object(r.b)("inlineCode",{parentName:"li"},"createSelector")," from Reselect"),Object(r.b)("li",{parentName:"ul"},"We can use the React-Redux ",Object(r.b)("inlineCode",{parentName:"li"},"shallowEqual")," function to compare the results, so that the re-render only happens if the object's ",Object(r.b)("em",{parentName:"li"},"contents")," have changed.")),Object(r.b)("p",null,"In this case, we'll add ",Object(r.b)("inlineCode",{parentName:"p"},"shallowEqual")," as the comparison function for ",Object(r.b)("inlineCode",{parentName:"p"},"useSelector"),"."),Object(r.b)("h2",{id:"summary"},"Summary"),Object(r.b)("p",null,"And with that, we're done! The entire Github Issues app should now be fetching its data via thunks, storing the data in Redux, and interacting with the store via React-Redux hooks. We have Typescript types for our Github API calls, the API types are being used for the Redux state slices, and the store state types are being used in our React components."),Object(r.b)("p",null,"There's more that could be done to add more type safety if we wanted (like trying to constrain which possible action types can be passed to ",Object(r.b)("inlineCode",{parentName:"p"},"dispatch"),'), but this gives us a reasonable "80% solution" without too much extra effort.'),Object(r.b)("p",null,"Hopefully you now have a solid understanding of how Redux Toolkit looks in a real world application."),Object(r.b)("p",null,"Let's wrap this up with one more look at the complete source code and the running app:"),Object(r.b)("iframe",{src:"https://codesandbox.io/embed/rtk-github-issues-example-03-final-ihttc?fontsize=14&hidenavigation=1&module=%2Fsrc%2Ffeatures%2FissueDetails%2FcommentsSlice.ts&theme=dark&view=editor",style:{width:"100%",height:"500px",border:0,borderRadius:"4px",overflow:"hidden"},title:"rtk-github-issues-example03-final",allow:"geolocation; microphone; camera; midi; vr; accelerometer; gyroscope; payment; ambient-light-sensor; encrypted-media; usb",sandbox:"allow-modals allow-forms allow-popups allow-scripts allow-same-origin"}),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Now, go out there and build something cool!")))}l.isMDXComponent=!0},118:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return m}));var s=n(0),a=n.n(s);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);t&&(s=s.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,s)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,s,a=function(e,t){if(null==e)return{};var n,s,a={},r=Object.keys(e);for(s=0;s<r.length;s++)n=r[s],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(s=0;s<r.length;s++)n=r[s],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=a.a.createContext({}),l=function(e){var t=a.a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i({},t,{},e)),n},p=function(e){var t=l(e.components);return a.a.createElement(u.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=Object(s.forwardRef)((function(e,t){var n=e.components,s=e.mdxType,r=e.originalType,o=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=l(n),d=s,m=p["".concat(o,".").concat(d)]||p[d]||b[d]||r;return n?a.a.createElement(m,i({ref:t},u,{components:n})):a.a.createElement(m,i({ref:t},u))}));function m(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var r=n.length,o=new Array(r);o[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:s,o[1]=i;for(var u=2;u<r;u++)o[u]=n[u];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},119:function(e,t,n){"use strict";e.exports=n(120)},120:function(e,t,n){"use strict";var s=n(121),a="function"==typeof Symbol&&Symbol.for,r=a?Symbol.for("react.element"):60103,o=a?Symbol.for("react.portal"):60106,i=a?Symbol.for("react.fragment"):60107,c=a?Symbol.for("react.strict_mode"):60108,u=a?Symbol.for("react.profiler"):60114,l=a?Symbol.for("react.provider"):60109,p=a?Symbol.for("react.context"):60110,b=a?Symbol.for("react.concurrent_mode"):60111,d=a?Symbol.for("react.forward_ref"):60112,m=a?Symbol.for("react.suspense"):60113,h=a?Symbol.for("react.memo"):60115,f=a?Symbol.for("react.lazy"):60116,g="function"==typeof Symbol&&Symbol.iterator;function j(e,t,n,s,a,r,o,i){if(!e){if(e=void 0,void 0===t)e=Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var c=[n,s,a,r,o,i],u=0;(e=Error(t.replace(/%s/g,(function(){return c[u++]})))).name="Invariant Violation"}throw e.framesToPop=1,e}}function O(e){for(var t=arguments.length-1,n="https://reactjs.org/docs/error-decoder.html?invariant="+e,s=0;s<t;s++)n+="&args[]="+encodeURIComponent(arguments[s+1]);j(!1,"Minified React error #"+e+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",n)}var y={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},w={};function N(e,t,n){this.props=e,this.context=t,this.refs=w,this.updater=n||y}function C(){}function I(e,t,n){this.props=e,this.context=t,this.refs=w,this.updater=n||y}N.prototype.isReactComponent={},N.prototype.setState=function(e,t){"object"!=typeof e&&"function"!=typeof e&&null!=e&&O("85"),this.updater.enqueueSetState(this,e,t,"setState")},N.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},C.prototype=N.prototype;var R=I.prototype=new C;R.constructor=I,s(R,N.prototype),R.isPureReactComponent=!0;var k={current:null},x={current:null},v=Object.prototype.hasOwnProperty,S={key:!0,ref:!0,__self:!0,__source:!0};function _(e,t,n){var s=void 0,a={},o=null,i=null;if(null!=t)for(s in void 0!==t.ref&&(i=t.ref),void 0!==t.key&&(o=""+t.key),t)v.call(t,s)&&!S.hasOwnProperty(s)&&(a[s]=t[s]);var c=arguments.length-2;if(1===c)a.children=n;else if(1<c){for(var u=Array(c),l=0;l<c;l++)u[l]=arguments[l+2];a.children=u}if(e&&e.defaultProps)for(s in c=e.defaultProps)void 0===a[s]&&(a[s]=c[s]);return{$$typeof:r,type:e,key:o,ref:i,props:a,_owner:x.current}}function P(e){return"object"==typeof e&&null!==e&&e.$$typeof===r}var D=/\/+/g,T=[];function A(e,t,n,s){if(T.length){var a=T.pop();return a.result=e,a.keyPrefix=t,a.func=n,a.context=s,a.count=0,a}return{result:e,keyPrefix:t,func:n,context:s,count:0}}function E(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>T.length&&T.push(e)}function L(e,t,n){return null==e?0:function e(t,n,s,a){var i=typeof t;"undefined"!==i&&"boolean"!==i||(t=null);var c=!1;if(null===t)c=!0;else switch(i){case"string":case"number":c=!0;break;case"object":switch(t.$$typeof){case r:case o:c=!0}}if(c)return s(a,t,""===n?"."+F(t,0):n),1;if(c=0,n=""===n?".":n+":",Array.isArray(t))for(var u=0;u<t.length;u++){var l=n+F(i=t[u],u);c+=e(i,l,s,a)}else if(null===t||"object"!=typeof t?l=null:l="function"==typeof(l=g&&t[g]||t["@@iterator"])?l:null,"function"==typeof l)for(t=l.call(t),u=0;!(i=t.next()).done;)c+=e(i=i.value,l=n+F(i,u++),s,a);else"object"===i&&O("31","[object Object]"===(s=""+t)?"object with keys {"+Object.keys(t).join(", ")+"}":s,"");return c}(e,"",t,n)}function F(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,(function(e){return t[e]}))}(e.key):t.toString(36)}function q(e,t){e.func.call(e.context,t,e.count++)}function M(e,t,n){var s=e.result,a=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?U(e,s,n,(function(e){return e})):null!=e&&(P(e)&&(e=function(e,t){return{$$typeof:r,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(e,a+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(D,"$&/")+"/")+n)),s.push(e))}function U(e,t,n,s,a){var r="";null!=n&&(r=(""+n).replace(D,"$&/")+"/"),L(e,M,t=A(t,r,s,a)),E(t)}function W(){var e=k.current;return null===e&&O("321"),e}var $={Children:{map:function(e,t,n){if(null==e)return e;var s=[];return U(e,s,null,t,n),s},forEach:function(e,t,n){if(null==e)return e;L(e,q,t=A(null,null,t,n)),E(t)},count:function(e){return L(e,(function(){return null}),null)},toArray:function(e){var t=[];return U(e,t,null,(function(e){return e})),t},only:function(e){return P(e)||O("143"),e}},createRef:function(){return{current:null}},Component:N,PureComponent:I,createContext:function(e,t){return void 0===t&&(t=null),(e={$$typeof:p,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:l,_context:e},e.Consumer=e},forwardRef:function(e){return{$$typeof:d,render:e}},lazy:function(e){return{$$typeof:f,_ctor:e,_status:-1,_result:null}},memo:function(e,t){return{$$typeof:h,type:e,compare:void 0===t?null:t}},useCallback:function(e,t){return W().useCallback(e,t)},useContext:function(e,t){return W().useContext(e,t)},useEffect:function(e,t){return W().useEffect(e,t)},useImperativeHandle:function(e,t,n){return W().useImperativeHandle(e,t,n)},useDebugValue:function(){},useLayoutEffect:function(e,t){return W().useLayoutEffect(e,t)},useMemo:function(e,t){return W().useMemo(e,t)},useReducer:function(e,t,n){return W().useReducer(e,t,n)},useRef:function(e){return W().useRef(e)},useState:function(e){return W().useState(e)},Fragment:i,StrictMode:c,Suspense:m,createElement:_,cloneElement:function(e,t,n){null==e&&O("267",e);var a=void 0,o=s({},e.props),i=e.key,c=e.ref,u=e._owner;if(null!=t){void 0!==t.ref&&(c=t.ref,u=x.current),void 0!==t.key&&(i=""+t.key);var l=void 0;for(a in e.type&&e.type.defaultProps&&(l=e.type.defaultProps),t)v.call(t,a)&&!S.hasOwnProperty(a)&&(o[a]=void 0===t[a]&&void 0!==l?l[a]:t[a])}if(1===(a=arguments.length-2))o.children=n;else if(1<a){l=Array(a);for(var p=0;p<a;p++)l[p]=arguments[p+2];o.children=l}return{$$typeof:r,type:e.type,key:i,ref:c,props:o,_owner:u}},createFactory:function(e){var t=_.bind(null,e);return t.type=e,t},isValidElement:P,version:"16.8.6",unstable_ConcurrentMode:b,unstable_Profiler:u,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentDispatcher:k,ReactCurrentOwner:x,assign:s}},H={default:$},B=H&&$||H;e.exports=B.default||B},121:function(e,t,n){"use strict";var s=Object.getOwnPropertySymbols,a=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;function o(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var s={};return"abcdefghijklmnopqrst".split("").forEach((function(e){s[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},s)).join("")}catch(a){return!1}}()?Object.assign:function(e,t){for(var n,i,c=o(e),u=1;u<arguments.length;u++){for(var l in n=Object(arguments[u]))a.call(n,l)&&(c[l]=n[l]);if(s){i=s(n);for(var p=0;p<i.length;p++)r.call(n,i[p])&&(c[i[p]]=n[i[p]])}}return c}}}]);